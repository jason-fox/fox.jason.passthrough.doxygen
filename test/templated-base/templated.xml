<?xml version="1.0" standalone="yes"?>
<doxygen version="1.9.5" xml:lang="en-US"><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="class_types_1_1_my_buffer" kind="class" language="C++" prot="public">
    <compoundname>Types::MyBuffer</compoundname>
    <basecompoundref refid="class_types_1_1_ring_buffer" prot="public" virt="non-virtual">Types::RingBuffer&lt; int &gt;</basecompoundref>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Types::RingBuffer&lt; int &gt;</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Types::MyBuffer</label>
        <link refid="class_types_1_1_my_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Types::RingBufferBase&lt; ElementType &gt;</label>
        <link refid="class_types_1_1_ring_buffer_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Types::RingBuffer&lt; int &gt;</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Types::MyBuffer</label>
        <link refid="class_types_1_1_my_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Types::RingBufferBase&lt; ElementType &gt;</label>
        <link refid="class_types_1_1_ring_buffer_base"/>
      </node>
    </collaborationgraph>
    <location file="test.cpp" line="50" column="5" bodyfile="test.cpp" bodystart="50" bodyend="51"/>
    <listofallmembers>
      <member refid="class_types_1_1_ring_buffer_1a75dbabbe5b5a0c94dca1eeb3db168557" prot="public" virt="non-virtual"><scope>Types::MyBuffer</scope><name>base</name></member>
      <member refid="class_types_1_1_ring_buffer_1a2e46633f65c98bbff8fefee9802f9ab6" prot="public" virt="virtual"><scope>Types::MyBuffer</scope><name>get</name></member>
      <member refid="class_types_1_1_ring_buffer_1a1ba9fe337b57dae1a4d08e2d4a3fe3e4" prot="public" virt="non-virtual"><scope>Types::MyBuffer</scope><name>RingBuffer</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1a38496b3bc8d3f751d58fdb45a1c6b6f3" prot="public" virt="non-virtual"><scope>Types::MyBuffer</scope><name>RingBufferBase</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1a2d96c18fbc183ea371603cc102971e38" prot="public" virt="virtual"><scope>Types::MyBuffer</scope><name>~RingBufferBase</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="class_types_1_1_ring_buffer" kind="class" language="C++" prot="public">
    <compoundname>Types::RingBuffer</compoundname>
    <basecompoundref refid="class_types_1_1_ring_buffer_base" prot="public" virt="non-virtual">Types::RingBufferBase&lt; ElementType &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class ElementType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_types_1_1_ring_buffer_1a75dbabbe5b5a0c94dca1eeb3db168557" prot="public" static="no">
        <type><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase</ref>&lt; ElementType &gt;</type>
        <definition>using Types::RingBuffer&lt; ElementType &gt;::base =  RingBufferBase&lt;ElementType&gt;</definition>
        <argsstring/>
        <name>base</name>
        <qualifiedname>Types::RingBuffer::base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="38" column="9" bodyfile="test.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_types_1_1_ring_buffer_1a1ba9fe337b57dae1a4d08e2d4a3fe3e4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type/>
        <definition>Types::RingBuffer&lt; ElementType &gt;::RingBuffer</definition>
        <argsstring>(unsigned int numberOfElements)</argsstring>
        <name>RingBuffer</name>
        <qualifiedname>Types::RingBuffer::RingBuffer</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>numberOfElements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="40" column="18" bodyfile="test.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_types_1_1_ring_buffer_1a2e46633f65c98bbff8fefee9802f9ab6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>ElementType</type>
        <definition>ElementType Types::RingBuffer&lt; ElementType &gt;::get</definition>
        <argsstring>() override</argsstring>
        <name>get</name>
        <qualifiedname>Types::RingBuffer::get</qualifiedname>
        <reimplements refid="class_types_1_1_ring_buffer_base_1a60418a5cfa88113f16ed9bf79a9f028f">get</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="45" column="21" bodyfile="test.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Types::RingBuffer&lt; ElementType &gt;</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Types::RingBufferBase&lt; ElementType &gt;</label>
        <link refid="class_types_1_1_ring_buffer_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Types::RingBuffer&lt; ElementType &gt;</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Types::RingBufferBase&lt; ElementType &gt;</label>
        <link refid="class_types_1_1_ring_buffer_base"/>
      </node>
    </collaborationgraph>
    <location file="test.cpp" line="35" column="5" bodyfile="test.cpp" bodystart="36" bodyend="48"/>
    <listofallmembers>
      <member refid="class_types_1_1_ring_buffer_1a75dbabbe5b5a0c94dca1eeb3db168557" prot="public" virt="non-virtual"><scope>Types::RingBuffer</scope><name>base</name></member>
      <member refid="class_types_1_1_ring_buffer_1a2e46633f65c98bbff8fefee9802f9ab6" prot="public" virt="virtual"><scope>Types::RingBuffer</scope><name>get</name></member>
      <member refid="class_types_1_1_ring_buffer_1a1ba9fe337b57dae1a4d08e2d4a3fe3e4" prot="public" virt="non-virtual"><scope>Types::RingBuffer</scope><name>RingBuffer</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1a38496b3bc8d3f751d58fdb45a1c6b6f3" prot="public" virt="non-virtual"><scope>Types::RingBuffer</scope><name>RingBufferBase</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1a2d96c18fbc183ea371603cc102971e38" prot="public" virt="virtual"><scope>Types::RingBuffer</scope><name>~RingBufferBase</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="class_types_1_1_ring_buffer_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Types::RingBufferBase</compoundname>
    <derivedcompoundref refid="class_types_1_1_ring_buffer" prot="public" virt="non-virtual">Types::RingBuffer&lt; int &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_types_1_1_ring_buffer" prot="public" virt="non-virtual">Types::RingBuffer&lt; ElementType &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class ElementType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_types_1_1_ring_buffer_base_1a38496b3bc8d3f751d58fdb45a1c6b6f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>Types::RingBufferBase&lt; ElementType &gt;::RingBufferBase</definition>
        <argsstring>(unsigned int numberOfElements)</argsstring>
        <name>RingBufferBase</name>
        <qualifiedname>Types::RingBufferBase::RingBufferBase</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>numberOfElements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="25" column="9" bodyfile="test.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_types_1_1_ring_buffer_base_1a2d96c18fbc183ea371603cc102971e38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type/>
        <definition>virtual Types::RingBufferBase&lt; ElementType &gt;::~RingBufferBase</definition>
        <argsstring>()</argsstring>
        <name>~RingBufferBase</name>
        <qualifiedname>Types::RingBufferBase::~RingBufferBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="28" column="17" bodyfile="test.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_types_1_1_ring_buffer_base_1a60418a5cfa88113f16ed9bf79a9f028f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>ElementType</type>
        <definition>virtual ElementType Types::RingBufferBase&lt; ElementType &gt;::get</definition>
        <argsstring>()=0</argsstring>
        <name>get</name>
        <qualifiedname>Types::RingBufferBase::get</qualifiedname>
        <reimplementedby refid="class_types_1_1_ring_buffer_1a2e46633f65c98bbff8fefee9802f9ab6">get</reimplementedby>
        <reimplementedby refid="class_types_1_1_ring_buffer_1a2e46633f65c98bbff8fefee9802f9ab6">get</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="31" column="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A customizable ring buffer </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Types::RingBuffer&lt; int &gt;</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Types::MyBuffer</label>
        <link refid="class_types_1_1_my_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Types::RingBuffer&lt; ElementType &gt;</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Types::RingBufferBase&lt; ElementType &gt;</label>
        <link refid="class_types_1_1_ring_buffer_base"/>
      </node>
    </inheritancegraph>
    <location file="test.cpp" line="22" column="5" bodyfile="test.cpp" bodystart="23" bodyend="32"/>
    <listofallmembers>
      <member refid="class_types_1_1_ring_buffer_base_1a60418a5cfa88113f16ed9bf79a9f028f" prot="public" virt="pure-virtual"><scope>Types::RingBufferBase</scope><name>get</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1a38496b3bc8d3f751d58fdb45a1c6b6f3" prot="public" virt="non-virtual"><scope>Types::RingBufferBase</scope><name>RingBufferBase</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1a2d96c18fbc183ea371603cc102971e38" prot="public" virt="virtual"><scope>Types::RingBufferBase</scope><name>~RingBufferBase</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespace_types" kind="namespace" language="C++">
    <compoundname>Types</compoundname>
    <innerclass refid="class_types_1_1_my_buffer" prot="public">Types::MyBuffer</innerclass>
    <innerclass refid="class_types_1_1_ring_buffer" prot="public">Types::RingBuffer</innerclass>
    <innerclass refid="class_types_1_1_ring_buffer_base" prot="public">Types::RingBufferBase</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="test.cpp" line="16" column="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="test_8cpp" kind="file" language="C++">
    <compoundname>test.cpp</compoundname>
    <includes local="no">QMutex</includes>
    <includes local="no">QMutexLocker</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="1">
        <label>test.cpp</label>
        <link refid="test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>QMutex</label>
      </node>
      <node id="3">
        <label>QMutexLocker</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_types_1_1_ring_buffer_base" prot="public">Types::RingBufferBase</innerclass>
    <innerclass refid="class_types_1_1_ring_buffer" prot="public">Types::RingBuffer</innerclass>
    <innerclass refid="class_types_1_1_my_buffer" prot="public">Types::MyBuffer</innerclass>
    <innernamespace refid="namespace_types">Types</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="test_8cpp_1a4b9533eb7302d04b18b2fe873d2fddc0" prot="public" static="no">
        <name>RINGBUFFER_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="9" column="9" bodyfile="test.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of the class RingBuffer </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>RINGBUFFER_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>RINGBUFFER_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="comment">/*<sp/>System<sp/>includes<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;QMutex&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;QMutexLocker&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="14"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Types</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ElementType&gt;</highlight></codeline>
<codeline lineno="22" refid="class_types_1_1_ring_buffer_base" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfElements)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">~RingBufferBase</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ElementType<sp/>get()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ElementType&gt;</highlight></codeline>
<codeline lineno="35" refid="class_types_1_1_ring_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_types_1_1_ring_buffer" kindref="compound">RingBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase</ref>&lt;ElementType&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">base</ref><sp/>=<sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase&lt;ElementType&gt;</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_types_1_1_ring_buffer" kindref="compound">RingBuffer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfElements)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase&lt;ElementType&gt;</ref>(numberOfElements)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ElementType<sp/>get()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"/></codeline>
<codeline lineno="50" refid="class_types_1_1_my_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_types_1_1_my_buffer" kindref="compound">MyBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_types_1_1_ring_buffer" kindref="compound">RingBuffer</ref>&lt;int&gt;<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Types</highlight><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RINGBUFFER_H</highlight></codeline>
    </programlisting>
    <location file="test.cpp"/>
  </compounddef></doxygen>