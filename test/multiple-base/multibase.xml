<?xml version="1.0" standalone="yes"?>
<doxygen version="1.9.5" xml:lang="en-US"><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="class_types_1_1_ring_buffer" kind="class" language="C++" prot="public">
    <compoundname>Types::RingBuffer</compoundname>
    <basecompoundref refid="class_types_1_1_ring_buffer_base" prot="public" virt="non-virtual">Types::RingBufferBase</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_types_1_1_ring_buffer_1a7688b0a0d91136ac1e40602b6365455c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type/>
        <definition>Types::RingBuffer::RingBuffer</definition>
        <argsstring>(unsigned int numberOfElements)</argsstring>
        <name>RingBuffer</name>
        <qualifiedname>Types::RingBuffer::RingBuffer</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>numberOfElements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="33" column="18" bodyfile="test.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_types_1_1_ring_buffer_1ad71645547785672e8e3925ff74d416fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int Types::RingBuffer::get</definition>
        <argsstring>() override</argsstring>
        <name>get</name>
        <qualifiedname>Types::RingBuffer::get</qualifiedname>
        <reimplements refid="class_types_1_1_ring_buffer_base_1a8fd457af2fdfbb7ca6c62eb5a16b94db">get</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="37" column="13" bodyfile="test.cpp" bodystart="37" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>Types::RingBuffer</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Types::RingBufferBase</label>
        <link refid="class_types_1_1_ring_buffer_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>Types::RingBuffer</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Types::RingBufferBase</label>
        <link refid="class_types_1_1_ring_buffer_base"/>
      </node>
    </collaborationgraph>
    <location file="test.cpp" line="30" column="5" bodyfile="test.cpp" bodystart="30" bodyend="44"/>
    <listofallmembers>
      <member refid="class_types_1_1_ring_buffer_1ad71645547785672e8e3925ff74d416fa" prot="public" virt="virtual"><scope>Types::RingBuffer</scope><name>get</name></member>
      <member refid="class_types_1_1_ring_buffer_1a7688b0a0d91136ac1e40602b6365455c" prot="public" virt="non-virtual"><scope>Types::RingBuffer</scope><name>RingBuffer</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1ae313c950beb73aecce9a78ec5ed677b1" prot="public" virt="non-virtual"><scope>Types::RingBuffer</scope><name>RingBufferBase</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1a9b8864007eb6149a05240f20cc299966" prot="public" virt="virtual"><scope>Types::RingBuffer</scope><name>~RingBufferBase</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="class_types_1_1_ring_buffer_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Types::RingBufferBase</compoundname>
    <derivedcompoundref refid="class_types_1_1_ring_buffer" prot="public" virt="non-virtual">Types::RingBuffer</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_types_1_1_ring_buffer_base_1ae313c950beb73aecce9a78ec5ed677b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type/>
        <definition>Types::RingBufferBase::RingBufferBase</definition>
        <argsstring>(unsigned int numberOfElements)</argsstring>
        <name>RingBufferBase</name>
        <qualifiedname>Types::RingBufferBase::RingBufferBase</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>numberOfElements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="21" column="9" bodyfile="test.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_types_1_1_ring_buffer_base_1a9b8864007eb6149a05240f20cc299966" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type/>
        <definition>virtual Types::RingBufferBase::~RingBufferBase</definition>
        <argsstring>()</argsstring>
        <name>~RingBufferBase</name>
        <qualifiedname>Types::RingBufferBase::~RingBufferBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="24" column="17" bodyfile="test.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_types_1_1_ring_buffer_base_1a8fd457af2fdfbb7ca6c62eb5a16b94db" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int Types::RingBufferBase::get</definition>
        <argsstring>()=0</argsstring>
        <name>get</name>
        <qualifiedname>Types::RingBufferBase::get</qualifiedname>
        <reimplementedby refid="class_types_1_1_ring_buffer_1ad71645547785672e8e3925ff74d416fa">get</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="27" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A customizable ring buffer </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Types::RingBuffer</label>
        <link refid="class_types_1_1_ring_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Types::RingBufferBase</label>
        <link refid="class_types_1_1_ring_buffer_base"/>
      </node>
    </inheritancegraph>
    <location file="test.cpp" line="18" column="5" bodyfile="test.cpp" bodystart="19" bodyend="28"/>
    <listofallmembers>
      <member refid="class_types_1_1_ring_buffer_base_1a8fd457af2fdfbb7ca6c62eb5a16b94db" prot="public" virt="pure-virtual"><scope>Types::RingBufferBase</scope><name>get</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1ae313c950beb73aecce9a78ec5ed677b1" prot="public" virt="non-virtual"><scope>Types::RingBufferBase</scope><name>RingBufferBase</name></member>
      <member refid="class_types_1_1_ring_buffer_base_1a9b8864007eb6149a05240f20cc299966" prot="public" virt="virtual"><scope>Types::RingBufferBase</scope><name>~RingBufferBase</name></member>
    </listofallmembers>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="namespace_types" kind="namespace" language="C++">
    <compoundname>Types</compoundname>
    <innerclass refid="class_types_1_1_ring_buffer" prot="public">Types::RingBuffer</innerclass>
    <innerclass refid="class_types_1_1_ring_buffer_base" prot="public">Types::RingBufferBase</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="test.cpp" line="13" column="1"/>
  </compounddef><compounddef xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="test_8cpp" kind="file" language="C++">
    <compoundname>test.cpp</compoundname>
    <includes local="no">QObject</includes>
    <includes local="no">QMutexLocker</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="1">
        <label>test.cpp</label>
        <link refid="test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>QMutexLocker</label>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_types_1_1_ring_buffer_base" prot="public">Types::RingBufferBase</innerclass>
    <innerclass refid="class_types_1_1_ring_buffer" prot="public">Types::RingBuffer</innerclass>
    <innernamespace refid="namespace_types">Types</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="test_8cpp_1a4b9533eb7302d04b18b2fe873d2fddc0" prot="public" static="no">
        <name>RINGBUFFER_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test.cpp" line="8" column="9" bodyfile="test.cpp" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of the class RingBuffer </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="preprocessor">#ifndef<sp/>RINGBUFFER_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight class="preprocessor">#define<sp/>RINGBUFFER_H</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">/*<sp/>System<sp/>includes<sp/>*/</highlight><highlight class="normal"/></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;QMutexLocker&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"/></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Types</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18" refid="class_types_1_1_ring_buffer_base" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfElements)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">~RingBufferBase</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30" refid="class_types_1_1_ring_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_types_1_1_ring_buffer" kindref="compound">RingBuffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase</ref><sp/>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_types_1_1_ring_buffer" kindref="compound">RingBuffer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfElements)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_types_1_1_ring_buffer_base" kindref="compound">RingBufferBase</ref>(numberOfElements)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get()</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Types</highlight><highlight class="normal"/></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"/><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>RINGBUFFER_H</highlight></codeline>
    </programlisting>
    <location file="test.cpp"/>
  </compounddef></doxygen>