<?xml version="1.0" standalone="yes"?>
<doxygen version="1.8.16"><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
    kind="interface"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::persist::Adapter</compoundname>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.persist.file_adapter.FileAdapter</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a2bd0addc7a7c609701426e1deaf0500d"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.Adapter.loadPolicy</definition>
        <argsstring>(Model model)</argsstring>
        <name>loadPolicy</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a660809ce7a926d82a1b0d3ce067277d1"
        >loadPolicy</reimplementedby>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>loadPolicy loads all policy rules from the storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Adapter.java"
          line="30"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a1b61f1b7d0ef8a36d17611c5fbf4e472"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.Adapter.savePolicy</definition>
        <argsstring>(Model model)</argsstring>
        <name>savePolicy</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a8e92b4356d57af27bac9e497163f66aa"
        >savePolicy</reimplementedby>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>savePolicy saves all policy rules to the storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Adapter.java"
          line="37"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a436844fd12e5fa24d861948f675128cf"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.Adapter.addPolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>addPolicy</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a2eab050005e0a1eda6e70c56ead969bd"
        >addPolicy</reimplementedby>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>addPolicy adds a policy rule to the storage. </para>
        </briefdescription>
        <detaileddescription>
<para>This is part of the Auto-Save feature.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rule</parametername>
</parameternamelist>
<parameterdescription>
<para>the rule, like (sub, obj, act). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Adapter.java"
          line="47"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a8eb5c047ab701a8753d09384b30c0823"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.Adapter.removePolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>removePolicy</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1afb6b04ec5c62eff87be7d50a4126c58b"
        >removePolicy</reimplementedby>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>removePolicy removes a policy rule from the storage. </para>
        </briefdescription>
        <detaileddescription>
<para>This is part of the Auto-Save feature.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rule</parametername>
</parameternamelist>
<parameterdescription>
<para>the rule, like (sub, obj, act). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Adapter.java"
          line="57"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a0bcada1669a34b2a0817047ed111975d"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.Adapter.removeFilteredPolicy</definition>
        <argsstring
        >(String sec, String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>removeFilteredPolicy</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1af512fb66e4f9aa341e0d8f94d47f56db"
        >removeFilteredPolicy</reimplementedby>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >removeFilteredPolicy removes policy rules that match the filter from the storage. </para>
        </briefdescription>
        <detaileddescription>
<para>This is part of the Auto-Save feature.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Adapter.java"
          line="69"
          column="10"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
          kindref="compound"
        >Adapter</ref> is the interface for Casbin adapters. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org.casbin.jcasbin.persist.file_adapter.FileAdapter</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
        />
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.persist.Adapter</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"/>
      </node>
    </inheritancegraph>
    <location
      file="src/main/java/org/casbin/jcasbin/persist/Adapter.java"
      line="24"
      column="25"
      bodyfile="src/main/java/org/casbin/jcasbin/persist/Adapter.java"
      bodystart="24"
      bodyend="70"
    />
    <listofallmembers>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a436844fd12e5fa24d861948f675128cf"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::persist::Adapter</scope><name
        >addPolicy</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a2bd0addc7a7c609701426e1deaf0500d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::persist::Adapter</scope><name
        >loadPolicy</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a0bcada1669a34b2a0817047ed111975d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::persist::Adapter</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a8eb5c047ab701a8753d09384b30c0823"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::persist::Adapter</scope><name
        >removePolicy</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a1b61f1b7d0ef8a36d17611c5fbf4e472"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::persist::Adapter</scope><name
        >savePolicy</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::model::Assertion</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a312f10481f3f7d01f2f3275662920269"
        prot="public"
        static="no"
        mutable="no"
      >
        <type>String</type>
        <definition>String org.casbin.jcasbin.model.Assertion.key</definition>
        <argsstring/>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          line="28"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          bodystart="28"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a89ba9d8263387e4740fb3e1c944bc35e"
        prot="public"
        static="no"
        mutable="no"
      >
        <type>String</type>
        <definition>String org.casbin.jcasbin.model.Assertion.value</definition>
        <argsstring/>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          line="29"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          bodystart="29"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1ad5e66fe8cdd7a5b6c4a3db62eac66ba5"
        prot="public"
        static="no"
        mutable="no"
      >
        <type>String[]</type>
        <definition
        >String [] org.casbin.jcasbin.model.Assertion.tokens</definition>
        <argsstring/>
        <name>tokens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          line="30"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          bodystart="30"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a625c8460a3d563e62cf2eb68313718b9"
        prot="public"
        static="no"
        mutable="no"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.model.Assertion.policy</definition>
        <argsstring/>
        <name>policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          line="31"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          bodystart="31"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a16a30b09364039d3305c63e4b4e68025"
        prot="public"
        static="no"
        mutable="no"
      >
        <type><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref></type>
        <definition
        >RoleManager org.casbin.jcasbin.model.Assertion.rm</definition>
        <argsstring/>
        <name>rm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          line="32"
          column="24"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          bodystart="32"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1aea6435b08e97d012fc37d6a2c38c6272"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.model.Assertion.Assertion</definition>
        <argsstring>()</argsstring>
        <name>Assertion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          line="34"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          bodystart="34"
          bodyend="36"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a620874e07e5d9412f953a66611d0a4cb"
        prot="protected"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.model.Assertion.buildRoleLinks</definition>
        <argsstring>(RoleManager rm)</argsstring>
        <name>buildRoleLinks</name>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
              kindref="compound"
            >RoleManager</ref></type>
          <declname>rm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          line="38"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Assertion.java"
          bodystart="38"
          bodyend="65"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
          kindref="compound"
        >Assertion</ref> represents an expression in a section of the model. </para>
    </briefdescription>
    <detaileddescription>
<para>For example: r = sub, obj, act </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.model.Assertion</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"/>
        <childnode refid="2" relation="usage">
          <edgelabel>rm</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>policy</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>List&lt; List&lt; String &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
      line="27"
      column="23"
      bodyfile="src/main/java/org/casbin/jcasbin/model/Assertion.java"
      bodystart="27"
      bodyend="66"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1aea6435b08e97d012fc37d6a2c38c6272"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Assertion</scope><name
        >Assertion</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a620874e07e5d9412f953a66611d0a4cb"
        prot="protected"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Assertion</scope><name
        >buildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a312f10481f3f7d01f2f3275662920269"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Assertion</scope><name
        >key</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a625c8460a3d563e62cf2eb68313718b9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Assertion</scope><name
        >policy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a16a30b09364039d3305c63e4b4e68025"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Assertion</scope><name
        >rm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1ad5e66fe8cdd7a5b6c4a3db62eac66ba5"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Assertion</scope><name
        >tokens</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion_1a89ba9d8263387e4740fb3e1c944bc35e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Assertion</scope><name
        >value</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::util::BuiltInFunctions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1ad3b0cc2caf9116609608cce5e056222e"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.BuiltInFunctions.keyMatch</definition>
        <argsstring>(String key1, String key2)</argsstring>
        <name>keyMatch</name>
        <param>
          <type>String</type>
          <declname>key1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>key2</declname>
        </param>
        <briefdescription>
<para
          >keyMatch determines whether key1 matches the pattern of key2 (similar to RESTful path), key2 can contain a *. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, "/foo/bar" matches "/foo/*"</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second argument. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether key1 matches key2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          line="39"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          bodystart="39"
          bodyend="49"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a1d6b92decc432e14336302bab32d5dab"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.BuiltInFunctions.keyMatch2</definition>
        <argsstring>(String key1, String key2)</argsstring>
        <name>keyMatch2</name>
        <param>
          <type>String</type>
          <declname>key1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>key2</declname>
        </param>
        <briefdescription>
<para
          >keyMatch2 determines whether key1 matches the pattern of key2 (similar to RESTful path), key2 can contain a *. </para>
        </briefdescription>
        <detaileddescription>
<para
          >For example, "/foo/bar" matches "/foo/*", "/resource1" matches "/:resource"</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second argument. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether key1 matches key2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          line="59"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          bodystart="59"
          bodyend="72"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a6b3fc9b8463a69c7a2bbae2f796041ea"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.BuiltInFunctions.keyMatch3</definition>
        <argsstring>(String key1, String key2)</argsstring>
        <name>keyMatch3</name>
        <param>
          <type>String</type>
          <declname>key1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>key2</declname>
        </param>
        <briefdescription>
<para
          >keyMatch3 determines whether key1 matches the pattern of key2 (similar to RESTful path), key2 can contain a *. </para>
        </briefdescription>
        <detaileddescription>
<para
          >For example, "/foo/bar" matches "/foo/*", "/resource1" matches "/{resource}"</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second argument. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether key1 matches key2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          line="82"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          bodystart="82"
          bodyend="95"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a683174246e119af38b41fedba08bcdc8"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.BuiltInFunctions.regexMatch</definition>
        <argsstring>(String key1, String key2)</argsstring>
        <name>regexMatch</name>
        <param>
          <type>String</type>
          <declname>key1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>key2</declname>
        </param>
        <briefdescription>
<para
          >regexMatch determines whether key1 matches the pattern of key2 in regular expression. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second argument. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether key1 matches key2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          line="104"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          bodystart="104"
          bodyend="106"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a244159f15004c80f7f98ec87230484ef"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.BuiltInFunctions.ipMatch</definition>
        <argsstring>(String ip1, String ip2)</argsstring>
        <name>ipMatch</name>
        <param>
          <type>String</type>
          <declname>ip1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ip2</declname>
        </param>
        <briefdescription>
<para
          >ipMatch determines whether IP address ip1 matches the pattern of IP address ip2, ip2 can be an IP address or a CIDR pattern. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, "192.168.2.123" matches "192.168.2.0/24"</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ip2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second argument. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether ip1 matches ip2. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          line="116"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          bodystart="116"
          bodyend="150"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a613b361b84d46c67f866ad0fb03fee16"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>AviatorFunction</type>
        <definition
        >static AviatorFunction org.casbin.jcasbin.util.BuiltInFunctions.generateGFunction</definition>
        <argsstring>(String name, RoleManager rm)</argsstring>
        <name>generateGFunction</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
              kindref="compound"
            >RoleManager</ref></type>
          <declname>rm</declname>
        </param>
        <briefdescription>
<para>generateGFunction is the factory method of the g(_, _) function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the g(_, _) function, can be "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rm</parametername>
</parameternamelist>
<parameterdescription>
<para>the role manager used by the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          line="159"
          column="35"
          bodyfile="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
          bodystart="159"
          bodyend="190"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
      line="30"
      column="30"
      bodyfile="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
      bodystart="30"
      bodyend="191"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a613b361b84d46c67f866ad0fb03fee16"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::BuiltInFunctions</scope><name
        >generateGFunction</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a244159f15004c80f7f98ec87230484ef"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::BuiltInFunctions</scope><name
        >ipMatch</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1ad3b0cc2caf9116609608cce5e056222e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::BuiltInFunctions</scope><name
        >keyMatch</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a1d6b92decc432e14336302bab32d5dab"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::BuiltInFunctions</scope><name
        >keyMatch2</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a6b3fc9b8463a69c7a2bbae2f796041ea"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::BuiltInFunctions</scope><name
        >keyMatch3</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a683174246e119af38b41fedba08bcdc8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::BuiltInFunctions</scope><name
        >regexMatch</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::exception::CasbinAdapterException</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >RuntimeException</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException_1a05007fe84d5969d9a4dd346be15af22b"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.exception.CasbinAdapterException.CasbinAdapterException</definition>
        <argsstring>(String message)</argsstring>
        <name>CasbinAdapterException</name>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/exception/CasbinAdapterException.java"
          line="19"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinAdapterException.java"
          bodystart="19"
          bodyend="21"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException_1a0b1a567e12def7c2744117c29ea4cbb6"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.exception.CasbinAdapterException.CasbinAdapterException</definition>
        <argsstring>(String message, Throwable cause)</argsstring>
        <name>CasbinAdapterException</name>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <param>
          <type>Throwable</type>
          <declname>cause</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/exception/CasbinAdapterException.java"
          line="23"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinAdapterException.java"
          bodystart="23"
          bodyend="25"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.casbin.jcasbin.exception.CasbinAdapterException</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RuntimeException</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.casbin.jcasbin.exception.CasbinAdapterException</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RuntimeException</label>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinAdapterException.java"
      line="17"
      column="53"
      bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinAdapterException.java"
      bodystart="17"
      bodyend="26"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException_1a05007fe84d5969d9a4dd346be15af22b"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::exception::CasbinAdapterException</scope><name
        >CasbinAdapterException</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException_1a0b1a567e12def7c2744117c29ea4cbb6"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::exception::CasbinAdapterException</scope><name
        >CasbinAdapterException</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::exception::CasbinConfigException</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >RuntimeException</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException_1a40c7bfe46d0703b03fd29e214f29b9fe"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.exception.CasbinConfigException.CasbinConfigException</definition>
        <argsstring>(String message, Throwable cause)</argsstring>
        <name>CasbinConfigException</name>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <param>
          <type>Throwable</type>
          <declname>cause</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/exception/CasbinConfigException.java"
          line="19"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinConfigException.java"
          bodystart="19"
          bodyend="21"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.casbin.jcasbin.exception.CasbinConfigException</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RuntimeException</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.casbin.jcasbin.exception.CasbinConfigException</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RuntimeException</label>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinConfigException.java"
      line="17"
      column="52"
      bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinConfigException.java"
      bodystart="17"
      bodyend="22"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException_1a40c7bfe46d0703b03fd29e214f29b9fe"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::exception::CasbinConfigException</scope><name
        >CasbinConfigException</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::exception::CasbinMatcherException</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >RuntimeException</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException_1a35975a4c284f0bcbb540744589ddb150"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.exception.CasbinMatcherException.CasbinMatcherException</definition>
        <argsstring>(String message)</argsstring>
        <name>CasbinMatcherException</name>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/exception/CasbinMatcherException.java"
          line="19"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinMatcherException.java"
          bodystart="19"
          bodyend="21"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException_1ace9298154f9e3027b39a003e59303c18"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.exception.CasbinMatcherException.CasbinMatcherException</definition>
        <argsstring>(String message, Throwable cause)</argsstring>
        <name>CasbinMatcherException</name>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <param>
          <type>Throwable</type>
          <declname>cause</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/exception/CasbinMatcherException.java"
          line="23"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinMatcherException.java"
          bodystart="23"
          bodyend="25"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.casbin.jcasbin.exception.CasbinMatcherException</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RuntimeException</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.casbin.jcasbin.exception.CasbinMatcherException</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RuntimeException</label>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinMatcherException.java"
      line="17"
      column="53"
      bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinMatcherException.java"
      bodystart="17"
      bodyend="26"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException_1a35975a4c284f0bcbb540744589ddb150"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::exception::CasbinMatcherException</scope><name
        >CasbinMatcherException</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException_1ace9298154f9e3027b39a003e59303c18"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::exception::CasbinMatcherException</scope><name
        >CasbinMatcherException</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::exception::CasbinPolicyFileNotFoundException</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >RuntimeException</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException_1a3a3dbd784a18399e2dcd4b240af5699a"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.exception.CasbinPolicyFileNotFoundException.CasbinPolicyFileNotFoundException</definition>
        <argsstring>(String message)</argsstring>
        <name>CasbinPolicyFileNotFoundException</name>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/exception/CasbinPolicyFileNotFoundException.java"
          line="19"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinPolicyFileNotFoundException.java"
          bodystart="19"
          bodyend="21"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>RuntimeException</label>
      </node>
      <node id="1">
        <label
        >org.casbin.jcasbin.exception.CasbinPolicyFileNotFoundException</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>RuntimeException</label>
      </node>
      <node id="1">
        <label
        >org.casbin.jcasbin.exception.CasbinPolicyFileNotFoundException</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinPolicyFileNotFoundException.java"
      line="17"
      column="64"
      bodyfile="src/main/java/org/casbin/jcasbin/exception/CasbinPolicyFileNotFoundException.java"
      bodystart="17"
      bodyend="23"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException_1a3a3dbd784a18399e2dcd4b240af5699a"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::exception::CasbinPolicyFileNotFoundException</scope><name
        >CasbinPolicyFileNotFoundException</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::config::Config</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a33cccc37b22046eea096bae13d6a1c27"
        prot="private"
        static="yes"
        mutable="no"
      >
        <type>final String</type>
        <definition
        >final String org.casbin.jcasbin.config.Config.DEFAULT_SECTION</definition>
        <argsstring/>
        <name>DEFAULT_SECTION</name>
        <initializer>= "default"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="25"
          column="33"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="25"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a949baac0458e7c669647018b65c49d47"
        prot="private"
        static="yes"
        mutable="no"
      >
        <type>final String</type>
        <definition
        >final String org.casbin.jcasbin.config.Config.DEFAULT_COMMENT</definition>
        <argsstring/>
        <name>DEFAULT_COMMENT</name>
        <initializer>= "#"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="26"
          column="33"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="26"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a0b228cd6622ffa4fef6269252a8688e2"
        prot="private"
        static="yes"
        mutable="no"
      >
        <type>final String</type>
        <definition
        >final String org.casbin.jcasbin.config.Config.DEFAULT_COMMENT_SEM</definition>
        <argsstring/>
        <name>DEFAULT_COMMENT_SEM</name>
        <initializer>= ";"</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="27"
          column="33"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="27"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1ab44f3cd75c4068308aa2ebcb24f0ad6b"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>ReentrantLock</type>
        <definition
        >ReentrantLock org.casbin.jcasbin.config.Config.lock</definition>
        <argsstring/>
        <name>lock</name>
        <initializer>= new ReentrantLock()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="29"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="29"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a2d746fec5ca2dcec11d2e496c6c73868"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>Map&lt; String, Map&lt; String, String &gt; &gt;</type>
        <definition
        >Map&lt;String, Map&lt;String, String&gt; &gt; org.casbin.jcasbin.config.Config.data</definition>
        <argsstring/>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="32"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="32"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1aa9da8d85bbbe6e5a9c2bf07af52752c6"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.config.Config.Config</definition>
        <argsstring>()</argsstring>
        <name>Config</name>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
              kindref="compound"
            >Config</ref> represents the configuration parser. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="37"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="37"
          bodyend="39"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1aa2d3148aa4eb40573245f2037875424c"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.config.Config.addConfig</definition>
        <argsstring>(String section, String option, String value)</argsstring>
        <name>addConfig</name>
        <param>
          <type>String</type>
          <declname>section</declname>
        </param>
        <param>
          <type>String</type>
          <declname>option</declname>
        </param>
        <param>
          <type>String</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>addConfig adds a new section-&gt;key:value to the configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="79"
          column="21"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="79"
          bodyend="91"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a3911cbda28cf90f6d496c7db8b8ab512"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.config.Config.parse</definition>
        <argsstring>(String fname)</argsstring>
        <name>parse</name>
        <param>
          <type>String</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="93"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="93"
          bodyend="103"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a28fd3c5da310297921b3486f729f5c81"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.config.Config.parseBuffer</definition>
        <argsstring>(BufferedReader buf)</argsstring>
        <name>parseBuffer</name>
        <param>
          <type>BufferedReader</type>
          <declname>buf</declname>
        </param>
        <exceptions> throws IOException </exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="105"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="105"
          bodyend="139"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a443351f97e46e1448eae10b77252265a"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref></type>
        <definition
        >static Config org.casbin.jcasbin.config.Config.newConfig</definition>
        <argsstring>(String confName)</argsstring>
        <name>newConfig</name>
        <param>
          <type>String</type>
          <declname>confName</declname>
        </param>
        <briefdescription>
<para>newConfig create an empty configuration representation from file. </para>
        </briefdescription>
        <detaileddescription>
<para>HELLO WORLD!</para>
<para>This is a simple paragraph with some <computeroutput
            >code</computeroutput> within in.</para>
<para><itemizedlist>
<listitem>
<para>List 1</para>
</listitem>
<listitem>
<para>list 2 <itemizedlist>
<listitem>
</listitem>
</itemizedlist>
</para>
<para>This is another paragraph with some <bold
                  >bold text</bold> within in.</para>
<para/>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>confName</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the constructor of <ref
                        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
                        kindref="compound"
                      >Config</ref>. </para>
</simplesect>
</para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="54"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="54"
          bodyend="58"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a009e75472aacfb467f175be47dde4c6d"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref></type>
        <definition
        >static Config org.casbin.jcasbin.config.Config.newConfigFromText</definition>
        <argsstring>(String text)</argsstring>
        <name>newConfigFromText</name>
        <param>
          <type>String</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para
          >newConfigFromText create an empty configuration representation from text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>the model text. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the constructor of <ref
                  refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
                  kindref="compound"
                >Config</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="66"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="66"
          bodyend="74"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a6ce05f6a6d4f19aca690ea96af800569"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.config.Config.getBool</definition>
        <argsstring>(String key)</argsstring>
        <name>getBool</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="141"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="141"
          bodyend="143"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a99eb0de91e4f0ae6d0654cb40a34175f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>int</type>
        <definition>int org.casbin.jcasbin.config.Config.getInt</definition>
        <argsstring>(String key)</argsstring>
        <name>getInt</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="145"
          column="16"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="145"
          bodyend="147"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1ad5ec6e6887e1056dc976a6633cab3c00"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>float</type>
        <definition>float org.casbin.jcasbin.config.Config.getFloat</definition>
        <argsstring>(String key)</argsstring>
        <name>getFloat</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="149"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="149"
          bodyend="151"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a01f6c11c36be77449fc33d26ba6633e7"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.config.Config.getString</definition>
        <argsstring>(String key)</argsstring>
        <name>getString</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="153"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="153"
          bodyend="155"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a22e2dc8a1c0b3b09b0c1d689237a0c22"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String[]</type>
        <definition
        >String [] org.casbin.jcasbin.config.Config.getStrings</definition>
        <argsstring>(String key)</argsstring>
        <name>getStrings</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="157"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="157"
          bodyend="163"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a9003d8863d76ccb273a83aa376f08fd3"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.config.Config.set</definition>
        <argsstring>(String key, String value)</argsstring>
        <name>set</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <param>
          <type>String</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="165"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="165"
          bodyend="183"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a585048535a66f095434bbdd0b0d4f11c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition>String org.casbin.jcasbin.config.Config.get</definition>
        <argsstring>(String key)</argsstring>
        <name>get</name>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/config/Config.java"
          line="185"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
          bodystart="185"
          bodyend="204"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/config/Config.java"
      line="24"
      column="20"
      bodyfile="src/main/java/org/casbin/jcasbin/config/Config.java"
      bodystart="24"
      bodyend="205"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1aa2d3148aa4eb40573245f2037875424c"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >addConfig</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1aa9da8d85bbbe6e5a9c2bf07af52752c6"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >Config</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a2d746fec5ca2dcec11d2e496c6c73868"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >data</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a949baac0458e7c669647018b65c49d47"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >DEFAULT_COMMENT</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a0b228cd6622ffa4fef6269252a8688e2"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >DEFAULT_COMMENT_SEM</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a33cccc37b22046eea096bae13d6a1c27"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >DEFAULT_SECTION</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a585048535a66f095434bbdd0b0d4f11c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >get</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a6ce05f6a6d4f19aca690ea96af800569"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >getBool</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1ad5ec6e6887e1056dc976a6633cab3c00"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >getFloat</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a99eb0de91e4f0ae6d0654cb40a34175f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >getInt</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a01f6c11c36be77449fc33d26ba6633e7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >getString</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a22e2dc8a1c0b3b09b0c1d689237a0c22"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >getStrings</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1ab44f3cd75c4068308aa2ebcb24f0ad6b"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >lock</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a443351f97e46e1448eae10b77252265a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >newConfig</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a009e75472aacfb467f175be47dde4c6d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >newConfigFromText</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a3911cbda28cf90f6d496c7db8b8ab512"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >parse</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a28fd3c5da310297921b3486f729f5c81"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >parseBuffer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a9003d8863d76ccb273a83aa376f08fd3"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::config::Config</scope><name
        >set</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::main::CoreEnforcer</compoundname>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.main.InternalEnforcer</derivedcompoundref>
      <sectiondef kind="package-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4f8b315b6995c53e3a5653e0b94430ad"
        prot="package"
        static="no"
        mutable="no"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.main.CoreEnforcer.modelPath</definition>
        <argsstring/>
        <name>modelPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="43"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="43"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4250d3c0cc992b6e018ad715491aefcb"
        prot="package"
        static="no"
        mutable="no"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref></type>
        <definition
        >Model org.casbin.jcasbin.main.CoreEnforcer.model</definition>
        <argsstring/>
        <name>model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="44"
          column="11"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="44"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1aebd8d031e1684c0a900721b0113f8c68"
        prot="package"
        static="no"
        mutable="no"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref></type>
        <definition
        >FunctionMap org.casbin.jcasbin.main.CoreEnforcer.fm</definition>
        <argsstring/>
        <name>fm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="45"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="45"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ace22d53520ec336041327c5fde407c9a"
        prot="package"
        static="no"
        mutable="no"
      >
        <type><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref></type>
        <definition
        >Adapter org.casbin.jcasbin.main.CoreEnforcer.adapter</definition>
        <argsstring/>
        <name>adapter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="48"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="48"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad1a7c1d01fe6d718a89520b4d274fc80"
        prot="package"
        static="no"
        mutable="no"
      >
        <type><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
            kindref="compound"
          >Watcher</ref></type>
        <definition
        >Watcher org.casbin.jcasbin.main.CoreEnforcer.watcher</definition>
        <argsstring/>
        <name>watcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="49"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="49"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a77b9617e204bf44558e2d3ad93367025"
        prot="package"
        static="no"
        mutable="no"
      >
        <type><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref></type>
        <definition
        >RoleManager org.casbin.jcasbin.main.CoreEnforcer.rm</definition>
        <argsstring/>
        <name>rm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="50"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="50"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6ec0491ec93be5610f2b3c5ab54f64d7"
        prot="package"
        static="no"
        mutable="no"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.CoreEnforcer.autoSave</definition>
        <argsstring/>
        <name>autoSave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="53"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="53"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1acb180dd0333ec0f905de30fa0ce3fae5"
        prot="package"
        static="no"
        mutable="no"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.CoreEnforcer.autoBuildRoleLinks</definition>
        <argsstring/>
        <name>autoBuildRoleLinks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="54"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="54"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9a483a07c4bdeaee1656d5e4e63096aa"
        prot="private"
        static="no"
        mutable="no"
      >
        <type><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
            kindref="compound"
          >Effector</ref></type>
        <definition
        >Effector org.casbin.jcasbin.main.CoreEnforcer.eft</definition>
        <argsstring/>
        <name>eft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="46"
          column="22"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="46"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1afca9a2ac78d96e730ee2561852fce41d"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.CoreEnforcer.enabled</definition>
        <argsstring/>
        <name>enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="52"
          column="21"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="52"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a538ceb739fd3784340383d6a2031b3c5"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="56"
          column="10"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="56"
          bodyend="64"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref></type>
        <definition
        >static Model org.casbin.jcasbin.main.CoreEnforcer.newModel</definition>
        <argsstring>()</argsstring>
        <name>newModel</name>
        <briefdescription>
<para>newModel creates a model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an empty model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="71"
          column="25"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="71"
          bodyend="75"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3157daf60179a935bbef75728135a50"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref></type>
        <definition
        >static Model org.casbin.jcasbin.main.CoreEnforcer.newModel</definition>
        <argsstring>(String text)</argsstring>
        <name>newModel</name>
        <param>
          <type>String</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>newModel creates a model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>the model text. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="83"
          column="25"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="83"
          bodyend="89"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a49c441fe2a4287f57d7464abeeb241e7"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref></type>
        <definition
        >static Model org.casbin.jcasbin.main.CoreEnforcer.newModel</definition>
        <argsstring>(String modelPath, String unused)</argsstring>
        <name>newModel</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <param>
          <type>String</type>
          <declname>unused</declname>
        </param>
        <briefdescription>
<para>newModel creates a model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unused</parametername>
</parameternamelist>
<parameterdescription>
<para>unused parameter, just for differentiating with <ref
                      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3157daf60179a935bbef75728135a50"
                      kindref="member"
                    >newModel(String text)</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="99"
          column="25"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="99"
          bodyend="107"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3eedac5774252395df78d335bfdaad6"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.loadModel</definition>
        <argsstring>()</argsstring>
        <name>loadModel</name>
        <briefdescription>
<para>loadModel reloads the model from the model CONF file. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Because the policy is attached to a model, so the policy is invalidated and needs to be reloaded by calling LoadPolicy(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="115"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="115"
          bodyend="120"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a1c2008f19c31fc2e6fb0f157a72c62e9"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref></type>
        <definition
        >Model org.casbin.jcasbin.main.CoreEnforcer.getModel</definition>
        <argsstring>()</argsstring>
        <name>getModel</name>
        <briefdescription>
<para>getModel gets the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the model of the enforcer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="127"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="127"
          bodyend="129"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1abe7cc2b2787312cda95b2e0cdfbb3916"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.setModel</definition>
        <argsstring>(Model model)</argsstring>
        <name>setModel</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>setModel sets the current model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="136"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="136"
          bodyend="139"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad64639eb9c4952772e5978f046d4e84c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref></type>
        <definition
        >Adapter org.casbin.jcasbin.main.CoreEnforcer.getAdapter</definition>
        <argsstring>()</argsstring>
        <name>getAdapter</name>
        <briefdescription>
<para>getAdapter gets the current adapter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the adapter of the enforcer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="146"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="146"
          bodyend="148"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1adcd0d7e6148fc3024bbea2e9c45092cc"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.setAdapter</definition>
        <argsstring>(Adapter adapter)</argsstring>
        <name>setAdapter</name>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
              kindref="compound"
            >Adapter</ref></type>
          <declname>adapter</declname>
        </param>
        <briefdescription>
<para>setAdapter sets the current adapter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>adapter</parametername>
</parameternamelist>
<parameterdescription>
<para>the adapter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="155"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="155"
          bodyend="157"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a663d6d44397970c1cc30752a856f7722"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.setWatcher</definition>
        <argsstring>(Watcher watcher)</argsstring>
        <name>setWatcher</name>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
              kindref="compound"
            >Watcher</ref></type>
          <declname>watcher</declname>
        </param>
        <briefdescription>
<para>setWatcher sets the current watcher. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watcher</parametername>
</parameternamelist>
<parameterdescription>
<para>the watcher. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="164"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="164"
          bodyend="167"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a649b8e55d372d9e32ddad550e945d126"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.setRoleManager</definition>
        <argsstring>(RoleManager rm)</argsstring>
        <name>setRoleManager</name>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
              kindref="compound"
            >RoleManager</ref></type>
          <declname>rm</declname>
        </param>
        <briefdescription>
<para>SetRoleManager sets the current role manager. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rm</parametername>
</parameternamelist>
<parameterdescription>
<para>the role manager. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="174"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="174"
          bodyend="176"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a156c3408f520d5cfb720beb17c06377f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.setEffector</definition>
        <argsstring>(Effector eft)</argsstring>
        <name>setEffector</name>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
              kindref="compound"
            >Effector</ref></type>
          <declname>eft</declname>
        </param>
        <briefdescription>
<para>setEffector sets the current effector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eft</parametername>
</parameternamelist>
<parameterdescription>
<para>the effector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="183"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="183"
          bodyend="185"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0d947725ff17f175b340de745195f711"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.clearPolicy</definition>
        <argsstring>()</argsstring>
        <name>clearPolicy</name>
        <briefdescription>
<para>clearPolicy clears all policy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="190"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="190"
          bodyend="192"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4b906fdb277565747c7644d694dcd6bc"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.loadPolicy</definition>
        <argsstring>()</argsstring>
        <name>loadPolicy</name>
        <briefdescription>
<para>loadPolicy reloads the policy from file/database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="197"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="197"
          bodyend="205"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a5297d7b9360184f48461afa8ed238033"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.loadFilteredPolicy</definition>
        <argsstring>(Object filter)</argsstring>
        <name>loadFilteredPolicy</name>
        <param>
          <type>Object</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>loadFilteredPolicy reloads a filtered policy from file/database. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>the filter used to specify which type of policy should be loaded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="212"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="212"
          bodyend="213"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad7d18e622a89b24e2e2166cc3d0cfdcb"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.CoreEnforcer.isFiltered</definition>
        <argsstring>()</argsstring>
        <name>isFiltered</name>
        <briefdescription>
<para>isFiltered returns true if the loaded policy has been filtered. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para
              >if the loaded policy has been filtered. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="220"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="220"
          bodyend="222"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6c9869e3628d45e95b54d52dbcfdc30f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.savePolicy</definition>
        <argsstring>()</argsstring>
        <name>savePolicy</name>
        <briefdescription>
<para
          >savePolicy saves the current policy (usually after changed with Casbin API) back to file/database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="228"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="228"
          bodyend="237"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0379bb8527f242a7f2d2c083eaa0b799"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.enableEnforce</definition>
        <argsstring>(boolean enable)</argsstring>
        <name>enableEnforce</name>
        <param>
          <type>boolean</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para
          >enableEnforce changes the enforcing state of Casbin, when Casbin is disabled, all access will be allowed by the <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a57bf34be85f88525bf702f8d1a894d40"
              kindref="member"
            >enforce()</ref> function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to enable the enforcer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="245"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="245"
          bodyend="247"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.enableLog</definition>
        <argsstring>(boolean enable)</argsstring>
        <name>enableLog</name>
        <param>
          <type>boolean</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para
          >enableLog changes whether to print Casbin log to the standard output. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to enable Casbin's log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="254"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="254"
          bodyend="256"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4e574b515645cd91edb2e8fb4bdcb111"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.enableAutoSave</definition>
        <argsstring>(boolean autoSave)</argsstring>
        <name>enableAutoSave</name>
        <param>
          <type>boolean</type>
          <declname>autoSave</declname>
        </param>
        <briefdescription>
<para
          >enableAutoSave controls whether to save a policy rule automatically to the adapter when it is added or removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>autoSave</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to enable the AutoSave feature. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="264"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="264"
          bodyend="266"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9926eedc8cd976cff2010139e0d610a6"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.enableAutoBuildRoleLinks</definition>
        <argsstring>(boolean autoBuildRoleLinks)</argsstring>
        <name>enableAutoBuildRoleLinks</name>
        <param>
          <type>boolean</type>
          <declname>autoBuildRoleLinks</declname>
        </param>
        <briefdescription>
<para
          >enableAutoBuildRoleLinks controls whether to save a policy rule automatically to the adapter when it is added or removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>autoBuildRoleLinks</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to automatically build the role links. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="274"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="274"
          bodyend="276"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.CoreEnforcer.buildRoleLinks</definition>
        <argsstring>()</argsstring>
        <name>buildRoleLinks</name>
        <briefdescription>
<para>buildRoleLinks manually rebuild the role inheritance relations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="282"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="282"
          bodyend="285"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a57bf34be85f88525bf702f8d1a894d40"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.CoreEnforcer.enforce</definition>
        <argsstring>(Object... rvals)</argsstring>
        <name>enforce</name>
        <param>
          <type>Object...</type>
          <declname>rvals</declname>
        </param>
        <briefdescription>
<para
          >enforce decides whether a "subject" can access a "object" with the operation "action", input parameters are usually: (sub, obj, act). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rvals</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the request needs to be mediated, usually an array of strings, can be class instances if ABAC is used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether to allow the request. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="295"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="295"
          bodyend="420"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a98af1f80d941fd561c53de73e35443cd"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.CoreEnforcer.validateEnforce</definition>
        <argsstring>(Object... rvals)</argsstring>
        <name>validateEnforce</name>
        <param>
          <type>Object...</type>
          <declname>rvals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="422"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="422"
          bodyend="424"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1aea505eb394c7f8e829340db84164751b"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.CoreEnforcer.validateEnforceSection</definition>
        <argsstring>(String section, Object... rvals)</argsstring>
        <name>validateEnforceSection</name>
        <param>
          <type>String</type>
          <declname>section</declname>
        </param>
        <param>
          <type>Object...</type>
          <declname>rvals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          line="426"
          column="21"
          bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
          bodystart="426"
          bodyend="441"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"
          kindref="compound"
        >CoreEnforcer</ref> defines the core functionality of an enforcer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>org.casbin.jcasbin.main.SyncedEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.main.ManagementEnforcer</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.main.Enforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>org.casbin.jcasbin.model.FunctionMap</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"/>
        <childnode refid="9" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="4">
        <label
        >Map&lt; String, Map&lt; String, org.casbin.jcasbin.model.Assertion &gt; &gt;</label>
      </node>
      <node id="7">
        <label>org.casbin.jcasbin.persist.Watcher</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"/>
      </node>
      <node id="6">
        <label>org.casbin.jcasbin.persist.Adapter</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"/>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.model.Model</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Map&lt; String, AviatorFunction &gt;</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>rm</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>adapter</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>watcher</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
        <childnode refid="4" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
      line="42"
      column="26"
      bodyfile="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
      bodystart="42"
      bodyend="442"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ace22d53520ec336041327c5fde407c9a"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >adapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1acb180dd0333ec0f905de30fa0ce3fae5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >autoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6ec0491ec93be5610f2b3c5ab54f64d7"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >autoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >buildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0d947725ff17f175b340de745195f711"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >clearPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9a483a07c4bdeaee1656d5e4e63096aa"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >eft</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9926eedc8cd976cff2010139e0d610a6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >enableAutoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4e574b515645cd91edb2e8fb4bdcb111"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >enableAutoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1afca9a2ac78d96e730ee2561852fce41d"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >enabled</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0379bb8527f242a7f2d2c083eaa0b799"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >enableEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >enableLog</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a57bf34be85f88525bf702f8d1a894d40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >enforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1aebd8d031e1684c0a900721b0113f8c68"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >fm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad64639eb9c4952772e5978f046d4e84c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >getAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a1c2008f19c31fc2e6fb0f157a72c62e9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >getModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a538ceb739fd3784340383d6a2031b3c5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >initialize</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad7d18e622a89b24e2e2166cc3d0cfdcb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >isFiltered</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a5297d7b9360184f48461afa8ed238033"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >loadFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3eedac5774252395df78d335bfdaad6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >loadModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4b906fdb277565747c7644d694dcd6bc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >loadPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4250d3c0cc992b6e018ad715491aefcb"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >model</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4f8b315b6995c53e3a5653e0b94430ad"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >modelPath</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3157daf60179a935bbef75728135a50"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a49c441fe2a4287f57d7464abeeb241e7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a77b9617e204bf44558e2d3ad93367025"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >rm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6c9869e3628d45e95b54d52dbcfdc30f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >savePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1adcd0d7e6148fc3024bbea2e9c45092cc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >setAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a156c3408f520d5cfb720beb17c06377f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >setEffector</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1abe7cc2b2787312cda95b2e0cdfbb3916"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >setModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a649b8e55d372d9e32ddad550e945d126"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >setRoleManager</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a663d6d44397970c1cc30752a856f7722"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >setWatcher</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a98af1f80d941fd561c53de73e35443cd"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >validateEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1aea505eb394c7f8e829340db84164751b"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >validateEnforceSection</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad1a7c1d01fe6d718a89520b4d274fc80"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::CoreEnforcer</scope><name
        >watcher</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::effect::DefaultEffector</compoundname>
    <basecompoundref
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.effect.Effector</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector_1a752c881b592970e543a71307616fd4de"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.effect.DefaultEffector.DefaultEffector</definition>
        <argsstring>()</argsstring>
        <name>DefaultEffector</name>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
              kindref="compound"
            >DefaultEffector</ref> is the constructor for <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
              kindref="compound"
            >DefaultEffector</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/effect/DefaultEffector.java"
          line="24"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/effect/DefaultEffector.java"
          bodystart="24"
          bodyend="25"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector_1a5b7f674e414ed25b3b8ae046ff29ea62"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.effect.DefaultEffector.mergeEffects</definition>
        <argsstring
        >(String expr, Effect[] effects, float[] results)</argsstring>
        <name>mergeEffects</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector_1a736985c8e7f7687f423cbcb8138c50ae"
        >mergeEffects</reimplements>
        <param>
          <type>String</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref
              refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
              kindref="compound"
            >Effect</ref>[]</type>
          <declname>effects</declname>
        </param>
        <param>
          <type>float[]</type>
          <declname>results</declname>
        </param>
        <briefdescription>
<para
          >mergeEffects merges all matching results collected by the enforcer into a single decision. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/effect/DefaultEffector.java"
          line="31"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/effect/DefaultEffector.java"
          bodystart="31"
          bodyend="76"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
          kindref="compound"
        >DefaultEffector</ref> is default effector for Casbin. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.casbin.jcasbin.effect.DefaultEffector</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.effect.Effector</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.casbin.jcasbin.effect.DefaultEffector</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.effect.Effector</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"/>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/effect/DefaultEffector.java"
      line="20"
      column="38"
      bodyfile="src/main/java/org/casbin/jcasbin/effect/DefaultEffector.java"
      bodystart="20"
      bodyend="77"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector_1a752c881b592970e543a71307616fd4de"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::effect::DefaultEffector</scope><name
        >DefaultEffector</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector_1a5b7f674e414ed25b3b8ae046ff29ea62"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::effect::DefaultEffector</scope><name
        >mergeEffects</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::rbac::DefaultRoleManager</compoundname>
    <basecompoundref
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.rbac.RoleManager</basecompoundref>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.rbac.GroupRoleManager</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a0ab1e33bfabd27d7fd72085e84490d9e"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>Map&lt; String, Role &gt;</type>
        <definition
        >Map&lt;String, Role&gt; org.casbin.jcasbin.rbac.DefaultRoleManager.allRoles</definition>
        <argsstring/>
        <name>allRoles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="25"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="25"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a159b7c0e1a00bae1f8eabe00aaaaa95d"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>int</type>
        <definition
        >int org.casbin.jcasbin.rbac.DefaultRoleManager.maxHierarchyLevel</definition>
        <argsstring/>
        <name>maxHierarchyLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="26"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="26"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaaf4557a43b0a100507458ea41c9f75e"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.rbac.DefaultRoleManager.DefaultRoleManager</definition>
        <argsstring>(int maxHierarchyLevel)</argsstring>
        <name>DefaultRoleManager</name>
        <param>
          <type>int</type>
          <declname>maxHierarchyLevel</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
              kindref="compound"
            >DefaultRoleManager</ref> is the constructor for creating an instance of the default <ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
              kindref="compound"
            >RoleManager</ref> implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxHierarchyLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximized allowed RBAC hierarchy level. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="34"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="34"
          bodyend="37"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1adb2e1ce22c5a78af3f5b82343336ddbd"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.rbac.DefaultRoleManager.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a1bb68d3bdce84bc21110725673d731aa"
        >clear</reimplements>
        <briefdescription>
<para
          >clear clears all stored data and resets the role manager to the initial state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="57"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="57"
          bodyend="59"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaa0430fc0c2ce45fc084bae98a6bd68a"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.rbac.DefaultRoleManager.addLink</definition>
        <argsstring>(String name1, String name2, String... domain)</argsstring>
        <name>addLink</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1ab69982204040ce3b3fd09cf8f56e65ce"
        >addLink</reimplements>
        <param>
          <type>String</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >addLink adds the inheritance link between role: name1 and role: name2. </para>
        </briefdescription>
        <detaileddescription>
<para
          >aka role: name1 inherits role: name2. domain is a prefix to the roles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="67"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="67"
          bodyend="78"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a0d200f7f68e2c76222ab94f74265e3ed"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.rbac.DefaultRoleManager.deleteLink</definition>
        <argsstring>(String name1, String name2, String... domain)</argsstring>
        <name>deleteLink</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a222054d3e31e22433769bb816a6562fa"
        >deleteLink</reimplements>
        <param>
          <type>String</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >deleteLink deletes the inheritance link between role: name1 and role: name2. </para>
        </briefdescription>
        <detaileddescription>
<para
          >aka role: name1 does not inherit role: name2 any more. domain is a prefix to the roles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="86"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="86"
          bodyend="101"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a069d6ba02c24429440b0d634aee97245"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.rbac.DefaultRoleManager.hasLink</definition>
        <argsstring>(String name1, String name2, String... domain)</argsstring>
        <name>hasLink</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4c51b427abdef1cfe387fcf1b07ebf95"
        >hasLink</reimplements>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1a4e780344ad82bf2a4b49d407d49c2dcb"
        >hasLink</reimplementedby>
        <param>
          <type>String</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>hasLink determines whether role: name1 inherits role: name2. </para>
        </briefdescription>
        <detaileddescription>
<para>domain is a prefix to the roles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="108"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="108"
          bodyend="126"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a8766f84b139b6663379c4bc07ed68537"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.rbac.DefaultRoleManager.getRoles</definition>
        <argsstring>(String name, String... domain)</argsstring>
        <name>getRoles</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4bafb8b27fa71cb00f3e937475071720"
        >getRoles</reimplements>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>getRoles gets the roles that a subject inherits. </para>
        </briefdescription>
        <detaileddescription>
<para>domain is a prefix to the roles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="133"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="133"
          bodyend="151"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1af1d872316a2ca01bcf0a1d5bced3fc8e"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.rbac.DefaultRoleManager.getUsers</definition>
        <argsstring>(String name)</argsstring>
        <name>getUsers</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1aad0e8d6fe9ecbed760b9ff3d171d4e6c"
        >getUsers</reimplements>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>getUsers gets the users that inherits a subject. </para>
        </briefdescription>
        <detaileddescription>
<para
          >domain is an unreferenced parameter here, may be used in other implementations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="158"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="158"
          bodyend="170"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a14b51545213a7ba2180eb3440cc28483"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.rbac.DefaultRoleManager.printRoles</definition>
        <argsstring>()</argsstring>
        <name>printRoles</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1add0e9a35984db53028db92d0d52fd9fd"
        >printRoles</reimplements>
        <briefdescription>
<para>printRoles prints all the roles to log. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="176"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="176"
          bodyend="180"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a492193adf7aef66d1e8d7497c303599b"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.rbac.DefaultRoleManager.hasRole</definition>
        <argsstring>(String name)</argsstring>
        <name>hasRole</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="39"
          column="21"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="39"
          bodyend="41"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a01dd1a56a670a81f3706af3bfc2f0604"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>Role</type>
        <definition
        >Role org.casbin.jcasbin.rbac.DefaultRoleManager.createRole</definition>
        <argsstring>(String name)</argsstring>
        <name>createRole</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="43"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="43"
          bodyend="51"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.rbac.DefaultRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.rbac.GroupRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
        />
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.rbac.DefaultRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
      line="24"
      column="44"
      bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
      bodystart="24"
      bodyend="181"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaa0430fc0c2ce45fc084bae98a6bd68a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >addLink</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a0ab1e33bfabd27d7fd72085e84490d9e"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >allRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1adb2e1ce22c5a78af3f5b82343336ddbd"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >clear</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a01dd1a56a670a81f3706af3bfc2f0604"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >createRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaaf4557a43b0a100507458ea41c9f75e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >DefaultRoleManager</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a0d200f7f68e2c76222ab94f74265e3ed"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >deleteLink</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a8766f84b139b6663379c4bc07ed68537"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >getRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1af1d872316a2ca01bcf0a1d5bced3fc8e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >getUsers</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a069d6ba02c24429440b0d634aee97245"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >hasLink</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a492193adf7aef66d1e8d7497c303599b"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >hasRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a159b7c0e1a00bae1f8eabe00aaaaa95d"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >maxHierarchyLevel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a14b51545213a7ba2180eb3440cc28483"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::DefaultRoleManager</scope><name
        >printRoles</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
    kind="enum"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::effect::Effect</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef
        kind="variable"
        id="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect_1a302291b91598d3e80056e285372e5977"
        prot="public"
        static="no"
        mutable="no"
      >
        <type/>
        <definition>org.casbin.jcasbin.effect.Effect.Allow</definition>
        <argsstring/>
        <name>Allow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/effect/Effect.java"
          line="18"
          column="1"
          bodyfile="src/main/java/org/casbin/jcasbin/effect/Effect.java"
          bodystart="18"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect_1ae86487f464f96f93ad51e8c05a6cdae0"
        prot="public"
        static="no"
        mutable="no"
      >
        <type/>
        <definition>org.casbin.jcasbin.effect.Effect.Indeterminate</definition>
        <argsstring/>
        <name>Indeterminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/effect/Effect.java"
          line="18"
          column="1"
          bodyfile="src/main/java/org/casbin/jcasbin/effect/Effect.java"
          bodystart="18"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect_1a42d1fc0249aca05d6bb95adfa62a8988"
        prot="public"
        static="no"
        mutable="no"
      >
        <type/>
        <definition>org.casbin.jcasbin.effect.Effect.Deny</definition>
        <argsstring/>
        <name>Deny</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/effect/Effect.java"
          line="19"
          column="1"
          bodyfile="src/main/java/org/casbin/jcasbin/effect/Effect.java"
          bodystart="18"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/effect/Effect.java"
      line="17"
      column="19"
      bodyfile="src/main/java/org/casbin/jcasbin/effect/Effect.java"
      bodystart="17"
      bodyend="19"
    />
    <listofallmembers>
      <member
        refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect_1a302291b91598d3e80056e285372e5977"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::effect::Effect</scope><name
        >Allow</name></member>
      <member
        refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect_1a42d1fc0249aca05d6bb95adfa62a8988"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::effect::Effect</scope><name
        >Deny</name></member>
      <member
        refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect_1ae86487f464f96f93ad51e8c05a6cdae0"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::effect::Effect</scope><name
        >Indeterminate</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
    kind="interface"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::effect::Effector</compoundname>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.effect.DefaultEffector</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector_1a736985c8e7f7687f423cbcb8138c50ae"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.effect.Effector.mergeEffects</definition>
        <argsstring
        >(String expr, Effect[] effects, float[] results)</argsstring>
        <name>mergeEffects</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector_1a5b7f674e414ed25b3b8ae046ff29ea62"
        >mergeEffects</reimplementedby>
        <param>
          <type>String</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref
              refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
              kindref="compound"
            >Effect</ref>[]</type>
          <declname>effects</declname>
        </param>
        <param>
          <type>float[]</type>
          <declname>results</declname>
        </param>
        <briefdescription>
<para
          >mergeEffects merges all matching results collected by the enforcer into a single decision. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression of [policy_effect]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>effects</parametername>
</parameternamelist>
<parameterdescription>
<para>the effects of all matched rules. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>results</parametername>
</parameternamelist>
<parameterdescription>
<para>the matcher results of all matched rules. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the final effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/effect/Effector.java"
          line="29"
          column="13"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
          kindref="compound"
        >Effector</ref> is the interface for Casbin effectors. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org.casbin.jcasbin.effect.DefaultEffector</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
        />
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.effect.Effector</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"/>
      </node>
    </inheritancegraph>
    <location
      file="src/main/java/org/casbin/jcasbin/effect/Effector.java"
      line="20"
      column="26"
      bodyfile="src/main/java/org/casbin/jcasbin/effect/Effector.java"
      bodystart="20"
      bodyend="30"
    />
    <listofallmembers>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector_1a736985c8e7f7687f423cbcb8138c50ae"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::effect::Effector</scope><name
        >mergeEffects</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::main::Enforcer</compoundname>
    <basecompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.main.ManagementEnforcer</basecompoundref>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.main.SyncedEnforcer</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.main.Enforcer.Enforcer</definition>
        <argsstring>()</argsstring>
        <name>Enforcer</name>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
              kindref="compound"
            >Enforcer</ref> is the default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="33"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="33"
          bodyend="35"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1af0bc19bccb8db3585daea977b2ef6ce9"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.main.Enforcer.Enforcer</definition>
        <argsstring>(String modelPath, String policyFile)</argsstring>
        <name>Enforcer</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <param>
          <type>String</type>
          <declname>policyFile</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
              kindref="compound"
            >Enforcer</ref> initializes an enforcer with a model file and a policy file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>policyFile</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the policy file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="43"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="43"
          bodyend="45"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0db59abf6989136ed31b0c085c160a21"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.main.Enforcer.Enforcer</definition>
        <argsstring>(String modelPath, Adapter adapter)</argsstring>
        <name>Enforcer</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
              kindref="compound"
            >Adapter</ref></type>
          <declname>adapter</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
              kindref="compound"
            >Enforcer</ref> initializes an enforcer with a database adapter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adapter</parametername>
</parameternamelist>
<parameterdescription>
<para>the adapter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="53"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="53"
          bodyend="57"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a3fa30b0bd74eddf0b3bc0aa477f38f3a"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.main.Enforcer.Enforcer</definition>
        <argsstring>(Model m, Adapter adapter)</argsstring>
        <name>Enforcer</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
              kindref="compound"
            >Adapter</ref></type>
          <declname>adapter</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
              kindref="compound"
            >Enforcer</ref> initializes an enforcer with a model and a database adapter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adapter</parametername>
</parameternamelist>
<parameterdescription>
<para>the adapter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="65"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="65"
          bodyend="78"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0b13af694e6ef85a03c95fb4f6502495"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.main.Enforcer.Enforcer</definition>
        <argsstring>(Model m)</argsstring>
        <name>Enforcer</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
              kindref="compound"
            >Enforcer</ref> initializes an enforcer with a model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="85"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="85"
          bodyend="87"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a2f9db27643448c2ed82a7e0c31407ea4"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.main.Enforcer.Enforcer</definition>
        <argsstring>(String modelPath)</argsstring>
        <name>Enforcer</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
              kindref="compound"
            >Enforcer</ref> initializes an enforcer with a model file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="94"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="94"
          bodyend="96"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a24d47f27d839dcf41d30034c0596a5ba"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.main.Enforcer.Enforcer</definition>
        <argsstring
        >(String modelPath, String policyFile, boolean enableLog)</argsstring>
        <name>Enforcer</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <param>
          <type>String</type>
          <declname>policyFile</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>enableLog</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
              kindref="compound"
            >Enforcer</ref> initializes an enforcer with a model file, a policy file and an enable log flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>policyFile</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the policy file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enableLog</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to enable Casbin's log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="105"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="105"
          bodyend="108"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9a24c126f65fb481da6eae495348e155"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.Enforcer.getRolesForUser</definition>
        <argsstring>(String name)</argsstring>
        <name>getRolesForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af2a5fd346aa920a19eb00b99ed540a79"
        >getRolesForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>getRolesForUser gets the roles that a user has. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the roles that the user has. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="116"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="116"
          bodyend="125"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a86e7862937a2ef33864f1215a0f823e2"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.Enforcer.getUsersForRole</definition>
        <argsstring>(String name)</argsstring>
        <name>getUsersForRole</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ab3bbdf76007b702e3485a5b648104093"
        >getUsersForRole</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>getUsersForRole gets the users that has a role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the users that has the role. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="133"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="133"
          bodyend="142"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a63c2751e5b6707c2ff964e0fc74b7a6d"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.hasRoleForUser</definition>
        <argsstring>(String name, String role)</argsstring>
        <name>hasRoleForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a8aa67e92014b455e42e0cfdc813051a5"
        >hasRoleForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>hasRoleForUser determines whether a user has a role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the user has the role. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="151"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="151"
          bodyend="163"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ad99972459452b33b273f2870836503de"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.addRoleForUser</definition>
        <argsstring>(String user, String role)</argsstring>
        <name>addRoleForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aba5e4485fe28c6de45eedd54686ef51f"
        >addRoleForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>addRoleForUser adds a role for a user. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the user already has the role (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="173"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="173"
          bodyend="175"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aba6dd9e3e9dd51d4d83cadfc2b7dd5f8"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deleteRoleForUser</definition>
        <argsstring>(String user, String role)</argsstring>
        <name>deleteRoleForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a479619cc73668e25b741bf7d08f51023"
        >deleteRoleForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>deleteRoleForUser deletes a role for a user. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user does not have the role (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="185"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="185"
          bodyend="187"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a5d18ffaa58a6852e05b674386bd5fec0"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deleteRolesForUser</definition>
        <argsstring>(String user)</argsstring>
        <name>deleteRolesForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ac75013652d82c9a2e2b31543ffe57d50"
        >deleteRolesForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>deleteRolesForUser deletes all roles for a user. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user does not have any roles (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="196"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="196"
          bodyend="198"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a6d0dc317faab6233c3cccaf6b41bcb0f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deleteUser</definition>
        <argsstring>(String user)</argsstring>
        <name>deleteUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aff27c9aedfa504a642212ebdcdd79e44"
        >deleteUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>deleteUser deletes a user. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the user does not exist (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="207"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="207"
          bodyend="209"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ac37fa55655aa7f72417d0f969d20ff53"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.Enforcer.deleteRole</definition>
        <argsstring>(String role)</argsstring>
        <name>deleteRole</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af72955cf27fec4b175c640db40320826"
        >deleteRole</reimplementedby>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>deleteRole deletes a role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="216"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="216"
          bodyend="219"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a75807f7cfe151cc9de6f9de3ad01a1e3"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deletePermission</definition>
        <argsstring>(String... permission)</argsstring>
        <name>deletePermission</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62a97217edde0b20b3f8d22a5dbcf943"
        >deletePermission</reimplementedby>
        <param>
          <type>String...</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>deletePermission deletes a permission. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the permission does not exist (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="228"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="228"
          bodyend="230"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a8653d5941163b982335ecef78f215222"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deletePermission</definition>
        <argsstring>(List&lt; String &gt; permission)</argsstring>
        <name>deletePermission</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a92d5c9105e9b52f9adefaa84f60810c4"
        >deletePermission</reimplementedby>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>deletePermission deletes a permission. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the permission does not exist (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="239"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="239"
          bodyend="241"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a142473ca3810ca09f9fac04c8abb2f6d"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.addPermissionForUser</definition>
        <argsstring>(String user, String... permission)</argsstring>
        <name>addPermissionForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1adb2b71691158f9d360ba1666d8b86c3c"
        >addPermissionForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>addPermissionForUser adds a permission for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role already has the permission (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="251"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="251"
          bodyend="258"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9eedf44340998df63ef763e25c0a806f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.addPermissionForUser</definition>
        <argsstring>(String user, List&lt; String &gt; permission)</argsstring>
        <name>addPermissionForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a89304ac51a8abb00a4c030613f26e3e8"
        >addPermissionForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>addPermissionForUser adds a permission for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role already has the permission (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="268"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="268"
          bodyend="270"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a588a2e87008360e624df7f57c845573c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deletePermissionForUser</definition>
        <argsstring>(String user, String... permission)</argsstring>
        <name>deletePermissionForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a244dcefe509431a733b8433a8c55544d"
        >deletePermissionForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>deletePermissionForUser deletes a permission for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role does not have the permission (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="280"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="280"
          bodyend="287"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a535c7a02ee3817cc24213921b733650c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deletePermissionForUser</definition>
        <argsstring>(String user, List&lt; String &gt; permission)</argsstring>
        <name>deletePermissionForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ad69a4c9d77c42915bd37b5bb6ea70df2"
        >deletePermissionForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>deletePermissionForUser deletes a permission for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role does not have the permission (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="297"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="297"
          bodyend="299"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a90719b969dc506fc6139e29de75de2fc"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deletePermissionsForUser</definition>
        <argsstring>(String user)</argsstring>
        <name>deletePermissionsForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a982c777484c5b1ebcd8a7ddfdca7229a"
        >deletePermissionsForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>deletePermissionsForUser deletes permissions for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role does not have any permissions (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="308"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="308"
          bodyend="310"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a791e4db2b3638c1abfc023dde0d3dc01"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.Enforcer.getPermissionsForUser</definition>
        <argsstring>(String user)</argsstring>
        <name>getPermissionsForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a6ba0ce3478f63d2a8e301490b66746d5"
        >getPermissionsForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>getPermissionsForUser gets permissions for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the permissions, a permission is usually like (obj, act). It is actually the rule without the subject. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="318"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="318"
          bodyend="320"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a109bc2c0b84b316a0c8908aea831aaba"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.hasPermissionForUser</definition>
        <argsstring>(String user, String... permission)</argsstring>
        <name>hasPermissionForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a34f55b0412ac2dbddd459047dab2cfac"
        >hasPermissionForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>hasPermissionForUser determines whether a user has a permission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the user has the permission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="329"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="329"
          bodyend="336"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a88b788605ecee8bd6d075b2f472c6890"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.hasPermissionForUser</definition>
        <argsstring>(String user, List&lt; String &gt; permission)</argsstring>
        <name>hasPermissionForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aea30211bfcc161650a7f3e75ef87cf6b"
        >hasPermissionForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>hasPermissionForUser determines whether a user has a permission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the user has the permission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="345"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="345"
          bodyend="347"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ab630ddd5602ded4ce22db0a7aa2e700e"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.Enforcer.getRolesForUserInDomain</definition>
        <argsstring>(String name, String domain)</argsstring>
        <name>getRolesForUserInDomain</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa439aea6f870e1bf09363a0c89cf2516"
        >getRolesForUserInDomain</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >getRolesForUserInDomain gets the roles that a user has inside a domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the roles that the user has in the domain. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="356"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="356"
          bodyend="365"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ae2dd0241b15b09c5f1c982cd8dec90ab"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.Enforcer.getPermissionsForUserInDomain</definition>
        <argsstring>(String user, String domain)</argsstring>
        <name>getPermissionsForUserInDomain</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62d7fc0674d09fa3d2360df017257c57"
        >getPermissionsForUserInDomain</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >getPermissionsForUserInDomain gets permissions for a user or role inside a domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the permissions, a permission is usually like (obj, act). It is actually the rule without the subject. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="374"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="374"
          bodyend="376"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0567f583a17b695f4891176406d6055c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.addRoleForUserInDomain</definition>
        <argsstring>(String user, String role, String domain)</argsstring>
        <name>addRoleForUserInDomain</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1abe38b2486de5d64f8d9acd1247111735"
        >addRoleForUserInDomain</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>addRoleForUserInDomain adds a role for a user inside a domain. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the user already has the role (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="387"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="387"
          bodyend="389"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aa5ca066f759049a8bcec9239b1300edc"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.Enforcer.deleteRoleForUserInDomain</definition>
        <argsstring>(String user, String role, String domain)</argsstring>
        <name>deleteRoleForUserInDomain</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a872e36b1fd42016e105730815f83b64c"
        >deleteRoleForUserInDomain</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >deleteRoleForUserInDomain deletes a role for a user inside a domain. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user does not have the role (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="400"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="400"
          bodyend="402"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a832592a185f0c760a86a9915fcbded2b"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.Enforcer.getImplicitRolesForUser</definition>
        <argsstring>(String name, String... domain)</argsstring>
        <name>getImplicitRolesForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af7d1e178228022fa33e3130e636f7be1"
        >getImplicitRolesForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>getImplicitRolesForUser gets implicit roles that a user has. </para>
        </briefdescription>
        <detaileddescription>
<para>Compared to <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9a24c126f65fb481da6eae495348e155"
              kindref="member"
            >getRolesForUser()</ref>, this function retrieves indirect roles besides direct roles. For example: g, alice, role:admin g, role:admin, role:user </para>
<para
          >getRolesForUser("alice") can only get: ["role:admin"]. But getImplicitRolesForUser("alice") will get: ["role:admin", "role:user"].</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>implicit roles that a user has. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="418"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="418"
          bodyend="425"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aa6b904744a8ba520a7b33c1b73905c36"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.Enforcer.getImplicitPermissionsForUser</definition>
        <argsstring>(String user)</argsstring>
        <name>getImplicitPermissionsForUser</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a29d21a2e6ee02f145c50a4903f0038a9"
        >getImplicitPermissionsForUser</reimplementedby>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para
          >getImplicitPermissionsForUser gets implicit permissions for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para>Compared to <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a791e4db2b3638c1abfc023dde0d3dc01"
              kindref="member"
            >getPermissionsForUser()</ref>, this function retrieves permissions for inherited roles. For example: p, admin, data1, read p, alice, data2, read g, alice, admin </para>
<para
          >getPermissionsForUser("alice") can only get: [["alice", "data2", "read"]]. But getImplicitPermissionsForUser("alice") will get: [["admin", "data1", "read"], ["alice", "data2", "read"]].</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>implicit permissions for a user or role. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="441"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="441"
          bodyend="450"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a49e3a38e16e7a60221557e5bfc250134"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.Enforcer.getImplicitPermissionsForUserInDomain</definition>
        <argsstring>(String user, String domain)</argsstring>
        <name>getImplicitPermissionsForUserInDomain</name>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >getImplicitPermissionsForUserInDomain gets implicit permissions for a user or role in domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >implicit permissions for a user or role in domain. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          line="459"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
          bodystart="459"
          bodyend="468"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
          kindref="compound"
        >Enforcer</ref> = <ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
          kindref="compound"
        >ManagementEnforcer</ref> + RBAC API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>org.casbin.jcasbin.main.SyncedEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.ManagementEnforcer</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        />
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.Enforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>org.casbin.jcasbin.model.FunctionMap</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"/>
        <childnode refid="12" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="7">
        <label
        >Map&lt; String, Map&lt; String, org.casbin.jcasbin.model.Assertion &gt; &gt;</label>
      </node>
      <node id="10">
        <label>org.casbin.jcasbin.persist.Watcher</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"/>
      </node>
      <node id="9">
        <label>org.casbin.jcasbin.persist.Adapter</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"/>
      </node>
      <node id="5">
        <label>org.casbin.jcasbin.model.Model</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.ManagementEnforcer</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        />
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>Map&lt; String, AviatorFunction &gt;</label>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
        <childnode refid="5" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>rm</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>adapter</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>watcher</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
        <childnode refid="7" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.Enforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
      line="29"
      column="41"
      bodyfile="src/main/java/org/casbin/jcasbin/main/Enforcer.java"
      bodystart="29"
      bodyend="469"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ace22d53520ec336041327c5fde407c9a"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >adapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ab63f44be32bf147161644644c07e203f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addFunction</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9ef11047ede8e36e7add2eb52bd06da1"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade3e57fb44bb25ab0a6f0009abcef1a6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8ea0c8a40f08322d9bec9abfb1a76420"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a18008129a41d2de393ea31c3116ac53d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a073f604c3eca762eb3ab65d4ba2d5f4b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a142473ca3810ca09f9fac04c8abb2f6d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addPermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9eedf44340998df63ef763e25c0a806f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addPermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abee2ec66d4665cb585aea158eb94ba8a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a64d01b587c431aa9794857b1324f4611"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ad99972459452b33b273f2870836503de"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addRoleForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0567f583a17b695f4891176406d6055c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >addRoleForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1acb180dd0333ec0f905de30fa0ce3fae5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >autoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6ec0491ec93be5610f2b3c5ab54f64d7"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >autoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >buildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0d947725ff17f175b340de745195f711"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >clearPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a75807f7cfe151cc9de6f9de3ad01a1e3"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deletePermission</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a8653d5941163b982335ecef78f215222"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deletePermission</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a588a2e87008360e624df7f57c845573c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deletePermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a535c7a02ee3817cc24213921b733650c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deletePermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a90719b969dc506fc6139e29de75de2fc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deletePermissionsForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ac37fa55655aa7f72417d0f969d20ff53"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deleteRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aba6dd9e3e9dd51d4d83cadfc2b7dd5f8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deleteRoleForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aa5ca066f759049a8bcec9239b1300edc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deleteRoleForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a5d18ffaa58a6852e05b674386bd5fec0"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deleteRolesForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a6d0dc317faab6233c3cccaf6b41bcb0f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >deleteUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9926eedc8cd976cff2010139e0d610a6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >enableAutoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4e574b515645cd91edb2e8fb4bdcb111"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >enableAutoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0379bb8527f242a7f2d2c083eaa0b799"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >enableEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >enableLog</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a57bf34be85f88525bf702f8d1a894d40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >enforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1af0bc19bccb8db3585daea977b2ef6ce9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0db59abf6989136ed31b0c085c160a21"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a3fa30b0bd74eddf0b3bc0aa477f38f3a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0b13af694e6ef85a03c95fb4f6502495"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a2f9db27643448c2ed82a7e0c31407ea4"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a24d47f27d839dcf41d30034c0596a5ba"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1aebd8d031e1684c0a900721b0113f8c68"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >fm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad64639eb9c4952772e5978f046d4e84c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a615b4057c4b9697cb4cab747c9ca2bbe"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAllActions</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ac9a8c113ba5814b238775f76fa051a23"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAllNamedActions</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad36cc921314079e5dcc6c92ab89de91d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAllNamedObjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a73db140800a2b3b5536cb5a5a1245750"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAllNamedRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a64bd155e5b79f76fba3d4645ef059473"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAllNamedSubjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afe061eec06bae40791b2a17488e7d440"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAllObjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1bc99cd18bbc3676576ad79aafe5e358"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAllRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a02a148724235d5a345db21d0544bcba4"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getAllSubjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aec3ae451c6c6cc2019189e18d6633942"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getFilteredGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9de8af989227478e2def8453a1212816"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getFilteredNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8bbc7a5f03e97a94c08eea0791999cc7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getFilteredNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae42feedb5e204600566fca5c3b5764f9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a5fe374736c6b242fa46f98f53ffd1c97"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aa6b904744a8ba520a7b33c1b73905c36"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getImplicitPermissionsForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a49e3a38e16e7a60221557e5bfc250134"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getImplicitPermissionsForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a832592a185f0c760a86a9915fcbded2b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getImplicitRolesForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a1c2008f19c31fc2e6fb0f157a72c62e9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abba16b254dd2d441077374f10a41f5d8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a79a8449681f1351650ffe75a15f49970"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a791e4db2b3638c1abfc023dde0d3dc01"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getPermissionsForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ae2dd0241b15b09c5f1c982cd8dec90ab"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getPermissionsForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8fe83aae68122f404f5c248205041506"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9a24c126f65fb481da6eae495348e155"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getRolesForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ab630ddd5602ded4ce22db0a7aa2e700e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getRolesForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a86e7862937a2ef33864f1215a0f823e2"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >getUsersForRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4792bf1723219e7f7568162eb3cef2bc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a700ddd84ef74c900865777808fd1e255"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f4898c1bfe12eb7c182eade59e2d8f7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1acbd49fc353c48a8470e6b55effd25518"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a490c6b5a9300fcf3597b22e8d1c23965"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afae748b1ff0140640a07a89233810ba7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a109bc2c0b84b316a0c8908aea831aaba"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasPermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a88b788605ecee8bd6d075b2f472c6890"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasPermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abdda8a710e53ef8eab16b1302f3cffce"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a856c9861df0247b781152a1ed5f5e006"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a63c2751e5b6707c2ff964e0fc74b7a6d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >hasRoleForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a538ceb739fd3784340383d6a2031b3c5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >initialize</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad7d18e622a89b24e2e2166cc3d0cfdcb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >isFiltered</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a5297d7b9360184f48461afa8ed238033"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >loadFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3eedac5774252395df78d335bfdaad6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >loadModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4b906fdb277565747c7644d694dcd6bc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >loadPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4250d3c0cc992b6e018ad715491aefcb"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >model</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4f8b315b6995c53e3a5653e0b94430ad"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >modelPath</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3157daf60179a935bbef75728135a50"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a49c441fe2a4287f57d7464abeeb241e7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1d73ccb6974523e067ebf5d9e6b28a3c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeFilteredGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade55e4aa087ec91aeeb8827bad1dac3e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeFilteredNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a08335329c3d380bf56606b3a3bb32e89"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeFilteredNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1aff2a17b295f3b2099b87a5ab75049836"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a57bc134fa11f47f661d9c4f86870c9da"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f2fb581b79dc89f73642dab67d9f5c6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1af70dfae94c2ca8954ba2e5294900afa7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad37d626eefdd24672238b561b89df382"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8a1e6295055182d67de8c0ca57343041"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removeNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aa97f4e7097f9c94136eccb0fac5524ce"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a20976876604a9fc81356eece1e12ade0"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a77b9617e204bf44558e2d3ad93367025"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >rm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6c9869e3628d45e95b54d52dbcfdc30f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >savePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1adcd0d7e6148fc3024bbea2e9c45092cc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >setAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a156c3408f520d5cfb720beb17c06377f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >setEffector</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1abe7cc2b2787312cda95b2e0cdfbb3916"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >setModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a649b8e55d372d9e32ddad550e945d126"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >setRoleManager</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a663d6d44397970c1cc30752a856f7722"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >setWatcher</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a98af1f80d941fd561c53de73e35443cd"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >validateEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad1a7c1d01fe6d718a89520b4d274fc80"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::Enforcer</scope><name
        >watcher</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::persist::file_adapter::FileAdapter</compoundname>
    <basecompoundref
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.persist.Adapter</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1abc9a92bff2d58ed891efa501542d82d2"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.persist.file_adapter.FileAdapter.filePath</definition>
        <argsstring/>
        <name>filePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="36"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="36"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a2504687257945bb94edb469222f219f1"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.persist.file_adapter.FileAdapter.readOnly</definition>
        <argsstring/>
        <name>readOnly</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="37"
          column="21"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="37"
          bodyend="-1"
        />
      </memberdef>
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1acfa87931143618c6242c3cba00abb790"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>ByteArrayInputStream</type>
        <definition
        >ByteArrayInputStream org.casbin.jcasbin.persist.file_adapter.FileAdapter.byteArrayInputStream</definition>
        <argsstring/>
        <name>byteArrayInputStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="38"
          column="34"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="38"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a7ecec7a9f79e24235fc6ed0412f7d756"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.persist.file_adapter.FileAdapter.FileAdapter</definition>
        <argsstring>(String filePath)</argsstring>
        <name>FileAdapter</name>
        <param>
          <type>String</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
              kindref="compound"
            >FileAdapter</ref> is the constructor for <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
              kindref="compound"
            >FileAdapter</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filePath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the policy file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="45"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="45"
          bodyend="47"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a1ebca8e1865395d257d9be4296af50ca"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.persist.file_adapter.FileAdapter.FileAdapter</definition>
        <argsstring>(InputStream inputStream)</argsstring>
        <name>FileAdapter</name>
        <param>
          <type>InputStream</type>
          <declname>inputStream</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
              kindref="compound"
            >FileAdapter</ref> is the constructor for <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
              kindref="compound"
            >FileAdapter</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy file.inputStream </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="54"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="54"
          bodyend="62"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a660809ce7a926d82a1b0d3ce067277d1"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.file_adapter.FileAdapter.loadPolicy</definition>
        <argsstring>(Model model)</argsstring>
        <name>loadPolicy</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a2bd0addc7a7c609701426e1deaf0500d"
        >loadPolicy</reimplements>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>loadPolicy loads all policy rules from the storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="68"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="68"
          bodyend="79"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a8e92b4356d57af27bac9e497163f66aa"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.file_adapter.FileAdapter.savePolicy</definition>
        <argsstring>(Model model)</argsstring>
        <name>savePolicy</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a1b61f1b7d0ef8a36d17611c5fbf4e472"
        >savePolicy</reimplements>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>savePolicy saves all policy rules to the storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="85"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="85"
          bodyend="98"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a2eab050005e0a1eda6e70c56ead969bd"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.file_adapter.FileAdapter.addPolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>addPolicy</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a436844fd12e5fa24d861948f675128cf"
        >addPolicy</reimplements>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>addPolicy adds a policy rule to the storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="132"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="132"
          bodyend="134"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1afb6b04ec5c62eff87be7d50a4126c58b"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.file_adapter.FileAdapter.removePolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>removePolicy</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a8eb5c047ab701a8753d09384b30c0823"
        >removePolicy</reimplements>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>removePolicy removes a policy rule from the storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="140"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="140"
          bodyend="142"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1af512fb66e4f9aa341e0d8f94d47f56db"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.file_adapter.FileAdapter.removeFilteredPolicy</definition>
        <argsstring
        >(String sec, String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>removeFilteredPolicy</name>
        <reimplements
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a0bcada1669a34b2a0817047ed111975d"
        >removeFilteredPolicy</reimplements>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >removeFilteredPolicy removes policy rules that match the filter from the storage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="148"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="148"
          bodyend="150"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a10d49427b13ad023b55ec4dd275d078f"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.persist.file_adapter.FileAdapter.getModelPolicy</definition>
        <argsstring>(Model model, String ptype)</argsstring>
        <name>getModelPolicy</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="100"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="100"
          bodyend="107"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1adc7ab61095a386752a4db16024df1b6f"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.file_adapter.FileAdapter.loadPolicyData</definition>
        <argsstring
        >(Model model, Helper.loadPolicyLineHandler&lt; String, Model &gt; handler, InputStream inputStream)</argsstring>
        <name>loadPolicyData</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <param>
          <type>Helper.loadPolicyLineHandler&lt; String, <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>InputStream</type>
          <declname>inputStream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="109"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="109"
          bodyend="117"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1aa1ac795c3b87ec44f90da97cf1b98373"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.file_adapter.FileAdapter.savePolicyFile</definition>
        <argsstring>(String text)</argsstring>
        <name>savePolicyFile</name>
        <param>
          <type>String</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          line="119"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
          bodystart="119"
          bodyend="126"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
          kindref="compound"
        >FileAdapter</ref> is the file adapter for Casbin. </para>
    </briefdescription>
    <detaileddescription>
<para>It can load policy from file or save policy to file. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.casbin.jcasbin.persist.file_adapter.FileAdapter</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.persist.Adapter</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>org.casbin.jcasbin.persist.file_adapter.FileAdapter</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.persist.Adapter</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"/>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
      line="35"
      column="33"
      bodyfile="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
      bodystart="35"
      bodyend="151"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a2eab050005e0a1eda6e70c56ead969bd"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1acfa87931143618c6242c3cba00abb790"
        prot="private"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >byteArrayInputStream</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a7ecec7a9f79e24235fc6ed0412f7d756"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >FileAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a1ebca8e1865395d257d9be4296af50ca"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >FileAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1abc9a92bff2d58ed891efa501542d82d2"
        prot="private"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >filePath</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a10d49427b13ad023b55ec4dd275d078f"
        prot="private"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >getModelPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a660809ce7a926d82a1b0d3ce067277d1"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >loadPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1adc7ab61095a386752a4db16024df1b6f"
        prot="private"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >loadPolicyData</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a2504687257945bb94edb469222f219f1"
        prot="private"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >readOnly</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1af512fb66e4f9aa341e0d8f94d47f56db"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1afb6b04ec5c62eff87be7d50a4126c58b"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a8e92b4356d57af27bac9e497163f66aa"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >savePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1aa1ac795c3b87ec44f90da97cf1b98373"
        prot="private"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::file_adapter::FileAdapter</scope><name
        >savePolicyFile</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::model::FunctionMap</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
        prot="public"
        static="no"
        mutable="no"
      >
        <type>Map&lt; String, AviatorFunction &gt;</type>
        <definition
        >Map&lt;String, AviatorFunction&gt; org.casbin.jcasbin.model.FunctionMap.fm</definition>
        <argsstring/>
        <name>fm</name>
        <briefdescription>
<para
          >AviatorFunction represents a function that is used in the matchers, used to get attributes in ABAC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"
          line="33"
          column="16"
          bodyfile="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"
          bodystart="33"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a78bc1cfad42cb235bad83ca32120653a"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.model.FunctionMap.addFunction</definition>
        <argsstring>(String name, AviatorFunction function)</argsstring>
        <name>addFunction</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>AviatorFunction</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>addFunction adds an expression function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the new function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"
          line="41"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"
          bodystart="41"
          bodyend="43"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a40daabe5db0f0ba7ef29cece6580f584"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref></type>
        <definition
        >static FunctionMap org.casbin.jcasbin.model.FunctionMap.loadFunctionMap</definition>
        <argsstring>()</argsstring>
        <name>loadFunctionMap</name>
        <briefdescription>
<para>loadFunctionMap loads an initial function map. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the constructor of <ref
                  refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
                  kindref="compound"
                >FunctionMap</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"
          line="50"
          column="31"
          bodyfile="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"
          bodystart="50"
          bodyend="60"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
          kindref="compound"
        >FunctionMap</ref> represents the collection of Function. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>org.casbin.jcasbin.model.FunctionMap</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Map&lt; String, AviatorFunction &gt;</label>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"
      line="29"
      column="25"
      bodyfile="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"
      bodystart="29"
      bodyend="61"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a78bc1cfad42cb235bad83ca32120653a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::FunctionMap</scope><name
        >addFunction</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::FunctionMap</scope><name
        >fm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a40daabe5db0f0ba7ef29cece6580f584"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::FunctionMap</scope><name
        >loadFunctionMap</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::rbac::GroupRoleManager</compoundname>
    <basecompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.rbac.DefaultRoleManager</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1af13cb15a72c28b9f2e83992028f1b674"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.rbac.GroupRoleManager.GroupRoleManager</definition>
        <argsstring>(int maxHierarchyLevel)</argsstring>
        <name>GroupRoleManager</name>
        <param>
          <type>int</type>
          <declname>maxHierarchyLevel</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
              kindref="compound"
            >GroupRoleManager</ref> is the constructor for creating an instance of the <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
              kindref="compound"
            >GroupRoleManager</ref> implementation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxHierarchyLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximized allowed RBAC hierarchy level. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/GroupRoleManager.java"
          line="41"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/GroupRoleManager.java"
          bodystart="41"
          bodyend="43"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1a4e780344ad82bf2a4b49d407d49c2dcb"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.rbac.GroupRoleManager.hasLink</definition>
        <argsstring>(String name1, String name2, String... domain)</argsstring>
        <name>hasLink</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a069d6ba02c24429440b0d634aee97245"
        >hasLink</reimplements>
        <param>
          <type>String</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>hasLink determines whether role: name1 inherits role: name2. </para>
        </briefdescription>
        <detaileddescription>
<para>domain is a prefix to the roles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/GroupRoleManager.java"
          line="50"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/GroupRoleManager.java"
          bodystart="50"
          bodyend="68"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
          kindref="compound"
        >GroupRoleManager</ref> is used for authorization if the user's group is the role who has permission, but the group information is in the default format (policy start with "g") and the role information is in named format (policy start with "g2", "g3", ...). </para>
    </briefdescription>
    <detaileddescription>
<para
      >e.g. p, admin, domain1, data1, read g, alice, group1 g2, group1, admin, domain1</para>
<para
      >As for the previous example, alice should have the permission to read data1, but if we use the <ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
          kindref="compound"
        >DefaultRoleManager</ref>, it will return false. <ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
          kindref="compound"
        >GroupRoleManager</ref> is to handle this situation. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.rbac.DefaultRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
        />
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.rbac.GroupRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.rbac.DefaultRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
        />
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.rbac.GroupRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/rbac/GroupRoleManager.java"
      line="34"
      column="49"
      bodyfile="src/main/java/org/casbin/jcasbin/rbac/GroupRoleManager.java"
      bodystart="34"
      bodyend="69"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaa0430fc0c2ce45fc084bae98a6bd68a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >addLink</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1adb2e1ce22c5a78af3f5b82343336ddbd"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >clear</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaaf4557a43b0a100507458ea41c9f75e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >DefaultRoleManager</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a0d200f7f68e2c76222ab94f74265e3ed"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >deleteLink</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a8766f84b139b6663379c4bc07ed68537"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >getRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1af1d872316a2ca01bcf0a1d5bced3fc8e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >getUsers</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1af13cb15a72c28b9f2e83992028f1b674"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >GroupRoleManager</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1a4e780344ad82bf2a4b49d407d49c2dcb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >hasLink</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a14b51545213a7ba2180eb3440cc28483"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::GroupRoleManager</scope><name
        >printRoles</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::persist::Helper</compoundname>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1_1loadPolicyLineHandler"
      prot="public"
    >org::casbin::jcasbin::persist::Helper::loadPolicyLineHandler</innerclass>
      <sectiondef kind="public-static-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1a4dcd7f47e1d13c7f55189cb34677d34f"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >static void org.casbin.jcasbin.persist.Helper.loadPolicyLine</definition>
        <argsstring>(String line, Model model)</argsstring>
        <name>loadPolicyLine</name>
        <param>
          <type>String</type>
          <declname>line</declname>
        </param>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Helper.java"
          line="26"
          column="24"
          bodyfile="src/main/java/org/casbin/jcasbin/persist/Helper.java"
          bodystart="26"
          bodyend="40"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/persist/Helper.java"
      line="21"
      column="20"
      bodyfile="src/main/java/org/casbin/jcasbin/persist/Helper.java"
      bodystart="21"
      bodyend="41"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1a4dcd7f47e1d13c7f55189cb34677d34f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::persist::Helper</scope><name
        >loadPolicyLine</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer"
    kind="class"
    language="Java"
    prot="package"
  >
    <compoundname>org::casbin::jcasbin::main::InternalEnforcer</compoundname>
    <basecompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.main.CoreEnforcer</basecompoundref>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.main.ManagementEnforcer</derivedcompoundref>
      <sectiondef kind="package-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a64d01b587c431aa9794857b1324f4611"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.InternalEnforcer.addPolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>addPolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>addPolicy adds a rule to the current policy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
          line="28"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
          bodystart="28"
          bodyend="44"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a20976876604a9fc81356eece1e12ade0"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.InternalEnforcer.removePolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>removePolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>removePolicy removes a rule from the current policy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
          line="49"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
          bodystart="49"
          bodyend="65"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1aff2a17b295f3b2099b87a5ab75049836"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.InternalEnforcer.removeFilteredPolicy</definition>
        <argsstring
        >(String sec, String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>removeFilteredPolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >removeFilteredPolicy removes rules based on field filters from the current policy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
          line="70"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
          bodystart="70"
          bodyend="86"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>InternalEnforcer = <ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"
          kindref="compound"
        >CoreEnforcer</ref> + Internal API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>org.casbin.jcasbin.main.SyncedEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.main.ManagementEnforcer</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        />
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.main.Enforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>org.casbin.jcasbin.model.FunctionMap</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"/>
        <childnode refid="10" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="5">
        <label
        >Map&lt; String, Map&lt; String, org.casbin.jcasbin.model.Assertion &gt; &gt;</label>
      </node>
      <node id="8">
        <label>org.casbin.jcasbin.persist.Watcher</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"/>
      </node>
      <node id="7">
        <label>org.casbin.jcasbin.persist.Adapter</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"/>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.model.Model</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Map&lt; String, AviatorFunction &gt;</label>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
        <childnode refid="3" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>rm</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>adapter</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>watcher</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
        <childnode refid="5" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
      line="24"
      column="36"
      bodyfile="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
      bodystart="24"
      bodyend="87"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ace22d53520ec336041327c5fde407c9a"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >adapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a64d01b587c431aa9794857b1324f4611"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1acb180dd0333ec0f905de30fa0ce3fae5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >autoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6ec0491ec93be5610f2b3c5ab54f64d7"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >autoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >buildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0d947725ff17f175b340de745195f711"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >clearPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9926eedc8cd976cff2010139e0d610a6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >enableAutoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4e574b515645cd91edb2e8fb4bdcb111"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >enableAutoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0379bb8527f242a7f2d2c083eaa0b799"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >enableEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >enableLog</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a57bf34be85f88525bf702f8d1a894d40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >enforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1aebd8d031e1684c0a900721b0113f8c68"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >fm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad64639eb9c4952772e5978f046d4e84c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >getAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a1c2008f19c31fc2e6fb0f157a72c62e9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >getModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a538ceb739fd3784340383d6a2031b3c5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >initialize</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad7d18e622a89b24e2e2166cc3d0cfdcb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >isFiltered</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a5297d7b9360184f48461afa8ed238033"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >loadFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3eedac5774252395df78d335bfdaad6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >loadModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4b906fdb277565747c7644d694dcd6bc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >loadPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4250d3c0cc992b6e018ad715491aefcb"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >model</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4f8b315b6995c53e3a5653e0b94430ad"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >modelPath</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3157daf60179a935bbef75728135a50"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a49c441fe2a4287f57d7464abeeb241e7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1aff2a17b295f3b2099b87a5ab75049836"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a20976876604a9fc81356eece1e12ade0"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a77b9617e204bf44558e2d3ad93367025"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >rm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6c9869e3628d45e95b54d52dbcfdc30f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >savePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1adcd0d7e6148fc3024bbea2e9c45092cc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >setAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a156c3408f520d5cfb720beb17c06377f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >setEffector</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1abe7cc2b2787312cda95b2e0cdfbb3916"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >setModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a649b8e55d372d9e32ddad550e945d126"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >setRoleManager</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a663d6d44397970c1cc30752a856f7722"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >setWatcher</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a98af1f80d941fd561c53de73e35443cd"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >validateEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad1a7c1d01fe6d718a89520b4d274fc80"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::InternalEnforcer</scope><name
        >watcher</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::util::function::IPMatchFunc</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >AbstractFunction</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc_1af44639224c87289a81797e68d2d1b281"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>AviatorObject</type>
        <definition
        >AviatorObject org.casbin.jcasbin.util.function.IPMatchFunc.call</definition>
        <argsstring
        >(Map&lt; String, Object &gt; env, AviatorObject arg1, AviatorObject arg2)</argsstring>
        <name>call</name>
        <param>
          <type>Map&lt; String, Object &gt;</type>
          <declname>env</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/IPMatchFunc.java"
          line="29"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/IPMatchFunc.java"
          bodystart="29"
          bodyend="34"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc_1aba6ca02d5d33b76c7a8586a199dbb67f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.util.function.IPMatchFunc.getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/IPMatchFunc.java"
          line="36"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/IPMatchFunc.java"
          bodystart="36"
          bodyend="38"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
          kindref="compound"
        >IPMatchFunc</ref> is the wrapper for ipMatch. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.IPMatchFunc</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.IPMatchFunc</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/IPMatchFunc.java"
      line="28"
      column="42"
      bodyfile="src/main/java/org/casbin/jcasbin/util/function/IPMatchFunc.java"
      bodystart="28"
      bodyend="39"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc_1af44639224c87289a81797e68d2d1b281"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::IPMatchFunc</scope><name
        >call</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc_1aba6ca02d5d33b76c7a8586a199dbb67f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::IPMatchFunc</scope><name
        >getName</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::util::function::KeyMatch2Func</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >AbstractFunction</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func_1aed098b025c47b8232a54424f34a44f8b"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>AviatorObject</type>
        <definition
        >AviatorObject org.casbin.jcasbin.util.function.KeyMatch2Func.call</definition>
        <argsstring
        >(Map&lt; String, Object &gt; env, AviatorObject arg1, AviatorObject arg2)</argsstring>
        <name>call</name>
        <param>
          <type>Map&lt; String, Object &gt;</type>
          <declname>env</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/KeyMatch2Func.java"
          line="29"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatch2Func.java"
          bodystart="29"
          bodyend="34"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func_1aa382a60d991d64458c825292f28a1a78"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.util.function.KeyMatch2Func.getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/KeyMatch2Func.java"
          line="36"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatch2Func.java"
          bodystart="36"
          bodyend="38"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
          kindref="compound"
        >KeyMatch2Func</ref> is the wrapper for keyMatch2. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.KeyMatch2Func</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.KeyMatch2Func</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/KeyMatch2Func.java"
      line="28"
      column="44"
      bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatch2Func.java"
      bodystart="28"
      bodyend="39"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func_1aed098b025c47b8232a54424f34a44f8b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::KeyMatch2Func</scope><name
        >call</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func_1aa382a60d991d64458c825292f28a1a78"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::KeyMatch2Func</scope><name
        >getName</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::util::function::KeyMatch3Func</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >AbstractFunction</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func_1a544440bc5c15cf7d146dd50f16b3a1a5"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>AviatorObject</type>
        <definition
        >AviatorObject org.casbin.jcasbin.util.function.KeyMatch3Func.call</definition>
        <argsstring
        >(Map&lt; String, Object &gt; env, AviatorObject arg1, AviatorObject arg2)</argsstring>
        <name>call</name>
        <param>
          <type>Map&lt; String, Object &gt;</type>
          <declname>env</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/KeyMatch3Func.java"
          line="29"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatch3Func.java"
          bodystart="29"
          bodyend="34"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func_1aea3fa4f07221c508ef135db7e7d498ec"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.util.function.KeyMatch3Func.getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/KeyMatch3Func.java"
          line="36"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatch3Func.java"
          bodystart="36"
          bodyend="38"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func"
          kindref="compound"
        >KeyMatch3Func</ref> is the wrapper for keyMatch2. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.KeyMatch3Func</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.KeyMatch3Func</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/KeyMatch3Func.java"
      line="28"
      column="44"
      bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatch3Func.java"
      bodystart="28"
      bodyend="39"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func_1a544440bc5c15cf7d146dd50f16b3a1a5"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::KeyMatch3Func</scope><name
        >call</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func_1aea3fa4f07221c508ef135db7e7d498ec"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::KeyMatch3Func</scope><name
        >getName</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::util::function::KeyMatchFunc</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >AbstractFunction</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc_1a495e5f6a3c116469c79f2fa7a3c9f9f7"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>AviatorObject</type>
        <definition
        >AviatorObject org.casbin.jcasbin.util.function.KeyMatchFunc.call</definition>
        <argsstring
        >(Map&lt; String, Object &gt; env, AviatorObject arg1, AviatorObject arg2)</argsstring>
        <name>call</name>
        <param>
          <type>Map&lt; String, Object &gt;</type>
          <declname>env</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/KeyMatchFunc.java"
          line="29"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatchFunc.java"
          bodystart="29"
          bodyend="34"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc_1a5aed0c508f949dfd74d6d4b60b96c2e1"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.util.function.KeyMatchFunc.getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/KeyMatchFunc.java"
          line="36"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatchFunc.java"
          bodystart="36"
          bodyend="38"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
          kindref="compound"
        >KeyMatchFunc</ref> is the wrapper for keyMatch. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.KeyMatchFunc</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.KeyMatchFunc</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/KeyMatchFunc.java"
      line="28"
      column="43"
      bodyfile="src/main/java/org/casbin/jcasbin/util/function/KeyMatchFunc.java"
      bodystart="28"
      bodyend="39"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc_1a495e5f6a3c116469c79f2fa7a3c9f9f7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::KeyMatchFunc</scope><name
        >call</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc_1a5aed0c508f949dfd74d6d4b60b96c2e1"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::KeyMatchFunc</scope><name
        >getName</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1_1loadPolicyLineHandler"
    kind="interface"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::persist::Helper::loadPolicyLineHandler</compoundname>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
      <param>
        <type>U</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1_1loadPolicyLineHandler_1a91d15827c28e2c71dee2647b4cf23240"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.Helper.loadPolicyLineHandler&lt; T, U &gt;.accept</definition>
        <argsstring>(T t, U u)</argsstring>
        <name>accept</name>
        <param>
          <type>T</type>
          <declname>t</declname>
        </param>
        <param>
          <type>U</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Helper.java"
          line="23"
          column="14"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/persist/Helper.java"
      line="22"
      column="44"
      bodyfile="src/main/java/org/casbin/jcasbin/persist/Helper.java"
      bodystart="22"
      bodyend="24"
    />
    <listofallmembers>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1_1loadPolicyLineHandler_1a91d15827c28e2c71dee2647b4cf23240"
        prot="public"
        virt="non-virtual"
      ><scope
        >org::casbin::jcasbin::persist::Helper::loadPolicyLineHandler</scope><name
        >accept</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::main::ManagementEnforcer</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.main.InternalEnforcer</basecompoundref>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.main.Enforcer</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a02a148724235d5a345db21d0544bcba4"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.ManagementEnforcer.getAllSubjects</definition>
        <argsstring>()</argsstring>
        <name>getAllSubjects</name>
        <briefdescription>
<para
          >getAllSubjects gets the list of subjects that show up in the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para
              >all the subjects in "p" policy rules. It actually collects the 0-index elements of "p" policy rules. So make sure your subject is the 0-index element, like (sub, obj, act). Duplicates are removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="34"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="34"
          bodyend="36"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a64bd155e5b79f76fba3d4645ef059473"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.ManagementEnforcer.getAllNamedSubjects</definition>
        <argsstring>(String ptype)</argsstring>
        <name>getAllNamedSubjects</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
<para
          >GetAllNamedSubjects gets the list of subjects that show up in the currentnamed policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >all the subjects in policy rules of the ptype type. It actually collects the 0-index elements of the policy rules. So make sure your subject is the 0-index element, like (sub, obj, act). Duplicates are removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="47"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="47"
          bodyend="49"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afe061eec06bae40791b2a17488e7d440"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.ManagementEnforcer.getAllObjects</definition>
        <argsstring>()</argsstring>
        <name>getAllObjects</name>
        <briefdescription>
<para
          >getAllObjects gets the list of objects that show up in the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para
              >all the objects in "p" policy rules. It actually collects the 1-index elements of "p" policy rules. So make sure your object is the 1-index element, like (sub, obj, act). Duplicates are removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="59"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="59"
          bodyend="61"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad36cc921314079e5dcc6c92ab89de91d"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.ManagementEnforcer.getAllNamedObjects</definition>
        <argsstring>(String ptype)</argsstring>
        <name>getAllNamedObjects</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
<para
          >getAllNamedObjects gets the list of objects that show up in the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >all the objects in policy rules of the ptype type. It actually collects the 1-index elements of the policy rules. So make sure your object is the 1-index element, like (sub, obj, act). Duplicates are removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="72"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="72"
          bodyend="74"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a615b4057c4b9697cb4cab747c9ca2bbe"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.ManagementEnforcer.getAllActions</definition>
        <argsstring>()</argsstring>
        <name>getAllActions</name>
        <briefdescription>
<para
          >getAllActions gets the list of actions that show up in the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para
              >all the actions in "p" policy rules. It actually collects the 2-index elements of "p" policy rules. So make sure your action is the 2-index element, like (sub, obj, act). Duplicates are removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="84"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="84"
          bodyend="86"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ac9a8c113ba5814b238775f76fa051a23"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.ManagementEnforcer.getAllNamedActions</definition>
        <argsstring>(String ptype)</argsstring>
        <name>getAllNamedActions</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
<para
          >GetAllNamedActions gets the list of actions that show up in the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >all the actions in policy rules of the ptype type. It actually collects the 2-index elements of the policy rules. So make sure your action is the 2-index element, like (sub, obj, act). Duplicates are removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="97"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="97"
          bodyend="99"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1bc99cd18bbc3676576ad79aafe5e358"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.ManagementEnforcer.getAllRoles</definition>
        <argsstring>()</argsstring>
        <name>getAllRoles</name>
        <briefdescription>
<para
          >getAllRoles gets the list of roles that show up in the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para
              >all the roles in "g" policy rules. It actually collects the 1-index elements of "g" policy rules. So make sure your role is the 1-index element, like (sub, role). Duplicates are removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="109"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="109"
          bodyend="111"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a73db140800a2b3b5536cb5a5a1245750"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.ManagementEnforcer.getAllNamedRoles</definition>
        <argsstring>(String ptype)</argsstring>
        <name>getAllNamedRoles</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
<para
          >getAllNamedRoles gets the list of roles that show up in the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >all the subjects in policy rules of the ptype type. It actually collects the 0-index elements of the policy rules. So make sure your subject is the 0-index element, like (sub, obj, act). Duplicates are removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="122"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="122"
          bodyend="124"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8fe83aae68122f404f5c248205041506"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.ManagementEnforcer.getPolicy</definition>
        <argsstring>()</argsstring>
        <name>getPolicy</name>
        <briefdescription>
<para>getPolicy gets all the authorization rules in the policy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>all the "p" policy rules. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="131"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="131"
          bodyend="133"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae42feedb5e204600566fca5c3b5764f9"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.ManagementEnforcer.getFilteredPolicy</definition>
        <argsstring>(int fieldIndex, String... fieldValues)</argsstring>
        <name>getFilteredPolicy</name>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >getFilteredPolicy gets all the authorization rules in the policy, field filters can be specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the filtered "p" policy rules. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="143"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="143"
          bodyend="145"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a79a8449681f1351650ffe75a15f49970"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.ManagementEnforcer.getNamedPolicy</definition>
        <argsstring>(String ptype)</argsstring>
        <name>getNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
<para
          >getNamedPolicy gets all the authorization rules in the named policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the "p" policy rules of the specified ptype. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="153"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="153"
          bodyend="155"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8bbc7a5f03e97a94c08eea0791999cc7"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.ManagementEnforcer.getFilteredNamedPolicy</definition>
        <argsstring
        >(String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>getFilteredNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >getFilteredNamedPolicy gets all the authorization rules in the named policy, field filters can be specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the filtered "p" policy rules of the specified ptype. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="166"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="166"
          bodyend="168"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a5fe374736c6b242fa46f98f53ffd1c97"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.ManagementEnforcer.getGroupingPolicy</definition>
        <argsstring>()</argsstring>
        <name>getGroupingPolicy</name>
        <briefdescription>
<para
          >getGroupingPolicy gets all the role inheritance rules in the policy. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>all the "g" policy rules. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="175"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="175"
          bodyend="177"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aec3ae451c6c6cc2019189e18d6633942"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.ManagementEnforcer.getFilteredGroupingPolicy</definition>
        <argsstring>(int fieldIndex, String... fieldValues)</argsstring>
        <name>getFilteredGroupingPolicy</name>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >getFilteredGroupingPolicy gets all the role inheritance rules in the policy, field filters can be specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the filtered "g" policy rules. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="187"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="187"
          bodyend="189"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abba16b254dd2d441077374f10a41f5d8"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.ManagementEnforcer.getNamedGroupingPolicy</definition>
        <argsstring>(String ptype)</argsstring>
        <name>getNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
<para
          >getNamedGroupingPolicy gets all the role inheritance rules in the policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the "g" policy rules of the specified ptype. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="197"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="197"
          bodyend="199"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9de8af989227478e2def8453a1212816"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.ManagementEnforcer.getFilteredNamedGroupingPolicy</definition>
        <argsstring
        >(String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>getFilteredNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >getFilteredNamedGroupingPolicy gets all the role inheritance rules in the policy, field filters can be specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the filtered "g" policy rules of the specified ptype. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="210"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="210"
          bodyend="212"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abdda8a710e53ef8eab16b1302f3cffce"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.hasPolicy</definition>
        <argsstring>(List&lt; String &gt; params)</argsstring>
        <name>hasPolicy</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>hasPolicy determines whether an authorization rule exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule, ptype "p" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="220"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="220"
          bodyend="222"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a856c9861df0247b781152a1ed5f5e006"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.hasPolicy</definition>
        <argsstring>(String... params)</argsstring>
        <name>hasPolicy</name>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>hasPolicy determines whether an authorization rule exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule, ptype "p" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="230"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="230"
          bodyend="232"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a490c6b5a9300fcf3597b22e8d1c23965"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.hasNamedPolicy</definition>
        <argsstring>(String ptype, List&lt; String &gt; params)</argsstring>
        <name>hasNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >hasNamedPolicy determines whether a named authorization rule exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="241"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="241"
          bodyend="243"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afae748b1ff0140640a07a89233810ba7"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.hasNamedPolicy</definition>
        <argsstring>(String ptype, String... params)</argsstring>
        <name>hasNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >hasNamedPolicy determines whether a named authorization rule exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="252"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="252"
          bodyend="254"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.addPolicy</definition>
        <argsstring>(List&lt; String &gt; params)</argsstring>
        <name>addPolicy</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>addPolicy adds an authorization rule to the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >If the rule already exists, the function returns false and the rule will not be added. Otherwise the function returns true by adding the new rule.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule, ptype "p" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="264"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="264"
          bodyend="266"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abee2ec66d4665cb585aea158eb94ba8a"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.addPolicy</definition>
        <argsstring>(String... params)</argsstring>
        <name>addPolicy</name>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>addPolicy adds an authorization rule to the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >If the rule already exists, the function returns false and the rule will not be added. Otherwise the function returns true by adding the new rule.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule, ptype "p" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="276"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="276"
          bodyend="278"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a18008129a41d2de393ea31c3116ac53d"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.addNamedPolicy</definition>
        <argsstring>(String ptype, List&lt; String &gt; params)</argsstring>
        <name>addNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >AddNamedPolicy adds an authorization rule to the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >If the rule already exists, the function returns false and the rule will not be added. Otherwise the function returns true by adding the new rule.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="289"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="289"
          bodyend="291"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a073f604c3eca762eb3ab65d4ba2d5f4b"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.addNamedPolicy</definition>
        <argsstring>(String ptype, String... params)</argsstring>
        <name>addNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >AddNamedPolicy adds an authorization rule to the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >If the rule already exists, the function returns false and the rule will not be added. Otherwise the function returns true by adding the new rule.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="302"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="302"
          bodyend="304"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removePolicy</definition>
        <argsstring>(List&lt; String &gt; params)</argsstring>
        <name>removePolicy</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >removePolicy removes an authorization rule from the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule, ptype "p" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="312"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="312"
          bodyend="314"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aa97f4e7097f9c94136eccb0fac5524ce"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removePolicy</definition>
        <argsstring>(String... params)</argsstring>
        <name>removePolicy</name>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >removePolicy removes an authorization rule from the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule, ptype "p" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="322"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="322"
          bodyend="324"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeFilteredPolicy</definition>
        <argsstring>(int fieldIndex, String... fieldValues)</argsstring>
        <name>removeFilteredPolicy</name>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >removeFilteredPolicy removes an authorization rule from the current policy, field filters can be specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="334"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="334"
          bodyend="336"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad37d626eefdd24672238b561b89df382"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeNamedPolicy</definition>
        <argsstring>(String ptype, List&lt; String &gt; params)</argsstring>
        <name>removeNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >removeNamedPolicy removes an authorization rule from the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="345"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="345"
          bodyend="347"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8a1e6295055182d67de8c0ca57343041"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeNamedPolicy</definition>
        <argsstring>(String ptype, String... params)</argsstring>
        <name>removeNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >removeNamedPolicy removes an authorization rule from the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "p" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="356"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="356"
          bodyend="358"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a08335329c3d380bf56606b3a3bb32e89"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeFilteredNamedPolicy</definition>
        <argsstring
        >(String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>removeFilteredNamedPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >removeFilteredNamedPolicy removes an authorization rule from the current named policy, field filters can be specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "p", "p2", "p3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="369"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="369"
          bodyend="371"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4792bf1723219e7f7568162eb3cef2bc"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.hasGroupingPolicy</definition>
        <argsstring>(List&lt; String &gt; params)</argsstring>
        <name>hasGroupingPolicy</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >hasGroupingPolicy determines whether a role inheritance rule exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule, ptype "g" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="379"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="379"
          bodyend="381"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a700ddd84ef74c900865777808fd1e255"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.hasGroupingPolicy</definition>
        <argsstring>(String... params)</argsstring>
        <name>hasGroupingPolicy</name>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >hasGroupingPolicy determines whether a role inheritance rule exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule, ptype "g" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="389"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="389"
          bodyend="391"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f4898c1bfe12eb7c182eade59e2d8f7"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.hasNamedGroupingPolicy</definition>
        <argsstring>(String ptype, List&lt; String &gt; params)</argsstring>
        <name>hasNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >hasNamedGroupingPolicy determines whether a named role inheritance rule exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="400"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="400"
          bodyend="402"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1acbd49fc353c48a8470e6b55effd25518"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.hasNamedGroupingPolicy</definition>
        <argsstring>(String ptype, String... params)</argsstring>
        <name>hasNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >hasNamedGroupingPolicy determines whether a named role inheritance rule exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="411"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="411"
          bodyend="413"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.addGroupingPolicy</definition>
        <argsstring>(List&lt; String &gt; params)</argsstring>
        <name>addGroupingPolicy</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >addGroupingPolicy adds a role inheritance rule to the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >If the rule already exists, the function returns false and the rule will not be added. Otherwise the function returns true by adding the new rule.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule, ptype "g" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="423"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="423"
          bodyend="425"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9ef11047ede8e36e7add2eb52bd06da1"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.addGroupingPolicy</definition>
        <argsstring>(String... params)</argsstring>
        <name>addGroupingPolicy</name>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >addGroupingPolicy adds a role inheritance rule to the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >If the rule already exists, the function returns false and the rule will not be added. Otherwise the function returns true by adding the new rule.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule, ptype "g" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="435"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="435"
          bodyend="437"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade3e57fb44bb25ab0a6f0009abcef1a6"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.addNamedGroupingPolicy</definition>
        <argsstring>(String ptype, List&lt; String &gt; params)</argsstring>
        <name>addNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >addNamedGroupingPolicy adds a named role inheritance rule to the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >If the rule already exists, the function returns false and the rule will not be added. Otherwise the function returns true by adding the new rule.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="448"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="448"
          bodyend="455"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8ea0c8a40f08322d9bec9abfb1a76420"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.addNamedGroupingPolicy</definition>
        <argsstring>(String ptype, String... params)</argsstring>
        <name>addNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >addNamedGroupingPolicy adds a named role inheritance rule to the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >If the rule already exists, the function returns false and the rule will not be added. Otherwise the function returns true by adding the new rule.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="466"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="466"
          bodyend="468"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeGroupingPolicy</definition>
        <argsstring>(List&lt; String &gt; params)</argsstring>
        <name>removeGroupingPolicy</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >removeGroupingPolicy removes a role inheritance rule from the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule, ptype "g" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="476"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="476"
          bodyend="478"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a57bc134fa11f47f661d9c4f86870c9da"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeGroupingPolicy</definition>
        <argsstring>(String... params)</argsstring>
        <name>removeGroupingPolicy</name>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >removeGroupingPolicy removes a role inheritance rule from the current policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule, ptype "g" is implicitly used. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="486"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="486"
          bodyend="488"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1d73ccb6974523e067ebf5d9e6b28a3c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeFilteredGroupingPolicy</definition>
        <argsstring>(int fieldIndex, String... fieldValues)</argsstring>
        <name>removeFilteredGroupingPolicy</name>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >removeFilteredGroupingPolicy removes a role inheritance rule from the current policy, field filters can be specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="498"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="498"
          bodyend="500"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f2fb581b79dc89f73642dab67d9f5c6"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeNamedGroupingPolicy</definition>
        <argsstring>(String ptype, List&lt; String &gt; params)</argsstring>
        <name>removeNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >removeNamedGroupingPolicy removes a role inheritance rule from the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="509"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="509"
          bodyend="516"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1af70dfae94c2ca8954ba2e5294900afa7"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeNamedGroupingPolicy</definition>
        <argsstring>(String ptype, String... params)</argsstring>
        <name>removeNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para
          >removeNamedGroupingPolicy removes a role inheritance rule from the current named policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the "g" policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="525"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="525"
          bodyend="527"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade55e4aa087ec91aeeb8827bad1dac3e"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.ManagementEnforcer.removeFilteredNamedGroupingPolicy</definition>
        <argsstring
        >(String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>removeFilteredNamedGroupingPolicy</name>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >removeFilteredNamedGroupingPolicy removes a role inheritance rule from the current named policy, field filters can be specified. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, can be "g", "g2", "g3", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="538"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="538"
          bodyend="545"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ab63f44be32bf147161644644c07e203f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.ManagementEnforcer.addFunction</definition>
        <argsstring>(String name, AviatorFunction function)</argsstring>
        <name>addFunction</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>AviatorFunction</type>
          <declname>function</declname>
        </param>
        <briefdescription>
<para>addFunction adds a customized function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the new function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          line="553"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
          bodystart="553"
          bodyend="555"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
          kindref="compound"
        >ManagementEnforcer</ref> = InternalEnforcer + Management API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>org.casbin.jcasbin.main.SyncedEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.ManagementEnforcer</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.main.Enforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>org.casbin.jcasbin.model.FunctionMap</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"/>
        <childnode refid="11" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="6">
        <label
        >Map&lt; String, Map&lt; String, org.casbin.jcasbin.model.Assertion &gt; &gt;</label>
      </node>
      <node id="9">
        <label>org.casbin.jcasbin.persist.Watcher</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"/>
      </node>
      <node id="8">
        <label>org.casbin.jcasbin.persist.Adapter</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"/>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.model.Model</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.ManagementEnforcer</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Map&lt; String, AviatorFunction &gt;</label>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
        <childnode refid="4" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>rm</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>adapter</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>watcher</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
        <childnode refid="6" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
      line="26"
      column="49"
      bodyfile="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
      bodystart="26"
      bodyend="556"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ace22d53520ec336041327c5fde407c9a"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >adapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ab63f44be32bf147161644644c07e203f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addFunction</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9ef11047ede8e36e7add2eb52bd06da1"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade3e57fb44bb25ab0a6f0009abcef1a6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8ea0c8a40f08322d9bec9abfb1a76420"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a18008129a41d2de393ea31c3116ac53d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a073f604c3eca762eb3ab65d4ba2d5f4b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abee2ec66d4665cb585aea158eb94ba8a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a64d01b587c431aa9794857b1324f4611"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1acb180dd0333ec0f905de30fa0ce3fae5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >autoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6ec0491ec93be5610f2b3c5ab54f64d7"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >autoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >buildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0d947725ff17f175b340de745195f711"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >clearPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9926eedc8cd976cff2010139e0d610a6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >enableAutoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4e574b515645cd91edb2e8fb4bdcb111"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >enableAutoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0379bb8527f242a7f2d2c083eaa0b799"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >enableEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >enableLog</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a57bf34be85f88525bf702f8d1a894d40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >enforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1aebd8d031e1684c0a900721b0113f8c68"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >fm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad64639eb9c4952772e5978f046d4e84c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a615b4057c4b9697cb4cab747c9ca2bbe"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAllActions</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ac9a8c113ba5814b238775f76fa051a23"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAllNamedActions</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad36cc921314079e5dcc6c92ab89de91d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAllNamedObjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a73db140800a2b3b5536cb5a5a1245750"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAllNamedRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a64bd155e5b79f76fba3d4645ef059473"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAllNamedSubjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afe061eec06bae40791b2a17488e7d440"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAllObjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1bc99cd18bbc3676576ad79aafe5e358"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAllRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a02a148724235d5a345db21d0544bcba4"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getAllSubjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aec3ae451c6c6cc2019189e18d6633942"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getFilteredGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9de8af989227478e2def8453a1212816"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getFilteredNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8bbc7a5f03e97a94c08eea0791999cc7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getFilteredNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae42feedb5e204600566fca5c3b5764f9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a5fe374736c6b242fa46f98f53ffd1c97"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a1c2008f19c31fc2e6fb0f157a72c62e9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abba16b254dd2d441077374f10a41f5d8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a79a8449681f1351650ffe75a15f49970"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8fe83aae68122f404f5c248205041506"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >getPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4792bf1723219e7f7568162eb3cef2bc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >hasGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a700ddd84ef74c900865777808fd1e255"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >hasGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f4898c1bfe12eb7c182eade59e2d8f7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >hasNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1acbd49fc353c48a8470e6b55effd25518"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >hasNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a490c6b5a9300fcf3597b22e8d1c23965"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >hasNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afae748b1ff0140640a07a89233810ba7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >hasNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abdda8a710e53ef8eab16b1302f3cffce"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >hasPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a856c9861df0247b781152a1ed5f5e006"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >hasPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a538ceb739fd3784340383d6a2031b3c5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >initialize</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad7d18e622a89b24e2e2166cc3d0cfdcb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >isFiltered</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a5297d7b9360184f48461afa8ed238033"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >loadFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3eedac5774252395df78d335bfdaad6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >loadModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4b906fdb277565747c7644d694dcd6bc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >loadPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4250d3c0cc992b6e018ad715491aefcb"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >model</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4f8b315b6995c53e3a5653e0b94430ad"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >modelPath</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3157daf60179a935bbef75728135a50"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a49c441fe2a4287f57d7464abeeb241e7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1d73ccb6974523e067ebf5d9e6b28a3c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeFilteredGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade55e4aa087ec91aeeb8827bad1dac3e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeFilteredNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a08335329c3d380bf56606b3a3bb32e89"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeFilteredNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1aff2a17b295f3b2099b87a5ab75049836"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a57bc134fa11f47f661d9c4f86870c9da"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f2fb581b79dc89f73642dab67d9f5c6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1af70dfae94c2ca8954ba2e5294900afa7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad37d626eefdd24672238b561b89df382"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8a1e6295055182d67de8c0ca57343041"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removeNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aa97f4e7097f9c94136eccb0fac5524ce"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a20976876604a9fc81356eece1e12ade0"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a77b9617e204bf44558e2d3ad93367025"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >rm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6c9869e3628d45e95b54d52dbcfdc30f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >savePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1adcd0d7e6148fc3024bbea2e9c45092cc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >setAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a156c3408f520d5cfb720beb17c06377f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >setEffector</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1abe7cc2b2787312cda95b2e0cdfbb3916"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >setModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a649b8e55d372d9e32ddad550e945d126"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >setRoleManager</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a663d6d44397970c1cc30752a856f7722"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >setWatcher</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a98af1f80d941fd561c53de73e35443cd"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >validateEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad1a7c1d01fe6d718a89520b4d274fc80"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::ManagementEnforcer</scope><name
        >watcher</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::model::Model</compoundname>
    <basecompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.model.Policy</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a3b95779845a072b8b022a0c2e599f941"
        prot="private"
        static="yes"
        mutable="no"
      >
        <type>Map&lt; String, String &gt;</type>
        <definition
        >Map&lt;String, String&gt; org.casbin.jcasbin.model.Model.sectionNameMap</definition>
        <argsstring/>
        <name>sectionNameMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="29"
          column="24"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="29"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-static-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a1c356efb5dae5a2c9136897b9a9a135c"
        prot="package"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.model.Model.[static initializer]</definition>
        <argsstring/>
        <name>[static initializer]</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="29"
          column="24"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1abbd3915d8dc76332ebbd7b25cf3fee72"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.model.Model.Model</definition>
        <argsstring>()</argsstring>
        <name>Model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="40"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="40"
          bodyend="42"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a3535f8d53ed9895426b230722b10a1ca"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition>boolean org.casbin.jcasbin.model.Model.addDef</definition>
        <argsstring>(String sec, String key, String value)</argsstring>
        <name>addDef</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <param>
          <type>String</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>addDef adds an assertion to the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule, separated by ", ". </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="57"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="57"
          bodyend="81"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a172cb43bf8984fc898cac431c1999e9f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.model.Model.loadModel</definition>
        <argsstring>(String path)</argsstring>
        <name>loadModel</name>
        <param>
          <type>String</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>loadModel loads the model from model CONF file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="107"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="107"
          bodyend="116"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1aeb2b0b644cf8d18478ccc871ec59018a"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.model.Model.loadModelFromText</definition>
        <argsstring>(String text)</argsstring>
        <name>loadModelFromText</name>
        <param>
          <type>String</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>loadModelFromText loads the model from the text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>the model text. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="123"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="123"
          bodyend="132"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1ab0a2500b20492c9a0db00a83e7717eef"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.model.Model.saveModelToText</definition>
        <argsstring>()</argsstring>
        <name>saveModelToText</name>
        <briefdescription>
<para>saveModelToText saves the model to the text. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the model text. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="159"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="159"
          bodyend="179"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1ab28d87ff7ecaa9039484275160ab9e17"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.model.Model.printModel</definition>
        <argsstring>()</argsstring>
        <name>printModel</name>
        <briefdescription>
<para>printModel prints the model to the log. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="184"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="184"
          bodyend="191"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1accf7ad617b3083881f8d38af668d314c"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.model.Model.loadAssertion</definition>
        <argsstring
        >(Model model, Config cfg, String sec, String key)</argsstring>
        <name>loadAssertion</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
              kindref="compound"
            >Config</ref></type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="44"
          column="21"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="44"
          bodyend="47"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a2f84ecc192dda572575a66a76b60f0e2"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.model.Model.getKeySuffix</definition>
        <argsstring>(int i)</argsstring>
        <name>getKeySuffix</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="83"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="83"
          bodyend="89"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a4bbff1f1d565ecac8254106438c99514"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.model.Model.loadSection</definition>
        <argsstring>(Model model, Config cfg, String sec)</argsstring>
        <name>loadSection</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
              kindref="compound"
            >Config</ref></type>
          <declname>cfg</declname>
        </param>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="91"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="91"
          bodyend="100"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1adce002fce404a0935b8565e1dc2c67da"
        prot="private"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.model.Model.saveSectionToText</definition>
        <argsstring>(String sec)</argsstring>
        <name>saveSectionToText</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <briefdescription>
<para>saveSectionToText saves the section to the text. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the section text. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Model.java"
          line="139"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
          bodystart="139"
          bodyend="152"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
          kindref="compound"
        >Model</ref> represents the whole access control model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.casbin.jcasbin.model.Model</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label
        >Map&lt; String, Map&lt; String, org.casbin.jcasbin.model.Assertion &gt; &gt;</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.model.Model</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
        <childnode refid="3" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/model/Model.java"
      line="28"
      column="26"
      bodyfile="src/main/java/org/casbin/jcasbin/model/Model.java"
      bodystart="28"
      bodyend="192"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a1c356efb5dae5a2c9136897b9a9a135c"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >[static initializer]</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a3535f8d53ed9895426b230722b10a1ca"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >addDef</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a221cfdebb21eb9156d26fff6d31d7e2d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a07daa48b2152a421657a3974558e689e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >buildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a829c28d4cf8aa054ec02e511915289b7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >clearPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a861c9d9047cdc53e3b5f964ec3b90f9b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >getFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a2f84ecc192dda572575a66a76b60f0e2"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >getKeySuffix</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a1ba3b58cfe4b2b180755accd9a4c0a5a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >getPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a671d6ce15b4e38b5fb322ccb8cdcb836"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >getValuesForFieldInPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3ef77a8aea4e373a3b44aa4f20387f05"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >hasPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1accf7ad617b3083881f8d38af668d314c"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >loadAssertion</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a172cb43bf8984fc898cac431c1999e9f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >loadModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1aeb2b0b644cf8d18478ccc871ec59018a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >loadModelFromText</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a4bbff1f1d565ecac8254106438c99514"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >loadSection</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a39d0da17dcbcf8c437b678bfaf12176f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >model</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1abbd3915d8dc76332ebbd7b25cf3fee72"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >Model</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1ab28d87ff7ecaa9039484275160ab9e17"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >printModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a441c38321351f4990f3169feb2c75cab"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >printPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3e55f30f71451bb51631aa0ce1b8bd70"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1af7540f0aeacfe8664a893d8d1b5e7e1f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1ab0a2500b20492c9a0db00a83e7717eef"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >saveModelToText</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a68d8a7c8db6c0cd68ccadc8035ef7291"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >savePolicyToText</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1adce002fce404a0935b8565e1dc2c67da"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >saveSectionToText</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a3b95779845a072b8b022a0c2e599f941"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Model</scope><name
        >sectionNameMap</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::model::Policy</compoundname>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.model.Model</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a39d0da17dcbcf8c437b678bfaf12176f"
        prot="public"
        static="no"
        mutable="no"
      >
        <type>Map&lt; String, Map&lt; String, <ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref> &gt; &gt;</type>
        <definition
        >Map&lt;String, Map&lt;String, Assertion&gt; &gt; org.casbin.jcasbin.model.Policy.model</definition>
        <argsstring/>
        <name>model</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="25"
          column="16"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="25"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a07daa48b2152a421657a3974558e689e"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.model.Policy.buildRoleLinks</definition>
        <argsstring>(RoleManager rm)</argsstring>
        <name>buildRoleLinks</name>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
              kindref="compound"
            >RoleManager</ref></type>
          <declname>rm</declname>
        </param>
        <briefdescription>
<para>buildRoleLinks initializes the roles in RBAC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rm</parametername>
</parameternamelist>
<parameterdescription>
<para>the role manager. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="32"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="32"
          bodyend="38"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a441c38321351f4990f3169feb2c75cab"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.model.Policy.printPolicy</definition>
        <argsstring>()</argsstring>
        <name>printPolicy</name>
        <briefdescription>
<para>printPolicy prints the policy to log. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="43"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="43"
          bodyend="60"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a68d8a7c8db6c0cd68ccadc8035ef7291"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.model.Policy.savePolicyToText</definition>
        <argsstring>()</argsstring>
        <name>savePolicyToText</name>
        <briefdescription>
<para>savePolicyToText saves the policy to the text. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the policy text. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="67"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="67"
          bodyend="91"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a829c28d4cf8aa054ec02e511915289b7"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.model.Policy.clearPolicy</definition>
        <argsstring>()</argsstring>
        <name>clearPolicy</name>
        <briefdescription>
<para>clearPolicy clears all current policy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="96"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="96"
          bodyend="108"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a1ba3b58cfe4b2b180755accd9a4c0a5a"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.model.Policy.getPolicy</definition>
        <argsstring>(String sec, String ptype)</argsstring>
        <name>getPolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <briefdescription>
<para>getPolicy gets all rules in a policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the policy rules of section sec and policy type ptype. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="117"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="117"
          bodyend="119"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a861c9d9047cdc53e3b5f964ec3b90f9b"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.model.Policy.getFilteredPolicy</definition>
        <argsstring
        >(String sec, String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>getFilteredPolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para>getFilteredPolicy gets rules based on field filters from a policy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the filtered policy rules of section sec and policy type ptype. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="131"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="131"
          bodyend="150"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3ef77a8aea4e373a3b44aa4f20387f05"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.model.Policy.hasPolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>hasPolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para
          >hasPolicy determines whether a model has the specified policy rule. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rule</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the rule exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="160"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="160"
          bodyend="168"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a221cfdebb21eb9156d26fff6d31d7e2d"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.model.Policy.addPolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>addPolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>addPolicy adds a policy rule to the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rule</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="178"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="178"
          bodyend="184"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1af7540f0aeacfe8664a893d8d1b5e7e1f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.model.Policy.removePolicy</definition>
        <argsstring
        >(String sec, String ptype, List&lt; String &gt; rule)</argsstring>
        <name>removePolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>removePolicy removes a policy rule from the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rule</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="194"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="194"
          bodyend="204"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3e55f30f71451bb51631aa0ce1b8bd70"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.model.Policy.removeFilteredPolicy</definition>
        <argsstring
        >(String sec, String ptype, int fieldIndex, String... fieldValues)</argsstring>
        <name>removeFilteredPolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>fieldValues</declname>
        </param>
        <briefdescription>
<para
          >removeFilteredPolicy removes policy rules based on field filters from the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's start index to be matched. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldValues</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the field values to be matched, value "" means not to match this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="216"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="216"
          bodyend="239"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a671d6ce15b4e38b5fb322ccb8cdcb836"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.model.Policy.getValuesForFieldInPolicy</definition>
        <argsstring>(String sec, String ptype, int fieldIndex)</argsstring>
        <name>getValuesForFieldInPolicy</name>
        <param>
          <type>String</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>String</type>
          <declname>ptype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fieldIndex</declname>
        </param>
        <briefdescription>
<para
          >getValuesForFieldInPolicy gets all values for a field for all rules in a policy, duplicated values are removed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section, "p" or "g". </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptype</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy type, "p", "p2", .. or "g", "g2", .. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fieldIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the policy rule's index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the field values specified by fieldIndex. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/model/Policy.java"
          line="249"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
          bodystart="249"
          bodyend="259"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>org.casbin.jcasbin.model.Model</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label
        >Map&lt; String, Map&lt; String, org.casbin.jcasbin.model.Assertion &gt; &gt;</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
        <childnode refid="2" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/model/Policy.java"
      line="24"
      column="20"
      bodyfile="src/main/java/org/casbin/jcasbin/model/Policy.java"
      bodystart="24"
      bodyend="260"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a221cfdebb21eb9156d26fff6d31d7e2d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a07daa48b2152a421657a3974558e689e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >buildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a829c28d4cf8aa054ec02e511915289b7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >clearPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a861c9d9047cdc53e3b5f964ec3b90f9b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >getFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a1ba3b58cfe4b2b180755accd9a4c0a5a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >getPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a671d6ce15b4e38b5fb322ccb8cdcb836"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >getValuesForFieldInPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3ef77a8aea4e373a3b44aa4f20387f05"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >hasPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a39d0da17dcbcf8c437b678bfaf12176f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >model</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a441c38321351f4990f3169feb2c75cab"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >printPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3e55f30f71451bb51631aa0ce1b8bd70"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1af7540f0aeacfe8664a893d8d1b5e7e1f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a68d8a7c8db6c0cd68ccadc8035ef7291"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::model::Policy</scope><name
        >savePolicyToText</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname
    >org::casbin::jcasbin::util::function::RegexMatchFunc</compoundname>
    <basecompoundref
      prot="public"
      virt="non-virtual"
    >AbstractFunction</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc_1ada784bca7678557f50f835c890c748d1"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>AviatorObject</type>
        <definition
        >AviatorObject org.casbin.jcasbin.util.function.RegexMatchFunc.call</definition>
        <argsstring
        >(Map&lt; String, Object &gt; env, AviatorObject arg1, AviatorObject arg2)</argsstring>
        <name>call</name>
        <param>
          <type>Map&lt; String, Object &gt;</type>
          <declname>env</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>AviatorObject</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/RegexMatchFunc.java"
          line="29"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/RegexMatchFunc.java"
          bodystart="29"
          bodyend="34"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc_1a506076811c86f3e8abef7bbe3251c2ff"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >String org.casbin.jcasbin.util.function.RegexMatchFunc.getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/function/RegexMatchFunc.java"
          line="36"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/util/function/RegexMatchFunc.java"
          bodystart="36"
          bodyend="38"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
          kindref="compound"
        >RegexMatchFunc</ref> is the wrapper for regexMatch. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.RegexMatchFunc</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>AbstractFunction</label>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.util.function.RegexMatchFunc</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/RegexMatchFunc.java"
      line="28"
      column="45"
      bodyfile="src/main/java/org/casbin/jcasbin/util/function/RegexMatchFunc.java"
      bodystart="28"
      bodyend="39"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc_1ada784bca7678557f50f835c890c748d1"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::RegexMatchFunc</scope><name
        >call</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc_1a506076811c86f3e8abef7bbe3251c2ff"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::function::RegexMatchFunc</scope><name
        >getName</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role"
    kind="class"
    language="Java"
    prot="package"
  >
    <compoundname>org::casbin::jcasbin::rbac::Role</compoundname>
      <sectiondef kind="package-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a0d13ad13da9a6228b49fce56cdd0c404"
        prot="package"
        static="no"
        mutable="no"
      >
        <type>String</type>
        <definition>String org.casbin.jcasbin.rbac.Role.name</definition>
        <argsstring/>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="187"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="187"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a947ffb4e590bf6a0be2d07d1fc11993c"
        prot="private"
        static="no"
        mutable="no"
      >
        <type>List&lt; Role &gt;</type>
        <definition
        >List&lt;Role&gt; org.casbin.jcasbin.rbac.Role.roles</definition>
        <argsstring/>
        <name>roles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="188"
          column="18"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="188"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a5d9bf58b9bf336eae56dd687d61e58b9"
        prot="protected"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition>org.casbin.jcasbin.rbac.Role.Role</definition>
        <argsstring>(String name)</argsstring>
        <name>Role</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="190"
          column="15"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="190"
          bodyend="193"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1ae64796eeb27ecb5916fd075a5af1ab31"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.rbac.Role.addRole</definition>
        <argsstring>(Role role)</argsstring>
        <name>addRole</name>
        <param>
          <type>Role</type>
          <declname>role</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="195"
          column="10"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="195"
          bodyend="203"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1aeca51c8b70246c3d0f609b11fef1dc8a"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.rbac.Role.deleteRole</definition>
        <argsstring>(Role role)</argsstring>
        <name>deleteRole</name>
        <param>
          <type>Role</type>
          <declname>role</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="205"
          column="10"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="205"
          bodyend="211"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a70694149880559bfb79444b68b414a87"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition>boolean org.casbin.jcasbin.rbac.Role.hasRole</definition>
        <argsstring>(String name, int hierarchyLevel)</argsstring>
        <name>hasRole</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hierarchyLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="213"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="213"
          bodyend="228"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a4c6435b022e12838fc39c593b664d60a"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.rbac.Role.hasDirectRole</definition>
        <argsstring>(String name)</argsstring>
        <name>hasDirectRole</name>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="230"
          column="13"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="230"
          bodyend="238"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1aa1ddaffc1439f89acf27ac41c8cecc6a"
        prot="package"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.rbac.Role.getRoles</definition>
        <argsstring>()</argsstring>
        <name>getRoles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="253"
          column="10"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="253"
          bodyend="259"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1aa1fe000c111c2c1b56b3b71a48357697"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition>String org.casbin.jcasbin.rbac.Role.toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          line="240"
          column="19"
          bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
          bodystart="240"
          bodyend="251"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Role represents the data structure for a role in RBAC. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
      line="186"
      column="11"
      bodyfile="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
      bodystart="186"
      bodyend="260"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1ae64796eeb27ecb5916fd075a5af1ab31"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name
        >addRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1aeca51c8b70246c3d0f609b11fef1dc8a"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name
        >deleteRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1aa1ddaffc1439f89acf27ac41c8cecc6a"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name
        >getRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a4c6435b022e12838fc39c593b664d60a"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name
        >hasDirectRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a70694149880559bfb79444b68b414a87"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name
        >hasRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a0d13ad13da9a6228b49fce56cdd0c404"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name>name</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a5d9bf58b9bf336eae56dd687d61e58b9"
        prot="protected"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name>Role</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1a947ffb4e590bf6a0be2d07d1fc11993c"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name
        >roles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role_1aa1fe000c111c2c1b56b3b71a48357697"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::Role</scope><name
        >toString</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
    kind="interface"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::rbac::RoleManager</compoundname>
    <derivedcompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.rbac.DefaultRoleManager</derivedcompoundref>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a1bb68d3bdce84bc21110725673d731aa"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.rbac.RoleManager.clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1adb2e1ce22c5a78af3f5b82343336ddbd"
        >clear</reimplementedby>
        <briefdescription>
<para
          >Clear clears all stored data and resets the role manager to the initial state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
          line="24"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1ab69982204040ce3b3fd09cf8f56e65ce"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.rbac.RoleManager.addLink</definition>
        <argsstring>(String name1, String name2, String... domain)</argsstring>
        <name>addLink</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaa0430fc0c2ce45fc084bae98a6bd68a"
        >addLink</reimplementedby>
        <param>
          <type>String</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>addLink adds the inheritance link between two roles. </para>
        </briefdescription>
        <detaileddescription>
<para>role: name1 and role: name2. domain is a prefix to the roles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first role (or user). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second role. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain the roles belong to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
          line="34"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a222054d3e31e22433769bb816a6562fa"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.rbac.RoleManager.deleteLink</definition>
        <argsstring>(String name1, String name2, String... domain)</argsstring>
        <name>deleteLink</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a0d200f7f68e2c76222ab94f74265e3ed"
        >deleteLink</reimplementedby>
        <param>
          <type>String</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>deleteLink deletes the inheritance link between two roles. </para>
        </briefdescription>
        <detaileddescription>
<para>role: name1 and role: name2. domain is a prefix to the roles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first role (or user). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second role. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain the roles belong to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
          line="44"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4c51b427abdef1cfe387fcf1b07ebf95"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.rbac.RoleManager.hasLink</definition>
        <argsstring>(String name1, String name2, String... domain)</argsstring>
        <name>hasLink</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1a4e780344ad82bf2a4b49d407d49c2dcb"
        >hasLink</reimplementedby>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a069d6ba02c24429440b0d634aee97245"
        >hasLink</reimplementedby>
        <param>
          <type>String</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>String</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>hasLink determines whether a link exists between two roles. </para>
        </briefdescription>
        <detaileddescription>
<para>role: name1 inherits role: name2. domain is a prefix to the roles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name1</parametername>
</parameternamelist>
<parameterdescription>
<para>the first role (or a user). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name2</parametername>
</parameternamelist>
<parameterdescription>
<para>the second role. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain the roles belong to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >whether name1 inherits name2 (name1 has role name2). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
          line="55"
          column="13"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4bafb8b27fa71cb00f3e937475071720"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.rbac.RoleManager.getRoles</definition>
        <argsstring>(String name, String... domain)</argsstring>
        <name>getRoles</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a8766f84b139b6663379c4bc07ed68537"
        >getRoles</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>getRoles gets the roles that a user inherits. </para>
        </briefdescription>
        <detaileddescription>
<para>domain is a prefix to the roles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user (or a role). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain the roles belong to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the roles. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
          line="65"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1aad0e8d6fe9ecbed760b9ff3d171d4e6c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.rbac.RoleManager.getUsers</definition>
        <argsstring>(String name)</argsstring>
        <name>getUsers</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1af1d872316a2ca01bcf0a1d5bced3fc8e"
        >getUsers</reimplementedby>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>getUsers gets the users that inherits a role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the users. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
          line="72"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1add0e9a35984db53028db92d0d52fd9fd"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.rbac.RoleManager.printRoles</definition>
        <argsstring>()</argsstring>
        <name>printRoles</name>
        <reimplementedby
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a14b51545213a7ba2180eb3440cc28483"
        >printRoles</reimplementedby>
        <briefdescription>
<para>printRoles prints all the roles to log. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
          line="77"
          column="10"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.rbac.DefaultRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
        />
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.rbac.GroupRoleManager</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
        />
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location
      file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
      line="20"
      column="29"
      bodyfile="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"
      bodystart="20"
      bodyend="78"
    />
    <listofallmembers>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1ab69982204040ce3b3fd09cf8f56e65ce"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::RoleManager</scope><name
        >addLink</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a1bb68d3bdce84bc21110725673d731aa"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::RoleManager</scope><name
        >clear</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a222054d3e31e22433769bb816a6562fa"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::RoleManager</scope><name
        >deleteLink</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4bafb8b27fa71cb00f3e937475071720"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::RoleManager</scope><name
        >getRoles</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1aad0e8d6fe9ecbed760b9ff3d171d4e6c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::RoleManager</scope><name
        >getUsers</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4c51b427abdef1cfe387fcf1b07ebf95"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::RoleManager</scope><name
        >hasLink</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1add0e9a35984db53028db92d0d52fd9fd"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::rbac::RoleManager</scope><name
        >printRoles</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::main::SyncedEnforcer</compoundname>
    <basecompoundref
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
      prot="public"
      virt="non-virtual"
    >org.casbin.jcasbin.main.Enforcer</basecompoundref>
      <sectiondef kind="private-static-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a93b5a16893896044325eaac3a009a185"
        prot="private"
        static="yes"
        mutable="no"
      >
        <type>final ReadWriteLock</type>
        <definition
        >final ReadWriteLock org.casbin.jcasbin.main.SyncedEnforcer.READ_WRITE_LOCK</definition>
        <argsstring/>
        <name>READ_WRITE_LOCK</name>
        <initializer>= new ReentrantReadWriteLock()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="29"
          column="40"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="29"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.main.SyncedEnforcer.SyncedEnforcer</definition>
        <argsstring>()</argsstring>
        <name>SyncedEnforcer</name>
        <briefdescription>
<para>; <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
              kindref="compound"
            >SyncedEnforcer</ref> is the default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="35"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="35"
          bodyend="37"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aeb457c0ed64107bc8a9ef95c7ee11b87"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.main.SyncedEnforcer.SyncedEnforcer</definition>
        <argsstring>(String modelPath, String policyFile)</argsstring>
        <name>SyncedEnforcer</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <param>
          <type>String</type>
          <declname>policyFile</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
              kindref="compound"
            >SyncedEnforcer</ref> initializes an enforcer with a model file and a policy file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>policyFile</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the policy file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="45"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="45"
          bodyend="47"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a8dbfacda842865ae9eef5c10623e8257"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.main.SyncedEnforcer.SyncedEnforcer</definition>
        <argsstring>(String modelPath, Adapter adapter)</argsstring>
        <name>SyncedEnforcer</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
              kindref="compound"
            >Adapter</ref></type>
          <declname>adapter</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
              kindref="compound"
            >SyncedEnforcer</ref> initializes an enforcer with a database adapter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adapter</parametername>
</parameternamelist>
<parameterdescription>
<para>the adapter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="55"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="55"
          bodyend="57"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ae8867169351c2c0ffc10bb5b344e579c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.main.SyncedEnforcer.SyncedEnforcer</definition>
        <argsstring>(Model m, Adapter adapter)</argsstring>
        <name>SyncedEnforcer</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref
              refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
              kindref="compound"
            >Adapter</ref></type>
          <declname>adapter</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
              kindref="compound"
            >SyncedEnforcer</ref> initializes an enforcer with a model and a database adapter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adapter</parametername>
</parameternamelist>
<parameterdescription>
<para>the adapter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="65"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="65"
          bodyend="67"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a6c6c210deaed20d5b783adcd74bd5deb"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.main.SyncedEnforcer.SyncedEnforcer</definition>
        <argsstring>(Model m)</argsstring>
        <name>SyncedEnforcer</name>
        <param>
          <type><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
              kindref="compound"
            >Model</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
              kindref="compound"
            >SyncedEnforcer</ref> initializes an enforcer with a model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="74"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="74"
          bodyend="76"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a2492c13201f4f472df86a4d2d2a98bd5"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.main.SyncedEnforcer.SyncedEnforcer</definition>
        <argsstring>(String modelPath)</argsstring>
        <name>SyncedEnforcer</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
              kindref="compound"
            >SyncedEnforcer</ref> initializes an enforcer with a model file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="83"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="83"
          bodyend="85"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ae5fefc4d72d221946390244d097c453c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type/>
        <definition
        >org.casbin.jcasbin.main.SyncedEnforcer.SyncedEnforcer</definition>
        <argsstring
        >(String modelPath, String policyFile, boolean enableLog)</argsstring>
        <name>SyncedEnforcer</name>
        <param>
          <type>String</type>
          <declname>modelPath</declname>
        </param>
        <param>
          <type>String</type>
          <declname>policyFile</declname>
        </param>
        <param>
          <type>boolean</type>
          <declname>enableLog</declname>
        </param>
        <briefdescription>
<para><ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
              kindref="compound"
            >SyncedEnforcer</ref> initializes an enforcer with a model file, a policy file and an enable log flag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelPath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the model file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>policyFile</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the policy file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enableLog</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to enable Casbin's log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="94"
          column="12"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="94"
          bodyend="96"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af2a5fd346aa920a19eb00b99ed540a79"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.SyncedEnforcer.getRolesForUser</definition>
        <argsstring>(String name)</argsstring>
        <name>getRolesForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9a24c126f65fb481da6eae495348e155"
        >getRolesForUser</reimplements>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>getRolesForUser gets the roles that a user has. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the roles that the user has. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="105"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="105"
          bodyend="112"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ab3bbdf76007b702e3485a5b648104093"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.SyncedEnforcer.getUsersForRole</definition>
        <argsstring>(String name)</argsstring>
        <name>getUsersForRole</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a86e7862937a2ef33864f1215a0f823e2"
        >getUsersForRole</reimplements>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>getUsersForRole gets the users that has a role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the users that has the role. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="121"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="121"
          bodyend="128"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a8aa67e92014b455e42e0cfdc813051a5"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.hasRoleForUser</definition>
        <argsstring>(String name, String role)</argsstring>
        <name>hasRoleForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a63c2751e5b6707c2ff964e0fc74b7a6d"
        >hasRoleForUser</reimplements>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>hasRoleForUser determines whether a user has a role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the user has the role. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="138"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="138"
          bodyend="145"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aba5e4485fe28c6de45eedd54686ef51f"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.addRoleForUser</definition>
        <argsstring>(String user, String role)</argsstring>
        <name>addRoleForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ad99972459452b33b273f2870836503de"
        >addRoleForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>addRoleForUser adds a role for a user. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the user already has the role (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="156"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="156"
          bodyend="163"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a479619cc73668e25b741bf7d08f51023"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deleteRoleForUser</definition>
        <argsstring>(String user, String role)</argsstring>
        <name>deleteRoleForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aba6dd9e3e9dd51d4d83cadfc2b7dd5f8"
        >deleteRoleForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>deleteRoleForUser deletes a role for a user. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user does not have the role (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="174"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="174"
          bodyend="181"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ac75013652d82c9a2e2b31543ffe57d50"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deleteRolesForUser</definition>
        <argsstring>(String user)</argsstring>
        <name>deleteRolesForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a5d18ffaa58a6852e05b674386bd5fec0"
        >deleteRolesForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>deleteRolesForUser deletes all roles for a user. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user does not have any roles (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="191"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="191"
          bodyend="198"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aff27c9aedfa504a642212ebdcdd79e44"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deleteUser</definition>
        <argsstring>(String user)</argsstring>
        <name>deleteUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a6d0dc317faab6233c3cccaf6b41bcb0f"
        >deleteUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>deleteUser deletes a user. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the user does not exist (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="208"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="208"
          bodyend="215"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af72955cf27fec4b175c640db40320826"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.main.SyncedEnforcer.deleteRole</definition>
        <argsstring>(String role)</argsstring>
        <name>deleteRole</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ac37fa55655aa7f72417d0f969d20ff53"
        >deleteRole</reimplements>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <briefdescription>
<para>deleteRole deletes a role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="223"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="223"
          bodyend="230"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62a97217edde0b20b3f8d22a5dbcf943"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deletePermission</definition>
        <argsstring>(String... permission)</argsstring>
        <name>deletePermission</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a75807f7cfe151cc9de6f9de3ad01a1e3"
        >deletePermission</reimplements>
        <param>
          <type>String...</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>deletePermission deletes a permission. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the permission does not exist (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="240"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="240"
          bodyend="247"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a92d5c9105e9b52f9adefaa84f60810c4"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deletePermission</definition>
        <argsstring>(List&lt; String &gt; permission)</argsstring>
        <name>deletePermission</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a8653d5941163b982335ecef78f215222"
        >deletePermission</reimplements>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>deletePermission deletes a permission. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the permission does not exist (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="257"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="257"
          bodyend="264"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1adb2b71691158f9d360ba1666d8b86c3c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.addPermissionForUser</definition>
        <argsstring>(String user, String... permission)</argsstring>
        <name>addPermissionForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a142473ca3810ca09f9fac04c8abb2f6d"
        >addPermissionForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>addPermissionForUser adds a permission for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role already has the permission (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="275"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="275"
          bodyend="282"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a89304ac51a8abb00a4c030613f26e3e8"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.addPermissionForUser</definition>
        <argsstring>(String user, List&lt; String &gt; permission)</argsstring>
        <name>addPermissionForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9eedf44340998df63ef763e25c0a806f"
        >addPermissionForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>addPermissionForUser adds a permission for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role already has the permission (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="293"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="293"
          bodyend="300"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a244dcefe509431a733b8433a8c55544d"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deletePermissionForUser</definition>
        <argsstring>(String user, String... permission)</argsstring>
        <name>deletePermissionForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a588a2e87008360e624df7f57c845573c"
        >deletePermissionForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>deletePermissionForUser deletes a permission for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role does not have the permission (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="311"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="311"
          bodyend="318"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ad69a4c9d77c42915bd37b5bb6ea70df2"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deletePermissionForUser</definition>
        <argsstring>(String user, List&lt; String &gt; permission)</argsstring>
        <name>deletePermissionForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a535c7a02ee3817cc24213921b733650c"
        >deletePermissionForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>deletePermissionForUser deletes a permission for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role does not have the permission (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="329"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="329"
          bodyend="336"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a982c777484c5b1ebcd8a7ddfdca7229a"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deletePermissionsForUser</definition>
        <argsstring>(String user)</argsstring>
        <name>deletePermissionsForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a90719b969dc506fc6139e29de75de2fc"
        >deletePermissionsForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>deletePermissionsForUser deletes permissions for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user or role does not have any permissions (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="346"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="346"
          bodyend="353"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a6ba0ce3478f63d2a8e301490b66746d5"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.SyncedEnforcer.getPermissionsForUser</definition>
        <argsstring>(String user)</argsstring>
        <name>getPermissionsForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a791e4db2b3638c1abfc023dde0d3dc01"
        >getPermissionsForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para>getPermissionsForUser gets permissions for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the permissions, a permission is usually like (obj, act). It is actually the rule without the subject. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="362"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="362"
          bodyend="369"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a34f55b0412ac2dbddd459047dab2cfac"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.hasPermissionForUser</definition>
        <argsstring>(String user, String... permission)</argsstring>
        <name>hasPermissionForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a109bc2c0b84b316a0c8908aea831aaba"
        >hasPermissionForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>hasPermissionForUser determines whether a user has a permission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the user has the permission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="379"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="379"
          bodyend="386"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aea30211bfcc161650a7f3e75ef87cf6b"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.hasPermissionForUser</definition>
        <argsstring>(String user, List&lt; String &gt; permission)</argsstring>
        <name>hasPermissionForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a88b788605ecee8bd6d075b2f472c6890"
        >hasPermissionForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
<para>hasPermissionForUser determines whether a user has a permission. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>permission</parametername>
</parameternamelist>
<parameterdescription>
<para
                  >the permission, usually be (obj, act). It is actually the rule without the subject. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the user has the permission. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="396"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="396"
          bodyend="403"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa439aea6f870e1bf09363a0c89cf2516"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.SyncedEnforcer.getRolesForUserInDomain</definition>
        <argsstring>(String name, String domain)</argsstring>
        <name>getRolesForUserInDomain</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ab630ddd5602ded4ce22db0a7aa2e700e"
        >getRolesForUserInDomain</reimplements>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >getRolesForUserInDomain gets the roles that a user has inside a domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the roles that the user has in the domain. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="413"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="413"
          bodyend="420"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62d7fc0674d09fa3d2360df017257c57"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.SyncedEnforcer.getPermissionsForUserInDomain</definition>
        <argsstring>(String user, String domain)</argsstring>
        <name>getPermissionsForUserInDomain</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ae2dd0241b15b09c5f1c982cd8dec90ab"
        >getPermissionsForUserInDomain</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >getPermissionsForUserInDomain gets permissions for a user or role inside a domain. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para
              >the permissions, a permission is usually like (obj, act). It is actually the rule without the subject. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="430"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="430"
          bodyend="437"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1abe38b2486de5d64f8d9acd1247111735"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.addRoleForUserInDomain</definition>
        <argsstring>(String user, String role, String domain)</argsstring>
        <name>addRoleForUserInDomain</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0567f583a17b695f4891176406d6055c"
        >addRoleForUserInDomain</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>addRoleForUserInDomain adds a role for a user inside a domain. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the user already has the role (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="449"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="449"
          bodyend="456"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a872e36b1fd42016e105730815f83b64c"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >boolean org.casbin.jcasbin.main.SyncedEnforcer.deleteRoleForUserInDomain</definition>
        <argsstring>(String user, String role, String domain)</argsstring>
        <name>deleteRoleForUserInDomain</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aa5ca066f759049a8bcec9239b1300edc"
        >deleteRoleForUserInDomain</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <param>
          <type>String</type>
          <declname>role</declname>
        </param>
        <param>
          <type>String</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para
          >deleteRoleForUserInDomain deletes a role for a user inside a domain. </para>
        </briefdescription>
        <detaileddescription>
<para
          >Returns false if the user does not have the role (aka not affected).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>role</parametername>
</parameternamelist>
<parameterdescription>
<para>the role. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>succeeds or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="468"
          column="20"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="468"
          bodyend="475"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af7d1e178228022fa33e3130e636f7be1"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; String &gt;</type>
        <definition
        >List&lt;String&gt; org.casbin.jcasbin.main.SyncedEnforcer.getImplicitRolesForUser</definition>
        <argsstring>(String name, String... domain)</argsstring>
        <name>getImplicitRolesForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a832592a185f0c760a86a9915fcbded2b"
        >getImplicitRolesForUser</reimplements>
        <param>
          <type>String</type>
          <declname>name</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>domain</declname>
        </param>
        <briefdescription>
<para>getImplicitRolesForUser gets implicit roles that a user has. </para>
        </briefdescription>
        <detaileddescription>
<para>Compared to <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af2a5fd346aa920a19eb00b99ed540a79"
              kindref="member"
            >getRolesForUser()</ref>, this function retrieves indirect roles besides direct roles. For example: g, alice, role:admin g, role:admin, role:user </para>
<para
          >getRolesForUser("alice") can only get: ["role:admin"]. But getImplicitRolesForUser("alice") will get: ["role:admin", "role:user"].</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the user </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the domain </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>implicit roles that a user has. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="492"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="492"
          bodyend="499"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a29d21a2e6ee02f145c50a4903f0038a9"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>List&lt; List&lt; String &gt; &gt;</type>
        <definition
        >List&lt;List&lt;String&gt; &gt; org.casbin.jcasbin.main.SyncedEnforcer.getImplicitPermissionsForUser</definition>
        <argsstring>(String user)</argsstring>
        <name>getImplicitPermissionsForUser</name>
        <reimplements
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aa6b904744a8ba520a7b33c1b73905c36"
        >getImplicitPermissionsForUser</reimplements>
        <param>
          <type>String</type>
          <declname>user</declname>
        </param>
        <briefdescription>
<para
          >getImplicitPermissionsForUser gets implicit permissions for a user or role. </para>
        </briefdescription>
        <detaileddescription>
<para>Compared to <ref
              refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a6ba0ce3478f63d2a8e301490b66746d5"
              kindref="member"
            >getPermissionsForUser()</ref>, this function retrieves permissions for inherited roles. For example: p, admin, data1, read p, alice, data2, read g, alice, admin </para>
<para
          >getPermissionsForUser("alice") can only get: [["alice", "data2", "read"]]. But getImplicitPermissionsForUser("alice") will get: [["admin", "data1", "read"], ["alice", "data2", "read"]].</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>the user. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>implicit permissions for a user or role. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          line="516"
          column="17"
          bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
          bodystart="516"
          bodyend="523"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
          kindref="compound"
        >SyncedEnforcer</ref> = <ref
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
          kindref="compound"
        >ManagementEnforcer</ref> + RBAC API. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>org.casbin.jcasbin.main.SyncedEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.main.ManagementEnforcer</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        />
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.Enforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12">
        <label>org.casbin.jcasbin.model.FunctionMap</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"/>
        <childnode refid="13" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>org.casbin.jcasbin.rbac.RoleManager</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"/>
      </node>
      <node id="8">
        <label
        >Map&lt; String, Map&lt; String, org.casbin.jcasbin.model.Assertion &gt; &gt;</label>
      </node>
      <node id="11">
        <label>org.casbin.jcasbin.persist.Watcher</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"/>
      </node>
      <node id="10">
        <label>org.casbin.jcasbin.persist.Adapter</label>
        <link refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"/>
      </node>
      <node id="1">
        <label>org.casbin.jcasbin.main.SyncedEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>org.casbin.jcasbin.model.Model</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>org.casbin.jcasbin.main.ManagementEnforcer</label>
        <link
          refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        />
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>org.casbin.jcasbin.main.InternalEnforcer</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>Map&lt; String, AviatorFunction &gt;</label>
      </node>
      <node id="5">
        <label>org.casbin.jcasbin.main.CoreEnforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"/>
        <childnode refid="6" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>rm</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>adapter</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>watcher</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>fm</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>org.casbin.jcasbin.model.Policy</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"/>
        <childnode refid="8" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>org.casbin.jcasbin.main.Enforcer</label>
        <link refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location
      file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
      line="27"
      column="37"
      bodyfile="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"
      bodystart="27"
      bodyend="524"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ace22d53520ec336041327c5fde407c9a"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >adapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ab63f44be32bf147161644644c07e203f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addFunction</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9ef11047ede8e36e7add2eb52bd06da1"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade3e57fb44bb25ab0a6f0009abcef1a6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8ea0c8a40f08322d9bec9abfb1a76420"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a18008129a41d2de393ea31c3116ac53d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a073f604c3eca762eb3ab65d4ba2d5f4b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1adb2b71691158f9d360ba1666d8b86c3c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addPermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a89304ac51a8abb00a4c030613f26e3e8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addPermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abee2ec66d4665cb585aea158eb94ba8a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a64d01b587c431aa9794857b1324f4611"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aba5e4485fe28c6de45eedd54686ef51f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addRoleForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1abe38b2486de5d64f8d9acd1247111735"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >addRoleForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1acb180dd0333ec0f905de30fa0ce3fae5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >autoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6ec0491ec93be5610f2b3c5ab54f64d7"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >autoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >buildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0d947725ff17f175b340de745195f711"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >clearPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62a97217edde0b20b3f8d22a5dbcf943"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deletePermission</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a92d5c9105e9b52f9adefaa84f60810c4"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deletePermission</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a244dcefe509431a733b8433a8c55544d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deletePermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ad69a4c9d77c42915bd37b5bb6ea70df2"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deletePermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a982c777484c5b1ebcd8a7ddfdca7229a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deletePermissionsForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af72955cf27fec4b175c640db40320826"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deleteRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a479619cc73668e25b741bf7d08f51023"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deleteRoleForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a872e36b1fd42016e105730815f83b64c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deleteRoleForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ac75013652d82c9a2e2b31543ffe57d50"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deleteRolesForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aff27c9aedfa504a642212ebdcdd79e44"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >deleteUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9926eedc8cd976cff2010139e0d610a6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >enableAutoBuildRoleLinks</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4e574b515645cd91edb2e8fb4bdcb111"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >enableAutoSave</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0379bb8527f242a7f2d2c083eaa0b799"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >enableEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >enableLog</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a57bf34be85f88525bf702f8d1a894d40"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >enforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1af0bc19bccb8db3585daea977b2ef6ce9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0db59abf6989136ed31b0c085c160a21"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a3fa30b0bd74eddf0b3bc0aa477f38f3a"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0b13af694e6ef85a03c95fb4f6502495"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a2f9db27643448c2ed82a7e0c31407ea4"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a24d47f27d839dcf41d30034c0596a5ba"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >Enforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1aebd8d031e1684c0a900721b0113f8c68"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >fm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad64639eb9c4952772e5978f046d4e84c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a615b4057c4b9697cb4cab747c9ca2bbe"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAllActions</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ac9a8c113ba5814b238775f76fa051a23"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAllNamedActions</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad36cc921314079e5dcc6c92ab89de91d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAllNamedObjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a73db140800a2b3b5536cb5a5a1245750"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAllNamedRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a64bd155e5b79f76fba3d4645ef059473"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAllNamedSubjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afe061eec06bae40791b2a17488e7d440"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAllObjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1bc99cd18bbc3676576ad79aafe5e358"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAllRoles</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a02a148724235d5a345db21d0544bcba4"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getAllSubjects</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aec3ae451c6c6cc2019189e18d6633942"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getFilteredGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9de8af989227478e2def8453a1212816"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getFilteredNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8bbc7a5f03e97a94c08eea0791999cc7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getFilteredNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae42feedb5e204600566fca5c3b5764f9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a5fe374736c6b242fa46f98f53ffd1c97"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a29d21a2e6ee02f145c50a4903f0038a9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getImplicitPermissionsForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a49e3a38e16e7a60221557e5bfc250134"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getImplicitPermissionsForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af7d1e178228022fa33e3130e636f7be1"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getImplicitRolesForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a1c2008f19c31fc2e6fb0f157a72c62e9"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abba16b254dd2d441077374f10a41f5d8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a79a8449681f1351650ffe75a15f49970"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a6ba0ce3478f63d2a8e301490b66746d5"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getPermissionsForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62d7fc0674d09fa3d2360df017257c57"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getPermissionsForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8fe83aae68122f404f5c248205041506"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af2a5fd346aa920a19eb00b99ed540a79"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getRolesForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa439aea6f870e1bf09363a0c89cf2516"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getRolesForUserInDomain</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ab3bbdf76007b702e3485a5b648104093"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >getUsersForRole</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4792bf1723219e7f7568162eb3cef2bc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a700ddd84ef74c900865777808fd1e255"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f4898c1bfe12eb7c182eade59e2d8f7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1acbd49fc353c48a8470e6b55effd25518"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a490c6b5a9300fcf3597b22e8d1c23965"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afae748b1ff0140640a07a89233810ba7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a34f55b0412ac2dbddd459047dab2cfac"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasPermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aea30211bfcc161650a7f3e75ef87cf6b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasPermissionForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abdda8a710e53ef8eab16b1302f3cffce"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a856c9861df0247b781152a1ed5f5e006"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a8aa67e92014b455e42e0cfdc813051a5"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >hasRoleForUser</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a538ceb739fd3784340383d6a2031b3c5"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >initialize</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad7d18e622a89b24e2e2166cc3d0cfdcb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >isFiltered</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a5297d7b9360184f48461afa8ed238033"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >loadFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3eedac5774252395df78d335bfdaad6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >loadModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4b906fdb277565747c7644d694dcd6bc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >loadPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4250d3c0cc992b6e018ad715491aefcb"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >model</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4f8b315b6995c53e3a5653e0b94430ad"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >modelPath</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3157daf60179a935bbef75728135a50"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a49c441fe2a4287f57d7464abeeb241e7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >newModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a93b5a16893896044325eaac3a009a185"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >READ_WRITE_LOCK</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1d73ccb6974523e067ebf5d9e6b28a3c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeFilteredGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade55e4aa087ec91aeeb8827bad1dac3e"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeFilteredNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a08335329c3d380bf56606b3a3bb32e89"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeFilteredNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1aff2a17b295f3b2099b87a5ab75049836"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeFilteredPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a57bc134fa11f47f661d9c4f86870c9da"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f2fb581b79dc89f73642dab67d9f5c6"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1af70dfae94c2ca8954ba2e5294900afa7"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeNamedGroupingPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad37d626eefdd24672238b561b89df382"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8a1e6295055182d67de8c0ca57343041"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removeNamedPolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aa97f4e7097f9c94136eccb0fac5524ce"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer_1a20976876604a9fc81356eece1e12ade0"
        prot="package"
        virt="non-virtual"
        ambiguityscope="org::casbin::jcasbin::main::InternalEnforcer."
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >removePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a77b9617e204bf44558e2d3ad93367025"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >rm</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6c9869e3628d45e95b54d52dbcfdc30f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >savePolicy</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1adcd0d7e6148fc3024bbea2e9c45092cc"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >setAdapter</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a156c3408f520d5cfb720beb17c06377f"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >setEffector</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1abe7cc2b2787312cda95b2e0cdfbb3916"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >setModel</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a649b8e55d372d9e32ddad550e945d126"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >setRoleManager</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a663d6d44397970c1cc30752a856f7722"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >setWatcher</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >SyncedEnforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aeb457c0ed64107bc8a9ef95c7ee11b87"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >SyncedEnforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a8dbfacda842865ae9eef5c10623e8257"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >SyncedEnforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ae8867169351c2c0ffc10bb5b344e579c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >SyncedEnforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a6c6c210deaed20d5b783adcd74bd5deb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >SyncedEnforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a2492c13201f4f472df86a4d2d2a98bd5"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >SyncedEnforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ae5fefc4d72d221946390244d097c453c"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >SyncedEnforcer</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a98af1f80d941fd561c53de73e35443cd"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >validateEnforce</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad1a7c1d01fe6d718a89520b4d274fc80"
        prot="package"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::main::SyncedEnforcer</scope><name
        >watcher</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
    kind="class"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::util::Util</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aace84a34cedcec9f6e4575df93f1c763"
        prot="public"
        static="yes"
        mutable="no"
      >
        <type>boolean</type>
        <definition>boolean org.casbin.jcasbin.util.Util.enableLog</definition>
        <argsstring/>
        <name>enableLog</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="27"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="27"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef
        kind="variable"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a60a438d09f31104319459f637a734baf"
        prot="private"
        static="yes"
        mutable="no"
      >
        <type>Logger</type>
        <definition>Logger org.casbin.jcasbin.util.Util.LOGGER</definition>
        <argsstring/>
        <name>LOGGER</name>
        <initializer
        >= LoggerFactory.getLogger("org.casbin.jcasbin")</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="29"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="29"
          bodyend="-1"
        />
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >static void org.casbin.jcasbin.util.Util.logPrint</definition>
        <argsstring>(String v)</argsstring>
        <name>logPrint</name>
        <param>
          <type>String</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>logPrint prints the log. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>the log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="36"
          column="24"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="36"
          bodyend="40"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a849147e952262ef9365c1729fe32f127"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >static void org.casbin.jcasbin.util.Util.logPrintf</definition>
        <argsstring>(String format, String... v)</argsstring>
        <name>logPrintf</name>
        <param>
          <type>String</type>
          <declname>format</declname>
        </param>
        <param>
          <type>String...</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>logPrintf prints the log with the format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the format of the log. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>the log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="48"
          column="24"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="48"
          bodyend="53"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a16fdedd998c638ef66eb3a3ec06606a8"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >static void org.casbin.jcasbin.util.Util.logPrintfWarn</definition>
        <argsstring>(String format, Object... v)</argsstring>
        <name>logPrintfWarn</name>
        <param>
          <type>String</type>
          <declname>format</declname>
        </param>
        <param>
          <type>Object...</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>logPrintf prints the log with the format as a warning. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the format of the log. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>the log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="61"
          column="24"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="61"
          bodyend="65"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a4e4547be27c54184a7f481c27d62d589"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >static void org.casbin.jcasbin.util.Util.logPrintfError</definition>
        <argsstring>(String format, Object... v)</argsstring>
        <name>logPrintfError</name>
        <param>
          <type>String</type>
          <declname>format</declname>
        </param>
        <param>
          <type>Object...</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>logPrintf prints the log with the format as an error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the format of the log. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>the log. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="73"
          column="24"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="73"
          bodyend="77"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aec3f5061f47a286ca2e765e23d0c278d"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >static String org.casbin.jcasbin.util.Util.escapeAssertion</definition>
        <argsstring>(String s)</argsstring>
        <name>escapeAssertion</name>
        <param>
          <type>String</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para
          >escapeAssertion escapes the dots in the assertion, because the expression evaluation doesn't support such variable names. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the matcher and effect assertions. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the escaped value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="85"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="85"
          bodyend="102"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aae19f22e52ad25f51300d059c31233fb"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >static String org.casbin.jcasbin.util.Util.removeComments</definition>
        <argsstring>(String s)</argsstring>
        <name>removeComments</name>
        <param>
          <type>String</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>removeComments removes the comments starting with # in the text. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>a line in the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the line without comments. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="110"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="110"
          bodyend="116"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a37ca1deb8c25172b84b6d901ef4eab13"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.Util.arrayEquals</definition>
        <argsstring
        >(List&lt; String &gt; a, List&lt; String &gt; b)</argsstring>
        <name>arrayEquals</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>arrayEquals determines whether two string arrays are identical. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the first array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the second array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether a equals to b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="125"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="125"
          bodyend="142"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a94ae405cfc45ac3d7525e3ad0d4095b1"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.Util.array2DEquals</definition>
        <argsstring
        >(List&lt; List&lt; String &gt;&gt; a, List&lt; List&lt; String &gt;&gt; b)</argsstring>
        <name>array2DEquals</name>
        <param>
          <type>List&lt; List&lt; String &gt;&gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>List&lt; List&lt; String &gt;&gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para
          >array2DEquals determines whether two 2-dimensional string arrays are identical. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the first 2-dimensional array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the second 2-dimensional array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether a equals to b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="151"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="151"
          bodyend="168"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a0115f548d793492680b6e01a32d6909b"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.Util.arrayRemoveDuplicates</definition>
        <argsstring>(List&lt; String &gt; s)</argsstring>
        <name>arrayRemoveDuplicates</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para
          >arrayRemoveDuplicates removes any duplicated elements in a string array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the array without duplicates. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="176"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="176"
          bodyend="178"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a55cce24aaa11a8423ef89c8398b4df73"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >static String org.casbin.jcasbin.util.Util.arrayToString</definition>
        <argsstring>(List&lt; String &gt; s)</argsstring>
        <name>arrayToString</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>arrayToString gets a printable string for a string array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the string joined by the array elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="186"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="186"
          bodyend="188"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ad91833b9e9ed7e554c34eea1eb86caa8"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>String</type>
        <definition
        >static String org.casbin.jcasbin.util.Util.paramsToString</definition>
        <argsstring>(String[] s)</argsstring>
        <name>paramsToString</name>
        <param>
          <type>String[]</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para
          >paramsToString gets a printable string for variable number of parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the parameters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the string joined by the parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="196"
          column="26"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="196"
          bodyend="198"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a41ac163bf78120ed5287ff18fb304dde"
        prot="public"
        static="yes"
        const="no"
        explicit="no"
        inline="yes"
        virt="non-virtual"
      >
        <type>boolean</type>
        <definition
        >static boolean org.casbin.jcasbin.util.Util.setEquals</definition>
        <argsstring
        >(List&lt; String &gt; a, List&lt; String &gt; b)</argsstring>
        <name>setEquals</name>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>List&lt; String &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>setEquals determines whether two string sets are identical. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the first set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the second set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether a equals to b. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/util/Util.java"
          line="207"
          column="27"
          bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
          bodystart="207"
          bodyend="227"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/util/Util.java"
      line="26"
      column="18"
      bodyfile="src/main/java/org/casbin/jcasbin/util/Util.java"
      bodystart="26"
      bodyend="228"
    />
    <listofallmembers>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a94ae405cfc45ac3d7525e3ad0d4095b1"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >array2DEquals</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a37ca1deb8c25172b84b6d901ef4eab13"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >arrayEquals</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a0115f548d793492680b6e01a32d6909b"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >arrayRemoveDuplicates</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a55cce24aaa11a8423ef89c8398b4df73"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >arrayToString</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aace84a34cedcec9f6e4575df93f1c763"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >enableLog</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aec3f5061f47a286ca2e765e23d0c278d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >escapeAssertion</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a60a438d09f31104319459f637a734baf"
        prot="private"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >LOGGER</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >logPrint</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a849147e952262ef9365c1729fe32f127"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >logPrintf</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a4e4547be27c54184a7f481c27d62d589"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >logPrintfError</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a16fdedd998c638ef66eb3a3ec06606a8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >logPrintfWarn</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ad91833b9e9ed7e554c34eea1eb86caa8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >paramsToString</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aae19f22e52ad25f51300d059c31233fb"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >removeComments</name></member>
      <member
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a41ac163bf78120ed5287ff18fb304dde"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::util::Util</scope><name
        >setEquals</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
    kind="interface"
    language="Java"
    prot="public"
  >
    <compoundname>org::casbin::jcasbin::persist::Watcher</compoundname>
      <sectiondef kind="public-func">
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1ab5bcdb10d4aa6ed890103563d52620f8"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition
        >void org.casbin.jcasbin.persist.Watcher.setUpdateCallback</definition>
        <argsstring>(Runnable runnable)</argsstring>
        <name>setUpdateCallback</name>
        <param>
          <type>Runnable</type>
          <declname>runnable</declname>
        </param>
        <briefdescription>
<para
          >SetUpdateCallback sets the callback function that the watcher will call when the policy in DB has been changed by other instances. </para>
        </briefdescription>
        <detaileddescription>
<para>A classic callback is Enforcer.loadPolicy().</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>runnable</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback function, will be called when policy is updated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Watcher.java"
          line="28"
          column="10"
        />
      </memberdef>
      <memberdef
        kind="function"
        id="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1af1985ceb985a355953fa1f34f9366fae"
        prot="public"
        static="no"
        const="no"
        explicit="no"
        inline="no"
        virt="non-virtual"
      >
        <type>void</type>
        <definition>void org.casbin.jcasbin.persist.Watcher.update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
<para
          >Update calls the update callback of other instances to synchronize their policy. </para>
        </briefdescription>
        <detaileddescription>
<para
          >It is usually called after changing the policy in DB, like Enforcer.savePolicy(), Enforcer.addPolicy(), Enforcer.removePolicy(), etc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location
          file="src/main/java/org/casbin/jcasbin/persist/Watcher.java"
          line="35"
          column="10"
        />
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref
          refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
          kindref="compound"
        >Watcher</ref> is the interface for Casbin watchers. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/persist/Watcher.java"
      line="20"
      column="25"
      bodyfile="src/main/java/org/casbin/jcasbin/persist/Watcher.java"
      bodystart="20"
      bodyend="36"
    />
    <listofallmembers>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1ab5bcdb10d4aa6ed890103563d52620f8"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::persist::Watcher</scope><name
        >setUpdateCallback</name></member>
      <member
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1af1985ceb985a355953fa1f34f9366fae"
        prot="public"
        virt="non-virtual"
      ><scope>org::casbin::jcasbin::persist::Watcher</scope><name
        >update</name></member>
    </listofallmembers>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespacejava_1_1io"
    kind="namespace"
    language="Java"
  >
    <compoundname>java::io</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/config/Config.java"
      line="1"
      column="1"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg"
    kind="namespace"
    language="Java"
  >
    <compoundname>org</compoundname>
    <innernamespace refid="namespaceorg_1_1casbin">org::casbin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin</compoundname>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin"
    >org::casbin::jcasbin</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin</compoundname>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1config"
    >org::casbin::jcasbin::config</innernamespace>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1effect"
    >org::casbin::jcasbin::effect</innernamespace>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1exception"
    >org::casbin::jcasbin::exception</innernamespace>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1main"
    >org::casbin::jcasbin::main</innernamespace>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1model"
    >org::casbin::jcasbin::model</innernamespace>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1persist"
    >org::casbin::jcasbin::persist</innernamespace>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1rbac"
    >org::casbin::jcasbin::rbac</innernamespace>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util"
    >org::casbin::jcasbin::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[generated]" line="1" column="1"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1config"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::config</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
      prot="public"
    >org::casbin::jcasbin::config::Config</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/config/Config.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1effect"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::effect</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
      prot="public"
    >org::casbin::jcasbin::effect::DefaultEffector</innerclass>
    <innerclass
      refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
      prot="public"
    >org::casbin::jcasbin::effect::Effect</innerclass>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
      prot="public"
    >org::casbin::jcasbin::effect::Effector</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/effect/DefaultEffector.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1exception"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::exception</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
      prot="public"
    >org::casbin::jcasbin::exception::CasbinAdapterException</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
      prot="public"
    >org::casbin::jcasbin::exception::CasbinConfigException</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
      prot="public"
    >org::casbin::jcasbin::exception::CasbinMatcherException</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
      prot="public"
    >org::casbin::jcasbin::exception::CasbinPolicyFileNotFoundException</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinAdapterException.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1main"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::main</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"
      prot="public"
    >org::casbin::jcasbin::main::CoreEnforcer</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
      prot="public"
    >org::casbin::jcasbin::main::Enforcer</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer"
      prot="package"
    >org::casbin::jcasbin::main::InternalEnforcer</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
      prot="public"
    >org::casbin::jcasbin::main::ManagementEnforcer</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
      prot="public"
    >org::casbin::jcasbin::main::SyncedEnforcer</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1model"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::model</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
      prot="public"
    >org::casbin::jcasbin::model::Assertion</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
      prot="public"
    >org::casbin::jcasbin::model::FunctionMap</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
      prot="public"
    >org::casbin::jcasbin::model::Model</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"
      prot="public"
    >org::casbin::jcasbin::model::Policy</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/model/Assertion.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1persist"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::persist</compoundname>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
      prot="public"
    >org::casbin::jcasbin::persist::Adapter</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper"
      prot="public"
    >org::casbin::jcasbin::persist::Helper</innerclass>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
      prot="public"
    >org::casbin::jcasbin::persist::Watcher</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter"
    >org::casbin::jcasbin::persist::file_adapter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/persist/Adapter.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::persist::file_adapter</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
      prot="public"
    >org::casbin::jcasbin::persist::file_adapter::FileAdapter</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1rbac"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::rbac</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
      prot="public"
    >org::casbin::jcasbin::rbac::DefaultRoleManager</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
      prot="public"
    >org::casbin::jcasbin::rbac::GroupRoleManager</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role"
      prot="package"
    >org::casbin::jcasbin::rbac::Role</innerclass>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
      prot="public"
    >org::casbin::jcasbin::rbac::RoleManager</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1util"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::util</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
      prot="public"
    >org::casbin::jcasbin::util::BuiltInFunctions</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
      prot="public"
    >org::casbin::jcasbin::util::Util</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util_1_1function"
    >org::casbin::jcasbin::util::function</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="namespaceorg_1_1casbin_1_1jcasbin_1_1util_1_1function"
    kind="namespace"
    language="Java"
  >
    <compoundname>org::casbin::jcasbin::util::function</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
      prot="public"
    >org::casbin::jcasbin::util::function::IPMatchFunc</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
      prot="public"
    >org::casbin::jcasbin::util::function::KeyMatch2Func</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func"
      prot="public"
    >org::casbin::jcasbin::util::function::KeyMatch3Func</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
      prot="public"
    >org::casbin::jcasbin::util::function::KeyMatchFunc</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
      prot="public"
    >org::casbin::jcasbin::util::function::RegexMatchFunc</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/IPMatchFunc.java"
      line="15"
      column="15"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Config_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Config.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
      prot="public"
    >org::casbin::jcasbin::config::Config</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1config"
    >org::casbin::jcasbin::config</innernamespace>
    <innernamespace refid="namespacejava_1_1io">java::io</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.config;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.exception.CasbinConfigException;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.io.*;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.HashMap;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.concurrent.locks.ReentrantLock;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline
        lineno="24"
        refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >final</highlight><highlight class="normal"><sp/>String<sp
          />DEFAULT_SECTION<sp/>=<sp/></highlight><highlight
          class="stringliteral"
        >"default"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >final</highlight><highlight class="normal"><sp/>String<sp
          />DEFAULT_COMMENT<sp/>=<sp/></highlight><highlight
          class="stringliteral"
        >"#"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >final</highlight><highlight class="normal"><sp/>String<sp
          />DEFAULT_COMMENT_SEM<sp/>=<sp/></highlight><highlight
          class="stringliteral"
        >";"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>ReentrantLock<sp/>lock<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ReentrantLock();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="comment">//<sp
          />Section:key=value</highlight><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>Map&lt;String,<sp/>Map&lt;String,<sp/>String&gt;&gt;<sp
          />data;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>data<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />HashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a443351f97e46e1448eae10b77252265a"
            kindref="member"
          >newConfig</ref>(String<sp/>confName)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/>c<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>c.parse(confName);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />c;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a009e75472aacfb467f175be47dde4c6d"
            kindref="member"
          >newConfigFromText</ref>(String<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/>c<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>c.parseBuffer(</highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />BufferedReader(</highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />StringReader(text)));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp/>(IOException<sp/>e)<sp
          />{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
            kindref="compound"
          >CasbinConfigException</ref>(e.getMessage(),<sp
          />e.getCause());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />c;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>addConfig(String<sp
          />section,<sp/>String<sp/>option,<sp/>String<sp/>value)<sp
          />{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(section.equals(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>section<sp/>=<sp
          />DEFAULT_SECTION;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(!data.containsKey(section))<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>data.put(section,<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>HashMap&lt;&gt;());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>ok<sp/>=<sp
          />data.get(section).containsKey(option);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>data.get(section).put(option,<sp
          />value);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />!ok;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>parse(String<sp
          />fname)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>lock.lock();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>(FileInputStream<sp
          />fis<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />FileInputStream(fname))<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>BufferedReader<sp/>buf<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>BufferedReader(</highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />InputStreamReader(fis));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />parseBuffer(buf);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp/>(IOException<sp/>e)<sp
          />{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
            kindref="compound"
          >CasbinConfigException</ref>(e.getMessage(),<sp
          />e.getCause());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>lock.unlock();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp
          />parseBuffer(BufferedReader<sp/>buf)<sp/></highlight><highlight
          class="keywordflow"
        >throws</highlight><highlight class="normal"><sp/>IOException<sp
          />{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>section<sp/>=<sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>lineNum<sp/>=<sp
          />0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>line;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >while</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>lineNum++;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"/></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>((line<sp/>=<sp
          />buf.readLine())<sp/>!=<sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">.equals(line))<sp
          />{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"/></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp
          />line.trim();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(line.startsWith(DEFAULT_COMMENT))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(line.startsWith(DEFAULT_COMMENT_SEM))<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(line.startsWith(</highlight><highlight
          class="stringliteral"
        >"["</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp
          />line.endsWith(</highlight><highlight
          class="stringliteral"
        >"]"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section<sp/>=<sp
          />line.substring(1,<sp/>line.length()<sp/>-<sp
          />1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String[]<sp
          />optionVal<sp/>=<sp/>line.split(</highlight><highlight
          class="stringliteral"
        >"="</highlight><highlight class="normal">,<sp
          />2);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(optionVal.length<sp/>!=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(String.format(</highlight><highlight
          class="stringliteral"
        >"parse<sp/>the<sp/>content<sp/>error<sp/>:<sp/>line<sp/>%d<sp/>,<sp
          />%s<sp/>=<sp/>?<sp/>"</highlight><highlight class="normal">,<sp
          />lineNum,<sp/>optionVal[0]));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />option<sp/>=<sp/>optionVal[0].trim();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />value<sp/>=<sp/>optionVal[1].trim();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />addConfig(section,<sp/>option,<sp/>value);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>getBool(String<sp
          />key)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />Boolean.parseBoolean(</highlight><highlight
          class="keyword"
        >get</highlight><highlight class="normal">(key));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"/></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>getInt(String<sp/>key)<sp
          />{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />Integer.parseInt(</highlight><highlight
          class="keyword"
        >get</highlight><highlight class="normal">(key));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >float</highlight><highlight class="normal"><sp/>getFloat(String<sp
          />key)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />Float.parseFloat(</highlight><highlight
          class="keyword"
        >get</highlight><highlight class="normal">(key));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>getString(String<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >get</highlight><highlight class="normal">(key);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String[]<sp/>getStrings(String<sp/>key)<sp
          />{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>v<sp/>=<sp/></highlight><highlight
          class="keyword"
        >get</highlight><highlight class="normal">(key);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(v.equals(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />v.split(</highlight><highlight
          class="stringliteral"
        >","</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >set</highlight><highlight class="normal">(String<sp/>key,<sp/>String<sp
          />value)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>lock.lock();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(key.length()<sp/>==<sp
          />0)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"key<sp/>is<sp/>empty"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"/></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>section<sp/>=<sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>option;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String[]<sp/>keys<sp/>=<sp
          />key.toLowerCase().split(</highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(keys.length<sp/>&gt;=<sp
          />2)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>section<sp/>=<sp
          />keys[0];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>option<sp/>=<sp
          />keys[1];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>option<sp/>=<sp
          />keys[0];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"/></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>addConfig(section,<sp/>option,<sp
          />value);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/></highlight><highlight
          class="keyword"
        >get</highlight><highlight class="normal">(String<sp/>key)<sp
          />{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>section;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>option;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"/></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String[]<sp/>keys<sp/>=<sp
          />key.toLowerCase().split(</highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(keys.length<sp/>&gt;=<sp
          />2)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>section<sp/>=<sp
          />keys[0];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>option<sp/>=<sp
          />keys[1];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>section<sp/>=<sp
          />DEFAULT_SECTION;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>option<sp/>=<sp
          />keys[0];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"/></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>ok<sp/>=<sp
          />data.containsKey(section)<sp/>&amp;&amp;<sp
          />data.get(section).containsKey(option);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(ok)<sp
          />{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />data.get(section).get(option);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/config/Config.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="DefaultEffector_8java"
    kind="file"
    language="Java"
  >
    <compoundname>DefaultEffector.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
      prot="public"
    >org::casbin::jcasbin::effect::DefaultEffector</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1effect"
    >org::casbin::jcasbin::effect</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.effect;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline
        lineno="20"
        refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
            kindref="compound"
          >DefaultEffector</ref><sp/></highlight><highlight
          class="keyword"
        >implements</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
            kindref="compound"
          >Effector</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector_1a752c881b592970e543a71307616fd4de"
            kindref="member"
          >DefaultEffector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector_1a5b7f674e414ed25b3b8ae046ff29ea62"
            kindref="member"
          >mergeEffects</ref>(String<sp/>expr,<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>[]<sp/>effects,<sp/></highlight><highlight
          class="keywordtype"
        >float</highlight><highlight class="normal">[]<sp/>results)<sp
          />{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />result;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(expr.equals(</highlight><highlight
          class="stringliteral"
        >"some(where<sp/>(p_eft<sp/>==<sp/>allow))"</highlight><highlight
          class="normal"
        >))<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp
          /></highlight><highlight class="keyword">false</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(<ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref><sp/>eft<sp/>:<sp/>effects)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(eft<sp/>==<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Allow)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />result<sp/>=<sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(expr.equals(</highlight><highlight
          class="stringliteral"
        >"!some(where<sp/>(p_eft<sp/>==<sp/>deny))"</highlight><highlight
          class="normal"
        >))<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp
          /></highlight><highlight class="keyword">true</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(<ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref><sp/>eft<sp/>:<sp/>effects)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(eft<sp/>==<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Deny)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />result<sp/>=<sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(expr.equals(</highlight><highlight
          class="stringliteral"
        >"some(where<sp/>(p_eft<sp/>==<sp/>allow))<sp/>&amp;&amp;<sp
          />!some(where<sp/>(p_eft<sp/>==<sp/>deny))"</highlight><highlight
          class="normal"
        >))<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp
          /></highlight><highlight class="keyword">false</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(<ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref><sp/>eft<sp/>:<sp/>effects)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(eft<sp/>==<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Allow)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />result<sp/>=<sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp
          /></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(eft<sp/>==<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Deny)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />result<sp/>=<sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(expr.equals(</highlight><highlight
          class="stringliteral"
        >"priority(p_eft)<sp/>||<sp/>deny"</highlight><highlight
          class="normal"
        >))<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp
          /></highlight><highlight class="keyword">false</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(<ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref><sp/>eft<sp/>:<sp/>effects)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(eft<sp/>!=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Indeterminate)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(eft<sp/>==<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Allow)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />UnsupportedOperationException(</highlight><highlight
          class="stringliteral"
        >"unsupported<sp/>effect"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />result;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/effect/DefaultEffector.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Effect_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Effect.java</compoundname>
    <innerclass
      refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
      prot="public"
    >org::casbin::jcasbin::effect::Effect</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1effect"
    >org::casbin::jcasbin::effect</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.effect;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline
        lineno="17"
        refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >enum</highlight><highlight class="normal"><sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>Allow,<sp
          />Indeterminate,<sp/>Deny</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/effect/Effect.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Effector_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Effector.java</compoundname>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
      prot="public"
    >org::casbin::jcasbin::effect::Effector</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1effect"
    >org::casbin::jcasbin::effect</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.effect;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline
        lineno="20"
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">interface<sp
          /></highlight><highlight class="normal"><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
            kindref="compound"
          >Effector</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector_1a736985c8e7f7687f423cbcb8138c50ae"
            kindref="member"
          >mergeEffects</ref>(String<sp/>expr,<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>[]<sp/>effects,<sp/></highlight><highlight
          class="keywordtype"
        >float</highlight><highlight class="normal">[]<sp
          />results);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/effect/Effector.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="CasbinAdapterException_8java"
    kind="file"
    language="Java"
  >
    <compoundname>CasbinAdapterException.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
      prot="public"
    >org::casbin::jcasbin::exception::CasbinAdapterException</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1exception"
    >org::casbin::jcasbin::exception</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.exception;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline
        lineno="17"
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
            kindref="compound"
          >CasbinAdapterException</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>RuntimeException<sp
          />{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
            kindref="compound"
          >CasbinAdapterException</ref>(String<sp/>message)<sp
          />{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(message);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
            kindref="compound"
          >CasbinAdapterException</ref>(String<sp/>message,<sp/>Throwable<sp
          />cause)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(message,<sp/>cause);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinAdapterException.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="CasbinConfigException_8java"
    kind="file"
    language="Java"
  >
    <compoundname>CasbinConfigException.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
      prot="public"
    >org::casbin::jcasbin::exception::CasbinConfigException</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1exception"
    >org::casbin::jcasbin::exception</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.exception;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline
        lineno="17"
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
            kindref="compound"
          >CasbinConfigException</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>RuntimeException<sp
          />{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinConfigException"
            kindref="compound"
          >CasbinConfigException</ref>(String<sp/>message,<sp/>Throwable<sp
          />cause)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(message,<sp/>cause);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinConfigException.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="CasbinMatcherException_8java"
    kind="file"
    language="Java"
  >
    <compoundname>CasbinMatcherException.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
      prot="public"
    >org::casbin::jcasbin::exception::CasbinMatcherException</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1exception"
    >org::casbin::jcasbin::exception</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.exception;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline
        lineno="17"
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
            kindref="compound"
          >CasbinMatcherException</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>RuntimeException<sp
          />{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
            kindref="compound"
          >CasbinMatcherException</ref>(String<sp/>message)<sp
          />{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(message);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
            kindref="compound"
          >CasbinMatcherException</ref>(String<sp/>message,<sp/>Throwable<sp
          />cause)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(message,<sp/>cause);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinMatcherException.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="CasbinPolicyFileNotFoundException_8java"
    kind="file"
    language="Java"
  >
    <compoundname>CasbinPolicyFileNotFoundException.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
      prot="public"
    >org::casbin::jcasbin::exception::CasbinPolicyFileNotFoundException</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1exception"
    >org::casbin::jcasbin::exception</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.exception;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline
        lineno="17"
        refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
            kindref="compound"
          >CasbinPolicyFileNotFoundException</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>RuntimeException<sp
          />{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
            kindref="compound"
          >CasbinPolicyFileNotFoundException</ref>(String<sp/>message)<sp
          />{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(message);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/exception/CasbinPolicyFileNotFoundException.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="CoreEnforcer_8java"
    kind="file"
    language="Java"
  >
    <compoundname>CoreEnforcer.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"
      prot="public"
    >org::casbin::jcasbin::main::CoreEnforcer</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1main"
    >org::casbin::jcasbin::main</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.main;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.AviatorEvaluator;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.AviatorEvaluatorInstance;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.Expression;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorFunction;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.effect.DefaultEffector;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.effect.Effect;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.effect.Effector;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.exception.CasbinMatcherException;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.Assertion;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.FunctionMap;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.Model;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.persist.Adapter;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.persist.Watcher;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.rbac.DefaultRoleManager;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.rbac.RoleManager;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.BuiltInFunctions;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.Util;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.HashMap;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline
        lineno="42"
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer"
            kindref="compound"
          >CoreEnforcer</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp
          />modelPath;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref><sp/>fm;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
            kindref="compound"
          >Effector</ref><sp/>eft;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/>adapter;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
            kindref="compound"
          >Watcher</ref><sp/>watcher;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>rm;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"/></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />enabled;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />autoSave;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />autoBuildRoleLinks;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>initialize()<sp
          />{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>rm<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
            kindref="compound"
          >DefaultRoleManager</ref>(10);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>eft<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1effect_1_1DefaultEffector"
            kindref="compound"
          >DefaultEffector</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>watcher<sp/>=<sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>enabled<sp/>=<sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>autoSave<sp/>=<sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>autoBuildRoleLinks<sp/>=<sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
            kindref="member"
          >newModel</ref>()<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>m<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />m;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
            kindref="member"
          >newModel</ref>(String<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>m<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"/></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>m.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1aeb2b0b644cf8d18478ccc871ec59018a"
            kindref="member"
          >loadModelFromText</ref>(text);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />m;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
            kindref="member"
          >newModel</ref>(String<sp/>modelPath,<sp/>String<sp/>unused)<sp
          />{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>m<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"/></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(!modelPath.equals(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a172cb43bf8984fc898cac431c1999e9f"
            kindref="member"
          >loadModel</ref>(modelPath);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"/></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />m;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af3eedac5774252395df78d335bfdaad6"
            kindref="member"
          >loadModel</ref>()<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model<sp/>=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
            kindref="member"
          >newModel</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a172cb43bf8984fc898cac431c1999e9f"
            kindref="member"
          >loadModel</ref>(this.modelPath);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1ab28d87ff7ecaa9039484275160ab9e17"
            kindref="member"
          >printModel</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>fm<sp/>=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a40daabe5db0f0ba7ef29cece6580f584"
            kindref="member"
          >loadFunctionMap</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"/></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a1c2008f19c31fc2e6fb0f157a72c62e9"
            kindref="member"
          >getModel</ref>()<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />model;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1abe7cc2b2787312cda95b2e0cdfbb3916"
            kindref="member"
          >setModel</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.model<sp/>=<sp/>model;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>fm<sp/>=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a40daabe5db0f0ba7ef29cece6580f584"
            kindref="member"
          >loadFunctionMap</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"/></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad64639eb9c4952772e5978f046d4e84c"
            kindref="member"
          >getAdapter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />adapter;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1adcd0d7e6148fc3024bbea2e9c45092cc"
            kindref="member"
          >setAdapter</ref>(<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/>adapter)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.adapter<sp/>=<sp/>adapter;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"/></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a663d6d44397970c1cc30752a856f7722"
            kindref="member"
          >setWatcher</ref>(<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
            kindref="compound"
          >Watcher</ref><sp/>watcher)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.watcher<sp/>=<sp/>watcher;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>watcher.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1ab5bcdb10d4aa6ed890103563d52620f8"
            kindref="member"
          >setUpdateCallback</ref>(this::loadPolicy);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a649b8e55d372d9e32ddad550e945d126"
            kindref="member"
          >setRoleManager</ref>(<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>rm)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.rm<sp/>=<sp/>rm;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"/></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a156c3408f520d5cfb720beb17c06377f"
            kindref="member"
          >setEffector</ref>(<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector"
            kindref="compound"
          >Effector</ref><sp/>eft)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.eft<sp/>=<sp/>eft;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0d947725ff17f175b340de745195f711"
            kindref="member"
          >clearPolicy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a829c28d4cf8aa054ec02e511915289b7"
            kindref="member"
          >clearPolicy</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4b906fdb277565747c7644d694dcd6bc"
            kindref="member"
          >loadPolicy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a829c28d4cf8aa054ec02e511915289b7"
            kindref="member"
          >clearPolicy</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>adapter.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a2bd0addc7a7c609701426e1deaf0500d"
            kindref="member"
          >loadPolicy</ref>(model);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"/></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a441c38321351f4990f3169feb2c75cab"
            kindref="member"
          >printPolicy</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(autoBuildRoleLinks)<sp
          />{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
            kindref="member"
          >buildRoleLinks</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"/></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a5297d7b9360184f48461afa8ed238033"
            kindref="member"
          >loadFilteredPolicy</ref>(Object<sp/>filter)<sp
          />{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"/></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad7d18e622a89b24e2e2166cc3d0cfdcb"
            kindref="member"
          >isFiltered</ref>()<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a6c9869e3628d45e95b54d52dbcfdc30f"
            kindref="member"
          >savePolicy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1ad7d18e622a89b24e2e2166cc3d0cfdcb"
            kindref="member"
          >isFiltered</ref>())<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"cannot<sp/>save<sp/>a<sp/>filtered<sp/>policy"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"/></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>adapter.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a1b61f1b7d0ef8a36d17611c5fbf4e472"
            kindref="member"
          >savePolicy</ref>(model);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(watcher<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>watcher.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1af1985ceb985a355953fa1f34f9366fae"
            kindref="member"
          >update</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"/></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a0379bb8527f242a7f2d2c083eaa0b799"
            kindref="member"
          >enableEnforce</ref>(</highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>enable)<sp
          />{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.enabled<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
            kindref="member"
          >enableLog</ref>(</highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>enable)<sp
          />{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.enableLog<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"/></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4e574b515645cd91edb2e8fb4bdcb111"
            kindref="member"
          >enableAutoSave</ref>(</highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>autoSave)<sp
          />{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.autoSave<sp/>=<sp/>autoSave;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a9926eedc8cd976cff2010139e0d610a6"
            kindref="member"
          >enableAutoBuildRoleLinks</ref>(</highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />autoBuildRoleLinks)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.autoBuildRoleLinks<sp/>=<sp
          />autoBuildRoleLinks;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"/></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
            kindref="member"
          >buildRoleLinks</ref>()<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>rm.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a1bb68d3bdce84bc21110725673d731aa"
            kindref="member"
          >clear</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a07daa48b2152a421657a3974558e689e"
            kindref="member"
          >buildRoleLinks</ref>(rm);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"/></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a57bf34be85f88525bf702f8d1a894d40"
            kindref="member"
          >enforce</ref>(Object...<sp/>rvals)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!enabled)<sp
          />{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"/></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Map&lt;String,<sp/>AviatorFunction&gt;<sp/>functions<sp
          />=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />HashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          />AviatorFunction&gt;<sp/>entry<sp/>:<sp/>fm.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>.entrySet())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>key<sp/>=<sp
          />entry.getKey();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>AviatorFunction<sp
          /></highlight><highlight
          class="keyword"
        >function</highlight><highlight class="normal"><sp/>=<sp
          />entry.getValue();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"/></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>functions.put(key,<sp
          /></highlight><highlight
          class="keyword"
        >function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(model.model.containsKey(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>&gt;<sp/>entry<sp/>:<sp
          />model.model.get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).entrySet())<sp
          />{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>key<sp
          />=<sp/>entry.getKey();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>=<sp
          />entry.getValue();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"/></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>rm<sp/>=<sp/>ast.rm;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />functions.put(key,<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
            kindref="compound"
          >BuiltInFunctions</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a613b361b84d46c67f866ad0fb03fee16"
            kindref="member"
          >generateGFunction</ref>(key,<sp/>rm));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>AviatorEvaluatorInstance<sp/>eval<sp/>=<sp
          />AviatorEvaluator.newInstance();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(AviatorFunction<sp/>f<sp
          />:<sp/>functions.values())<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />eval.addFunction(f);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"/></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>expString<sp/>=<sp
          />model.model.get(</highlight><highlight
          class="stringliteral"
        >"m"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"m"</highlight><highlight
          class="normal"
        >).value;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Expression<sp/>expression<sp/>=<sp
          />eval.compile(expString);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"/></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref><sp/>policyEffects[];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >float</highlight><highlight class="normal"><sp
          />matcherResults[];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp
          />policyLen;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>((policyLen<sp/>=<sp
          />model.model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).policy.size())<sp/>!=<sp
          />0)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>policyEffects<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>[policyLen];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>matcherResults<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >float</highlight><highlight
          class="normal"
        >[policyLen];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"/></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).policy.size();<sp/>i<sp
          />++)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />List&lt;String&gt;<sp/>pvals<sp/>=<sp
          />model.model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight
          class="normal"
        >).policy.get(i);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"/></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="comment">//<sp
          />Util.logPrint("Policy<sp/>Rule:<sp/>"<sp/>+<sp
          />pvals);</highlight><highlight class="normal"/></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Map&lt;String,<sp
          />Object&gt;<sp/>parameters<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />HashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">for</highlight><highlight
          class="normal"
        ><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp
          />&lt;<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">).tokens.length;<sp/>j<sp
          />++)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />String<sp/>token<sp/>=<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight
          class="normal"
        >).tokens[j];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />parameters.put(token,<sp/>rvals[j]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">for</highlight><highlight
          class="normal"
        ><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp
          />&lt;<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).tokens.length;<sp/>j<sp
          />++)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />String<sp/>token<sp/>=<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight
          class="normal"
        >).tokens[j];</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />parameters.put(token,<sp/>pvals.get(j));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"/></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp
          />result<sp/>=<sp/><sp
          />expression.execute(parameters);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="comment">//<sp
          />Util.logPrint("Result:<sp/>"<sp/>+<sp
          />result);</highlight><highlight class="normal"/></codeline>
<codeline lineno="347"><highlight class="normal"/></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(result<sp/>instanceof<sp/>Boolean)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(!((</highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal">)<sp/>result))<sp
          />{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>policyEffects[i]<sp/>=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Indeterminate;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp
          /></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(result<sp/>instanceof<sp
          />Float)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>((</highlight><highlight
          class="keywordtype"
        >float</highlight><highlight class="normal">)<sp/>result<sp/>==<sp
          />0)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>policyEffects[i]<sp/>=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Indeterminate;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>matcherResults[i]<sp/>=<sp/>(float)<sp
          />result;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp
          /></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
            kindref="compound"
          >CasbinMatcherException</ref>(</highlight><highlight
          class="stringliteral"
        >"matcher<sp/>result<sp/>should<sp/>be<sp/>bool,<sp/>int<sp/>or<sp
          />float"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(parameters.containsKey(</highlight><highlight
          class="stringliteral"
        >"p_eft"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />String<sp/>eft<sp/>=<sp/>(String)<sp
          />parameters.get(</highlight><highlight
          class="stringliteral"
        >"p_eft"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(eft.equals(</highlight><highlight
          class="stringliteral"
        >"allow"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>policyEffects[i]<sp/>=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Allow;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(eft.equals(</highlight><highlight
          class="stringliteral"
        >"deny"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>policyEffects[i]<sp/>=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Deny;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>policyEffects[i]<sp/>=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Indeterminate;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp
          /></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />policyEffects[i]<sp/>=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Allow;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"/></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(model.model.get(</highlight><highlight
          class="stringliteral"
        >"e"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"e"</highlight><highlight
          class="normal"
        >).value.equals(</highlight><highlight
          class="stringliteral"
        >"priority(p_eft)<sp/>||<sp/>deny"</highlight><highlight
          class="normal"
        >))<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>policyEffects<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>[1];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>matcherResults<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >float</highlight><highlight class="normal">[1];</highlight></codeline>
<codeline lineno="383"><highlight class="normal"/></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>Map&lt;String,<sp/>Object&gt;<sp
          />parameters<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />HashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp
          />&lt;<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">).tokens.length;<sp/>j<sp
          />++)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />token<sp/>=<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight
          class="normal"
        >).tokens[j];</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />parameters.put(token,<sp/>rvals[j]);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp
          />&lt;<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).tokens.length;<sp/>j<sp
          />++)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />token<sp/>=<sp/>model.model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight
          class="normal"
        >).tokens[j];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />parameters.put(token,<sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"/></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>Object<sp/>result<sp/>=<sp
          />expression.execute(parameters);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="comment"
        >//<sp/>Util.logPrint("Result:<sp/>"<sp/>+<sp
          />result);</highlight><highlight class="normal"/></codeline>
<codeline lineno="396"><highlight class="normal"/></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>((</highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal">)<sp/>result)<sp
          />{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />policyEffects[0]<sp/>=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Allow;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />policyEffects[0]<sp/>=<sp/><ref
            refid="enumorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effect"
            kindref="compound"
          >Effect</ref>.Indeterminate;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"/></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>result<sp/>=<sp
          />eft.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1effect_1_1Effector_1a736985c8e7f7687f423cbcb8138c50ae"
            kindref="member"
          >mergeEffects</ref>(model.model.get(</highlight><highlight
          class="stringliteral"
        >"e"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"e"</highlight><highlight class="normal">).value,<sp/>policyEffects,<sp
          />matcherResults);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"/></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>StringBuilder<sp/>reqStr<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />StringBuilder(</highlight><highlight
          class="stringliteral"
        >"Request:<sp/>"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>rvals.length;<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>rval<sp/>=<sp
          />rvals[i].toString();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"/></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp
          />rvals.length<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />reqStr.append(String.format(</highlight><highlight
          class="stringliteral"
        >"%s,<sp/>"</highlight><highlight class="normal">,<sp
          />rval));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />reqStr.append(String.format(</highlight><highlight
          class="stringliteral"
        >"%s"</highlight><highlight class="normal">,<sp
          />rval));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>reqStr.append(String.format(</highlight><highlight
          class="stringliteral"
        >"<sp/>---&gt;<sp/>%s"</highlight><highlight class="normal">,<sp
          />result));</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
            kindref="member"
          >logPrint</ref>(reqStr.toString());</highlight></codeline>
<codeline lineno="418"><highlight class="normal"/></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />result;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"/></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />validateEnforce(Object...<sp/>rvals){</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><sp
          />validateEnforceSection(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight
          class="normal"
        >,rvals);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"/></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />validateEnforceSection(String<sp/>section,<sp/>Object...<sp
          />rvals)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>expectedParamSize<sp
          />=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a1c2008f19c31fc2e6fb0f157a72c62e9"
            kindref="member"
          >getModel</ref>().model.entrySet().stream()</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />.filter(stringMapEntry<sp/>-&gt;<sp
          />stringMapEntry.getKey().equals(section))</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />.flatMap(stringMapEntry<sp/>-&gt;<sp
          />stringMapEntry.getValue().entrySet().stream())</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />.filter(stringAssertionEntry<sp/>-&gt;<sp
          />stringAssertionEntry.getKey().equals(section))</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />.findFirst().orElseThrow(</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/>()<sp/>-&gt;<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinMatcherException"
            kindref="compound"
          >CasbinMatcherException</ref>(</highlight><highlight
          class="stringliteral"
        >"Could<sp/>not<sp/>find<sp/>"</highlight><highlight class="normal"><sp
          />+<sp/>section<sp/>+<sp/></highlight><highlight
          class="stringliteral"
        >"<sp/>definition<sp/>in<sp/>model"</highlight><highlight
          class="normal"
        >))</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />.getValue().tokens.length;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"/></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(rvals.length<sp/>!=<sp
          />expectedParamSize)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a16fdedd998c638ef66eb3a3ec06606a8"
            kindref="member"
          >logPrintfWarn</ref>(</highlight><highlight
          class="stringliteral"
        >"Incorrect<sp/>number<sp/>of<sp/>attributes<sp/>to<sp/>check<sp/>for<sp
          />policy<sp/>(expected<sp/>{}<sp/>but<sp/>got<sp
          />{})"</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />expectedParamSize,<sp/>rvals.length);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>rvals.length<sp
          />&gt;=<sp/>expectedParamSize;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/main/CoreEnforcer.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Enforcer_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Enforcer.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
      prot="public"
    >org::casbin::jcasbin::main::Enforcer</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1main"
    >org::casbin::jcasbin::main</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.main;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.FunctionMap;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.Model;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.persist.Adapter;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.persist.file_adapter.FileAdapter;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.ArrayList;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Collections;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline
        lineno="29"
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
            kindref="compound"
          >Enforcer</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
            kindref="compound"
          >ManagementEnforcer</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
            kindref="member"
          >Enforcer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
            kindref="member"
          >Enforcer</ref>(String<sp/>modelPath,<sp/>String<sp/>policyFile)<sp
          />{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">(modelPath,<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
            kindref="compound"
          >FileAdapter</ref>(policyFile));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
            kindref="member"
          >Enforcer</ref>(String<sp/>modelPath,<sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/>adapter)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a171b3dcc810b8cdf7b74d7dbdf8f57a8"
            kindref="member"
          >newModel</ref>(modelPath,<sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">),<sp
          />adapter);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.modelPath<sp/>=<sp/>modelPath;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
            kindref="member"
          >Enforcer</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>m,<sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/>adapter)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.adapter<sp/>=<sp/>adapter;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.watcher<sp/>=<sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1ab28d87ff7ecaa9039484275160ab9e17"
            kindref="member"
          >printModel</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>fm<sp/>=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a40daabe5db0f0ba7ef29cece6580f584"
            kindref="member"
          >loadFunctionMap</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>initialize();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(this.adapter<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a4b906fdb277565747c7644d694dcd6bc"
            kindref="member"
          >loadPolicy</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
            kindref="member"
          >Enforcer</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">(m,<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
            kindref="member"
          >Enforcer</ref>(String<sp/>modelPath)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">(modelPath,<sp
          /></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0f412d7ec7a5a0d5eb06456af2c0f0e0"
            kindref="member"
          >Enforcer</ref>(String<sp/>modelPath,<sp/>String<sp/>policyFile,<sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
            kindref="member"
          >enableLog</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">(modelPath,<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
            kindref="compound"
          >FileAdapter</ref>(policyFile));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
            kindref="member"
          >enableLog</ref>(enableLog);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9a24c126f65fb481da6eae495348e155"
            kindref="member"
          >getRolesForUser</ref>(String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />model.model.get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight
          class="normal"
        >).rm.getRoles(name);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(IllegalArgumentException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!</highlight><highlight
          class="stringliteral"
        >"error:<sp/>name<sp/>does<sp/>not<sp/>exist"</highlight><highlight
          class="normal"
        >.equals(e.getMessage()))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp
          />e;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a86e7862937a2ef33864f1215a0f823e2"
            kindref="member"
          >getUsersForRole</ref>(String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />model.model.get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight
          class="normal"
        >).rm.getUsers(name);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(IllegalArgumentException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!</highlight><highlight
          class="stringliteral"
        >"error:<sp/>name<sp/>does<sp/>not<sp/>exist"</highlight><highlight
          class="normal"
        >.equals(e.getMessage()))<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp
          />e;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a63c2751e5b6707c2ff964e0fc74b7a6d"
            kindref="member"
          >hasRoleForUser</ref>(String<sp/>name,<sp/>String<sp/>role)<sp
          />{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>roles<sp/>=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a9a24c126f65fb481da6eae495348e155"
            kindref="member"
          >getRolesForUser</ref>(name);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"/></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>hasRole<sp/>=<sp
          /></highlight><highlight class="keyword">false</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(String<sp/>r<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(r.equals(role))<sp
          />{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasRole<sp/>=<sp
          /></highlight><highlight class="keyword">true</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />hasRole;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ad99972459452b33b273f2870836503de"
            kindref="member"
          >addRoleForUser</ref>(String<sp/>user,<sp/>String<sp/>role)<sp
          />{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
            kindref="member"
          >addGroupingPolicy</ref>(user,<sp/>role);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"/></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aba6dd9e3e9dd51d4d83cadfc2b7dd5f8"
            kindref="member"
          >deleteRoleForUser</ref>(String<sp/>user,<sp/>String<sp/>role)<sp
          />{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
            kindref="member"
          >removeGroupingPolicy</ref>(user,<sp/>role);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a5d18ffaa58a6852e05b674386bd5fec0"
            kindref="member"
          >deleteRolesForUser</ref>(String<sp/>user)<sp
          />{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1d73ccb6974523e067ebf5d9e6b28a3c"
            kindref="member"
          >removeFilteredGroupingPolicy</ref>(0,<sp
          />user);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a6d0dc317faab6233c3cccaf6b41bcb0f"
            kindref="member"
          >deleteUser</ref>(String<sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1d73ccb6974523e067ebf5d9e6b28a3c"
            kindref="member"
          >removeFilteredGroupingPolicy</ref>(0,<sp
          />user);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ac37fa55655aa7f72417d0f969d20ff53"
            kindref="member"
          >deleteRole</ref>(String<sp/>role)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1d73ccb6974523e067ebf5d9e6b28a3c"
            kindref="member"
          >removeFilteredGroupingPolicy</ref>(1,<sp
          />role);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
            kindref="member"
          >removeFilteredPolicy</ref>(0,<sp/>role);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a75807f7cfe151cc9de6f9de3ad01a1e3"
            kindref="member"
          >deletePermission</ref>(String...<sp/>permission)<sp
          />{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
            kindref="member"
          >removeFilteredPolicy</ref>(1,<sp/>permission);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a75807f7cfe151cc9de6f9de3ad01a1e3"
            kindref="member"
          >deletePermission</ref>(List&lt;String&gt;<sp/>permission)<sp
          />{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a75807f7cfe151cc9de6f9de3ad01a1e3"
            kindref="member"
          >deletePermission</ref>(permission.toArray(</highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />String[0]));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"/></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a142473ca3810ca09f9fac04c8abb2f6d"
            kindref="member"
          >addPermissionForUser</ref>(String<sp/>user,<sp/>String...<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>params<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"/></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>params.add(user);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Collections.addAll(params,<sp
          />permission);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"/></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
            kindref="member"
          >addPolicy</ref>(params);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"/></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a142473ca3810ca09f9fac04c8abb2f6d"
            kindref="member"
          >addPermissionForUser</ref>(String<sp/>user,<sp/>List&lt;String&gt;<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a142473ca3810ca09f9fac04c8abb2f6d"
            kindref="member"
          >addPermissionForUser</ref>(user,<sp
          />permission.toArray(</highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />String[0]));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"/></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a588a2e87008360e624df7f57c845573c"
            kindref="member"
          >deletePermissionForUser</ref>(String<sp/>user,<sp/>String...<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>params<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"/></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>params.add(user);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Collections.addAll(params,<sp
          />permission);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"/></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
            kindref="member"
          >removePolicy</ref>(params);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"/></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a588a2e87008360e624df7f57c845573c"
            kindref="member"
          >deletePermissionForUser</ref>(String<sp/>user,<sp
          />List&lt;String&gt;<sp/>permission)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a588a2e87008360e624df7f57c845573c"
            kindref="member"
          >deletePermissionForUser</ref>(user,<sp
          />permission.toArray(</highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />String[0]));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"/></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a90719b969dc506fc6139e29de75de2fc"
            kindref="member"
          >deletePermissionsForUser</ref>(String<sp/>user)<sp
          />{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
            kindref="member"
          >removeFilteredPolicy</ref>(0,<sp/>user);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"/></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a791e4db2b3638c1abfc023dde0d3dc01"
            kindref="member"
          >getPermissionsForUser</ref>(String<sp/>user)<sp
          />{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae42feedb5e204600566fca5c3b5764f9"
            kindref="member"
          >getFilteredPolicy</ref>(0,<sp/>user);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"/></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a109bc2c0b84b316a0c8908aea831aaba"
            kindref="member"
          >hasPermissionForUser</ref>(String<sp/>user,<sp/>String...<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>params<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"/></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>params.add(user);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Collections.addAll(params,<sp
          />permission);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"/></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abdda8a710e53ef8eab16b1302f3cffce"
            kindref="member"
          >hasPolicy</ref>(params);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"/></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a109bc2c0b84b316a0c8908aea831aaba"
            kindref="member"
          >hasPermissionForUser</ref>(String<sp/>user,<sp/>List&lt;String&gt;<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a109bc2c0b84b316a0c8908aea831aaba"
            kindref="member"
          >hasPermissionForUser</ref>(user,<sp
          />permission.toArray(</highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />String[0]));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"/></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ab630ddd5602ded4ce22db0a7aa2e700e"
            kindref="member"
          >getRolesForUserInDomain</ref>(String<sp/>name,<sp/>String<sp
          />domain)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />model.model.get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).rm.getRoles(name,<sp
          />domain);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(IllegalArgumentException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!</highlight><highlight
          class="stringliteral"
        >"error:<sp/>name<sp/>does<sp/>not<sp/>exist"</highlight><highlight
          class="normal"
        >.equals(e.getMessage()))<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp
          />e;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"/></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ae2dd0241b15b09c5f1c982cd8dec90ab"
            kindref="member"
          >getPermissionsForUserInDomain</ref>(String<sp/>user,<sp/>String<sp
          />domain)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae42feedb5e204600566fca5c3b5764f9"
            kindref="member"
          >getFilteredPolicy</ref>(0,<sp/>user,<sp
          />domain);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"/></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a0567f583a17b695f4891176406d6055c"
            kindref="member"
          >addRoleForUserInDomain</ref>(String<sp/>user,<sp/>String<sp/>role,<sp
          />String<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
            kindref="member"
          >addGroupingPolicy</ref>(user,<sp/>role,<sp
          />domain);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"/></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aa5ca066f759049a8bcec9239b1300edc"
            kindref="member"
          >deleteRoleForUserInDomain</ref>(String<sp/>user,<sp/>String<sp
          />role,<sp/>String<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
            kindref="member"
          >removeGroupingPolicy</ref>(user,<sp/>role,<sp
          />domain);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"/></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a832592a185f0c760a86a9915fcbded2b"
            kindref="member"
          >getImplicitRolesForUser</ref>(String<sp/>name,<sp/>String...<sp
          />domain)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>roles<sp/>=<sp/>this.rm.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4bafb8b27fa71cb00f3e937475071720"
            kindref="member"
          >getRoles</ref>(name,<sp/>domain);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>res<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;(roles);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(String<sp/>n<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>res.addAll(this.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a832592a185f0c760a86a9915fcbded2b"
            kindref="member"
          >getImplicitRolesForUser</ref>(n,<sp/>domain));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />res;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"/></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1aa6b904744a8ba520a7b33c1b73905c36"
            kindref="member"
          >getImplicitPermissionsForUser</ref>(String<sp/>user)<sp
          />{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>roles<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>roles.add(user);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>roles.addAll(this.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a832592a185f0c760a86a9915fcbded2b"
            kindref="member"
          >getImplicitRolesForUser</ref>(user));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;List&lt;String&gt;&gt;<sp/>res<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(String<sp/>n<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>res.addAll(this.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a791e4db2b3638c1abfc023dde0d3dc01"
            kindref="member"
          >getPermissionsForUser</ref>(n));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />res;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"/></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a49e3a38e16e7a60221557e5bfc250134"
            kindref="member"
          >getImplicitPermissionsForUserInDomain</ref>(String<sp/>user,<sp
          />String<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>roles<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>roles.add(user);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>roles.addAll(this.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1a832592a185f0c760a86a9915fcbded2b"
            kindref="member"
          >getImplicitRolesForUser</ref>(user,<sp
          />domain));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;List&lt;String&gt;&gt;<sp/>res<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(String<sp/>n<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>res.addAll(this.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer_1ae2dd0241b15b09c5f1c982cd8dec90ab"
            kindref="member"
          >getPermissionsForUserInDomain</ref>(n,<sp
          />domain));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />res;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/main/Enforcer.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="InternalEnforcer_8java"
    kind="file"
    language="Java"
  >
    <compoundname>InternalEnforcer.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1InternalEnforcer"
      prot="package"
    >org::casbin::jcasbin::main::InternalEnforcer</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1main"
    >org::casbin::jcasbin::main</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.main;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.Util;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="24"><highlight class="keyword">class<sp
          /></highlight><highlight class="normal">InternalEnforcer<sp
          /></highlight><highlight class="keyword">extends</highlight><highlight
          class="normal"
        ><sp/>CoreEnforcer<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>addPolicy(String<sp
          />sec,<sp/>String<sp/>ptype,<sp/>List&lt;String&gt;<sp/>rule)<sp
          />{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(adapter<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        ><sp/>&amp;&amp;<sp/>autoSave)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapter.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a436844fd12e5fa24d861948f675128cf"
            kindref="member"
          >addPolicy</ref>(sec,<sp/>ptype,<sp/>rule);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(UnsupportedOperationException<sp/>ignored)<sp
          />{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />Util.logPrintf(</highlight><highlight
          class="stringliteral"
        >"Method<sp/>not<sp/>implemented"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(watcher<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="comment">//<sp/>error<sp
          />intentionally<sp/>ignored</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watcher.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1af1985ceb985a355953fa1f34f9366fae"
            kindref="member"
          >update</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a221cfdebb21eb9156d26fff6d31d7e2d"
            kindref="member"
          >addPolicy</ref>(sec,<sp/>ptype,<sp/>rule);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />removePolicy(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(adapter<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        ><sp/>&amp;&amp;<sp/>autoSave)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapter.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a8eb5c047ab701a8753d09384b30c0823"
            kindref="member"
          >removePolicy</ref>(sec,<sp/>ptype,<sp/>rule);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(UnsupportedOperationException<sp/>ignored)<sp
          />{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />Util.logPrintf(</highlight><highlight
          class="stringliteral"
        >"Method<sp/>not<sp/>implemented"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"/></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(watcher<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="comment">//<sp/>error<sp
          />intentionally<sp/>ignored</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watcher.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1af1985ceb985a355953fa1f34f9366fae"
            kindref="member"
          >update</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1af7540f0aeacfe8664a893d8d1b5e7e1f"
            kindref="member"
          >removePolicy</ref>(sec,<sp/>ptype,<sp/>rule);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />removeFilteredPolicy(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues)<sp
          />{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(adapter<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        ><sp/>&amp;&amp;<sp/>autoSave)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapter.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a0bcada1669a34b2a0817047ed111975d"
            kindref="member"
          >removeFilteredPolicy</ref>(sec,<sp/>ptype,<sp/>fieldIndex,<sp
          />fieldValues);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(UnsupportedOperationException<sp/>ignored)<sp
          />{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />Util.logPrintf(</highlight><highlight
          class="stringliteral"
        >"Method<sp/>not<sp/>implemented"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(watcher<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="comment">//<sp/>error<sp
          />intentionally<sp/>ignored</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watcher.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1af1985ceb985a355953fa1f34f9366fae"
            kindref="member"
          >update</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3e55f30f71451bb51631aa0ce1b8bd70"
            kindref="member"
          >removeFilteredPolicy</ref>(sec,<sp/>ptype,<sp/>fieldIndex,<sp
          />fieldValues);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/main/InternalEnforcer.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="ManagementEnforcer_8java"
    kind="file"
    language="Java"
  >
    <compoundname>ManagementEnforcer.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
      prot="public"
    >org::casbin::jcasbin::main::ManagementEnforcer</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1main"
    >org::casbin::jcasbin::main</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.main;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorFunction;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.lang.reflect.Method;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Arrays;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline
        lineno="26"
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer"
            kindref="compound"
          >ManagementEnforcer</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>InternalEnforcer<sp
          />{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a02a148724235d5a345db21d0544bcba4"
            kindref="member"
          >getAllSubjects</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a64bd155e5b79f76fba3d4645ef059473"
            kindref="member"
          >getAllNamedSubjects</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a64bd155e5b79f76fba3d4645ef059473"
            kindref="member"
          >getAllNamedSubjects</ref>(String<sp/>ptype)<sp
          />{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a671d6ce15b4e38b5fb322ccb8cdcb836"
            kindref="member"
          >getValuesForFieldInPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1afe061eec06bae40791b2a17488e7d440"
            kindref="member"
          >getAllObjects</ref>()<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad36cc921314079e5dcc6c92ab89de91d"
            kindref="member"
          >getAllNamedObjects</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad36cc921314079e5dcc6c92ab89de91d"
            kindref="member"
          >getAllNamedObjects</ref>(String<sp/>ptype)<sp
          />{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a671d6ce15b4e38b5fb322ccb8cdcb836"
            kindref="member"
          >getValuesForFieldInPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a615b4057c4b9697cb4cab747c9ca2bbe"
            kindref="member"
          >getAllActions</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ac9a8c113ba5814b238775f76fa051a23"
            kindref="member"
          >getAllNamedActions</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ac9a8c113ba5814b238775f76fa051a23"
            kindref="member"
          >getAllNamedActions</ref>(String<sp/>ptype)<sp
          />{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a671d6ce15b4e38b5fb322ccb8cdcb836"
            kindref="member"
          >getValuesForFieldInPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />2);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1bc99cd18bbc3676576ad79aafe5e358"
            kindref="member"
          >getAllRoles</ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a73db140800a2b3b5536cb5a5a1245750"
            kindref="member"
          >getAllNamedRoles</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"/></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a73db140800a2b3b5536cb5a5a1245750"
            kindref="member"
          >getAllNamedRoles</ref>(String<sp/>ptype)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a671d6ce15b4e38b5fb322ccb8cdcb836"
            kindref="member"
          >getValuesForFieldInPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />1);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8fe83aae68122f404f5c248205041506"
            kindref="member"
          >getPolicy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a79a8449681f1351650ffe75a15f49970"
            kindref="member"
          >getNamedPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"/></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae42feedb5e204600566fca5c3b5764f9"
            kindref="member"
          >getFilteredPolicy</ref>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>fieldIndex,<sp
          />String...<sp/>fieldValues)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8bbc7a5f03e97a94c08eea0791999cc7"
            kindref="member"
          >getFilteredNamedPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>fieldIndex,<sp
          />fieldValues);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a79a8449681f1351650ffe75a15f49970"
            kindref="member"
          >getNamedPolicy</ref>(String<sp/>ptype)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a1ba3b58cfe4b2b180755accd9a4c0a5a"
            kindref="member"
          >getPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp
          />ptype);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"/></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a8bbc7a5f03e97a94c08eea0791999cc7"
            kindref="member"
          >getFilteredNamedPolicy</ref>(String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues)<sp
          />{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a861c9d9047cdc53e3b5f964ec3b90f9b"
            kindref="member"
          >getFilteredPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />fieldIndex,<sp/>fieldValues);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a5fe374736c6b242fa46f98f53ffd1c97"
            kindref="member"
          >getGroupingPolicy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abba16b254dd2d441077374f10a41f5d8"
            kindref="member"
          >getNamedGroupingPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"/></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aec3ae451c6c6cc2019189e18d6633942"
            kindref="member"
          >getFilteredGroupingPolicy</ref>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>fieldIndex,<sp
          />String...<sp/>fieldValues)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9de8af989227478e2def8453a1212816"
            kindref="member"
          >getFilteredNamedGroupingPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/>fieldIndex,<sp
          />fieldValues);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"/></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abba16b254dd2d441077374f10a41f5d8"
            kindref="member"
          >getNamedGroupingPolicy</ref>(String<sp/>ptype)<sp
          />{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a1ba3b58cfe4b2b180755accd9a4c0a5a"
            kindref="member"
          >getPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp
          />ptype);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"/></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a9de8af989227478e2def8453a1212816"
            kindref="member"
          >getFilteredNamedGroupingPolicy</ref>(String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues)<sp
          />{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a861c9d9047cdc53e3b5f964ec3b90f9b"
            kindref="member"
          >getFilteredPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />fieldIndex,<sp/>fieldValues);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"/></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abdda8a710e53ef8eab16b1302f3cffce"
            kindref="member"
          >hasPolicy</ref>(List&lt;String&gt;<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a490c6b5a9300fcf3597b22e8d1c23965"
            kindref="member"
          >hasNamedPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp
          />params);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abdda8a710e53ef8eab16b1302f3cffce"
            kindref="member"
          >hasPolicy</ref>(String...<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1abdda8a710e53ef8eab16b1302f3cffce"
            kindref="member"
          >hasPolicy</ref>(Arrays.asList(params));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"/></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a490c6b5a9300fcf3597b22e8d1c23965"
            kindref="member"
          >hasNamedPolicy</ref>(String<sp/>ptype,<sp/>List&lt;String&gt;<sp
          />params)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3ef77a8aea4e373a3b44aa4f20387f05"
            kindref="member"
          >hasPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />params);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a490c6b5a9300fcf3597b22e8d1c23965"
            kindref="member"
          >hasNamedPolicy</ref>(String<sp/>ptype,<sp/>String...<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a490c6b5a9300fcf3597b22e8d1c23965"
            kindref="member"
          >hasNamedPolicy</ref>(ptype,<sp
          />Arrays.asList(params));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"/></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
            kindref="member"
          >addPolicy</ref>(List&lt;String&gt;<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a18008129a41d2de393ea31c3116ac53d"
            kindref="member"
          >addNamedPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp
          />params);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"/></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
            kindref="member"
          >addPolicy</ref>(String...<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
            kindref="member"
          >addPolicy</ref>(Arrays.asList(params));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"/></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a18008129a41d2de393ea31c3116ac53d"
            kindref="member"
          >addNamedPolicy</ref>(String<sp/>ptype,<sp/>List&lt;String&gt;<sp
          />params)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
            kindref="member"
          >addPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />params);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"/></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a18008129a41d2de393ea31c3116ac53d"
            kindref="member"
          >addNamedPolicy</ref>(String<sp/>ptype,<sp/>String...<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a18008129a41d2de393ea31c3116ac53d"
            kindref="member"
          >addNamedPolicy</ref>(ptype,<sp
          />Arrays.asList(params));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"/></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
            kindref="member"
          >removePolicy</ref>(List&lt;String&gt;<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad37d626eefdd24672238b561b89df382"
            kindref="member"
          >removeNamedPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp
          />params);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"/></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
            kindref="member"
          >removePolicy</ref>(String...<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
            kindref="member"
          >removePolicy</ref>(Arrays.asList(params));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"/></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
            kindref="member"
          >removeFilteredPolicy</ref>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>fieldIndex,<sp
          />String...<sp/>fieldValues)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a08335329c3d380bf56606b3a3bb32e89"
            kindref="member"
          >removeFilteredNamedPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>fieldIndex,<sp
          />fieldValues);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"/></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad37d626eefdd24672238b561b89df382"
            kindref="member"
          >removeNamedPolicy</ref>(String<sp/>ptype,<sp/>List&lt;String&gt;<sp
          />params)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
            kindref="member"
          >removePolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />params);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"/></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad37d626eefdd24672238b561b89df382"
            kindref="member"
          >removeNamedPolicy</ref>(String<sp/>ptype,<sp/>String...<sp
          />params)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ad37d626eefdd24672238b561b89df382"
            kindref="member"
          >removeNamedPolicy</ref>(ptype,<sp
          />Arrays.asList(params));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"/></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a08335329c3d380bf56606b3a3bb32e89"
            kindref="member"
          >removeFilteredNamedPolicy</ref>(String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues)<sp
          />{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
            kindref="member"
          >removeFilteredPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />fieldIndex,<sp/>fieldValues);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"/></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4792bf1723219e7f7568162eb3cef2bc"
            kindref="member"
          >hasGroupingPolicy</ref>(List&lt;String&gt;<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f4898c1bfe12eb7c182eade59e2d8f7"
            kindref="member"
          >hasNamedGroupingPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp
          />params);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"/></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4792bf1723219e7f7568162eb3cef2bc"
            kindref="member"
          >hasGroupingPolicy</ref>(String...<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4792bf1723219e7f7568162eb3cef2bc"
            kindref="member"
          >hasGroupingPolicy</ref>(Arrays.asList(params));</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"/></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f4898c1bfe12eb7c182eade59e2d8f7"
            kindref="member"
          >hasNamedGroupingPolicy</ref>(String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3ef77a8aea4e373a3b44aa4f20387f05"
            kindref="member"
          >hasPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />params);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"/></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f4898c1bfe12eb7c182eade59e2d8f7"
            kindref="member"
          >hasNamedGroupingPolicy</ref>(String<sp/>ptype,<sp/>String...<sp
          />params)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f4898c1bfe12eb7c182eade59e2d8f7"
            kindref="member"
          >hasNamedGroupingPolicy</ref>(ptype,<sp
          />Arrays.asList(params));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"/></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
            kindref="member"
          >addGroupingPolicy</ref>(List&lt;String&gt;<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade3e57fb44bb25ab0a6f0009abcef1a6"
            kindref="member"
          >addNamedGroupingPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp
          />params);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"/></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
            kindref="member"
          >addGroupingPolicy</ref>(String...<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aece6270678d5c572f19ccb94eaf24a92"
            kindref="member"
          >addGroupingPolicy</ref>(Arrays.asList(params));</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"/></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade3e57fb44bb25ab0a6f0009abcef1a6"
            kindref="member"
          >addNamedGroupingPolicy</ref>(String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>ruleAdded<sp/>=<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1aea63a91f1e1158333de5381b01fdb8f2"
            kindref="member"
          >addPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />params);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"/></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(autoBuildRoleLinks)<sp
          />{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
            kindref="member"
          >buildRoleLinks</ref>();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />ruleAdded;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"/></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade3e57fb44bb25ab0a6f0009abcef1a6"
            kindref="member"
          >addNamedGroupingPolicy</ref>(String<sp/>ptype,<sp/>String...<sp
          />params)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade3e57fb44bb25ab0a6f0009abcef1a6"
            kindref="member"
          >addNamedGroupingPolicy</ref>(ptype,<sp
          />Arrays.asList(params));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"/></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
            kindref="member"
          >removeGroupingPolicy</ref>(List&lt;String&gt;<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f2fb581b79dc89f73642dab67d9f5c6"
            kindref="member"
          >removeNamedGroupingPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp
          />params);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"/></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
            kindref="member"
          >removeGroupingPolicy</ref>(String...<sp/>params)<sp
          />{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a984a0a0063343fcb0cc4453f51dd96b7"
            kindref="member"
          >removeGroupingPolicy</ref>(Arrays.asList(params));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"/></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a1d73ccb6974523e067ebf5d9e6b28a3c"
            kindref="member"
          >removeFilteredGroupingPolicy</ref>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>fieldIndex,<sp
          />String...<sp/>fieldValues)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade55e4aa087ec91aeeb8827bad1dac3e"
            kindref="member"
          >removeFilteredNamedGroupingPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/>fieldIndex,<sp
          />fieldValues);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"/></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f2fb581b79dc89f73642dab67d9f5c6"
            kindref="member"
          >removeNamedGroupingPolicy</ref>(String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>ruleRemoved<sp/>=<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a893f178d8aa9215b6cb1ecd74c4fd2c2"
            kindref="member"
          >removePolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />params);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"/></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(autoBuildRoleLinks)<sp
          />{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
            kindref="member"
          >buildRoleLinks</ref>();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />ruleRemoved;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"/></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f2fb581b79dc89f73642dab67d9f5c6"
            kindref="member"
          >removeNamedGroupingPolicy</ref>(String<sp/>ptype,<sp/>String...<sp
          />params)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1a4f2fb581b79dc89f73642dab67d9f5c6"
            kindref="member"
          >removeNamedGroupingPolicy</ref>(ptype,<sp
          />Arrays.asList(params));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"/></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ade55e4aa087ec91aeeb8827bad1dac3e"
            kindref="member"
          >removeFilteredNamedGroupingPolicy</ref>(String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues)<sp
          />{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>ruleRemoved<sp/>=<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ae3705e964a4a66cf126e3a855cc72dbf"
            kindref="member"
          >removeFilteredPolicy</ref>(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/>ptype,<sp
          />fieldIndex,<sp/>fieldValues);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"/></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(autoBuildRoleLinks)<sp
          />{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1a193f641ef4fe0d9699e04150cd9bd6fb"
            kindref="member"
          >buildRoleLinks</ref>();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />ruleRemoved;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"/></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1ManagementEnforcer_1ab63f44be32bf147161644644c07e203f"
            kindref="member"
          >addFunction</ref>(String<sp/>name,<sp/>AviatorFunction<sp
          /></highlight><highlight
          class="keyword"
        >function</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>fm.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a78bc1cfad42cb235bad83ca32120653a"
            kindref="member"
          >addFunction</ref>(name,<sp/></highlight><highlight
          class="keyword"
        >function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/main/ManagementEnforcer.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="SyncedEnforcer_8java"
    kind="file"
    language="Java"
  >
    <compoundname>SyncedEnforcer.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
      prot="public"
    >org::casbin::jcasbin::main::SyncedEnforcer</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1main"
    >org::casbin::jcasbin::main</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.main;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.Model;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.persist.Adapter;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.concurrent.locks.ReadWriteLock;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.concurrent.locks.ReentrantReadWriteLock;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline
        lineno="27"
        refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer"
            kindref="compound"
          >SyncedEnforcer</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1Enforcer"
            kindref="compound"
          >Enforcer</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">final</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/>ReadWriteLock<sp
          />READ_WRITE_LOCK<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ReentrantReadWriteLock();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
            kindref="member"
          >SyncedEnforcer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
            kindref="member"
          >SyncedEnforcer</ref>(String<sp/>modelPath,<sp/>String<sp
          />policyFile)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(modelPath,<sp/>policyFile);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
            kindref="member"
          >SyncedEnforcer</ref>(String<sp/>modelPath,<sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/>adapter)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(modelPath,<sp/>adapter);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
            kindref="member"
          >SyncedEnforcer</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>m,<sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/>adapter)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(m,<sp/>adapter);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"/></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
            kindref="member"
          >SyncedEnforcer</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(m);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
            kindref="member"
          >SyncedEnforcer</ref>(String<sp/>modelPath)<sp
          />{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(modelPath);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa1b5fd14e31827565376078ff1952d43"
            kindref="member"
          >SyncedEnforcer</ref>(String<sp/>modelPath,<sp/>String<sp
          />policyFile,<sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
            kindref="member"
          >enableLog</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(modelPath,<sp/>policyFile,<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1CoreEnforcer_1af539c8165a2abb1d591ad2c933a22f40"
            kindref="member"
          >enableLog</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af2a5fd346aa920a19eb00b99ed540a79"
            kindref="member"
          >getRolesForUser</ref>(String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.getRolesForUser(name);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ab3bbdf76007b702e3485a5b648104093"
            kindref="member"
          >getUsersForRole</ref>(String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.getUsersForRole(name);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a8aa67e92014b455e42e0cfdc813051a5"
            kindref="member"
          >hasRoleForUser</ref>(String<sp/>name,<sp/>String<sp/>role)<sp
          />{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.hasRoleForUser(name,<sp/>role);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aba5e4485fe28c6de45eedd54686ef51f"
            kindref="member"
          >addRoleForUser</ref>(String<sp/>user,<sp/>String<sp/>role)<sp
          />{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.addRoleForUser(user,<sp/>role);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a479619cc73668e25b741bf7d08f51023"
            kindref="member"
          >deleteRoleForUser</ref>(String<sp/>user,<sp/>String<sp/>role)<sp
          />{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deleteRoleForUser(user,<sp/>role);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1ac75013652d82c9a2e2b31543ffe57d50"
            kindref="member"
          >deleteRolesForUser</ref>(String<sp/>user)<sp
          />{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deleteRolesForUser(user);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aff27c9aedfa504a642212ebdcdd79e44"
            kindref="member"
          >deleteUser</ref>(String<sp/>user)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deleteUser(user);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af72955cf27fec4b175c640db40320826"
            kindref="member"
          >deleteRole</ref>(String<sp/>role)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />super.deleteRole(role);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"/></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62a97217edde0b20b3f8d22a5dbcf943"
            kindref="member"
          >deletePermission</ref>(String...<sp/>permission)<sp
          />{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deletePermission(permission);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62a97217edde0b20b3f8d22a5dbcf943"
            kindref="member"
          >deletePermission</ref>(List&lt;String&gt;<sp/>permission)<sp
          />{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deletePermission(permission);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"/></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1adb2b71691158f9d360ba1666d8b86c3c"
            kindref="member"
          >addPermissionForUser</ref>(String<sp/>user,<sp/>String...<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.addPermissionForUser(user,<sp
          />permission);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"/></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1adb2b71691158f9d360ba1666d8b86c3c"
            kindref="member"
          >addPermissionForUser</ref>(String<sp/>user,<sp/>List&lt;String&gt;<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.addPermissionForUser(user,<sp
          />permission);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"/></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a244dcefe509431a733b8433a8c55544d"
            kindref="member"
          >deletePermissionForUser</ref>(String<sp/>user,<sp/>String...<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deletePermissionForUser(user,<sp
          />permission);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"/></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a244dcefe509431a733b8433a8c55544d"
            kindref="member"
          >deletePermissionForUser</ref>(String<sp/>user,<sp
          />List&lt;String&gt;<sp/>permission)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deletePermissionForUser(user,<sp
          />permission);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"/></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a982c777484c5b1ebcd8a7ddfdca7229a"
            kindref="member"
          >deletePermissionsForUser</ref>(String<sp/>user)<sp
          />{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deletePermissionsForUser(user);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"/></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a6ba0ce3478f63d2a8e301490b66746d5"
            kindref="member"
          >getPermissionsForUser</ref>(String<sp/>user)<sp
          />{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.getPermissionsForUser(user);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"/></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a34f55b0412ac2dbddd459047dab2cfac"
            kindref="member"
          >hasPermissionForUser</ref>(String<sp/>user,<sp/>String...<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.hasPermissionForUser(user,<sp
          />permission);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"/></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a34f55b0412ac2dbddd459047dab2cfac"
            kindref="member"
          >hasPermissionForUser</ref>(String<sp/>user,<sp/>List&lt;String&gt;<sp
          />permission)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.hasPermissionForUser(user,<sp
          />permission);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"/></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1aa439aea6f870e1bf09363a0c89cf2516"
            kindref="member"
          >getRolesForUserInDomain</ref>(String<sp/>name,<sp/>String<sp
          />domain)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.getRolesForUserInDomain(name,<sp
          />domain);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"/></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a62d7fc0674d09fa3d2360df017257c57"
            kindref="member"
          >getPermissionsForUserInDomain</ref>(String<sp/>user,<sp/>String<sp
          />domain)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.getPermissionsForUserInDomain(user,<sp
          />domain);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"/></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1abe38b2486de5d64f8d9acd1247111735"
            kindref="member"
          >addRoleForUserInDomain</ref>(String<sp/>user,<sp/>String<sp/>role,<sp
          />String<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.addRoleForUserInDomain(user,<sp/>role,<sp
          />domain);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"/></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a872e36b1fd42016e105730815f83b64c"
            kindref="member"
          >deleteRoleForUserInDomain</ref>(String<sp/>user,<sp/>String<sp
          />role,<sp/>String<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().lock();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.deleteRoleForUserInDomain(user,<sp/>role,<sp
          />domain);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.writeLock().unlock();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"/></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1af7d1e178228022fa33e3130e636f7be1"
            kindref="member"
          >getImplicitRolesForUser</ref>(String<sp/>name,<sp/>String...<sp
          />domain)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.getImplicitRolesForUser(name,<sp
          />domain);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"/></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1main_1_1SyncedEnforcer_1a29d21a2e6ee02f145c50a4903f0038a9"
            kindref="member"
          >getImplicitPermissionsForUser</ref>(String<sp/>user)<sp
          />{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().lock();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />super.getImplicitPermissionsForUser(user);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >finally</highlight><highlight class="normal"><sp
          />{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />READ_WRITE_LOCK.readLock().unlock();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/main/SyncedEnforcer.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Assertion_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Assertion.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
      prot="public"
    >org::casbin::jcasbin::model::Assertion</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1model"
    >org::casbin::jcasbin::model</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.model;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.rbac.RoleManager;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.Util;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.ArrayList;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline
        lineno="27"
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>key;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>value;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String[]<sp/>tokens;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/>policy;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>rm;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>policy<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"/></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keyword"
        >protected</highlight><highlight class="normal"><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>buildRoleLinks(<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>rm)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.rm<sp/>=<sp/>rm;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>count<sp/>=<sp
          />0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>value.length();<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(value.charAt(i)<sp/>==<sp
          /></highlight><highlight class="charliteral">'_'</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp
          />++;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(List&lt;String&gt;<sp
          />rule<sp/>:<sp/>policy)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(count<sp/>&lt;<sp/>2)<sp
          />{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"the<sp/>number<sp/>of<sp/>\"_\"<sp/>in<sp/>role<sp/>definition<sp
          />should<sp/>be<sp/>at<sp/>least<sp/>2"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(rule.size()<sp/>&lt;<sp
          />count)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"grouping<sp/>policy<sp/>elements<sp/>do<sp/>not<sp/>meet<sp/>role<sp
          />definition"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>2)<sp
          />{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1ab69982204040ce3b3fd09cf8f56e65ce"
            kindref="member"
          >addLink</ref>(rule.get(0),<sp/>rule.get(1));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>3)<sp
          />{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1ab69982204040ce3b3fd09cf8f56e65ce"
            kindref="member"
          >addLink</ref>(rule.get(0),<sp/>rule.get(1),<sp
          />rule.get(2));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>4)<sp
          />{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rm.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1ab69982204040ce3b3fd09cf8f56e65ce"
            kindref="member"
          >addLink</ref>(rule.get(0),<sp/>rule.get(1),<sp/>rule.get(2),<sp
          />rule.get(3));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"/></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
            kindref="member"
          >logPrint</ref>(</highlight><highlight class="stringliteral">"Role<sp
          />links<sp/>for:<sp/>"</highlight><highlight class="normal"><sp/>+<sp
          />key);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>rm.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1add0e9a35984db53028db92d0d52fd9fd"
            kindref="member"
          >printRoles</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/model/Assertion.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="FunctionMap_8java"
    kind="file"
    language="Java"
  >
    <compoundname>FunctionMap.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
      prot="public"
    >org::casbin::jcasbin::model::FunctionMap</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1model"
    >org::casbin::jcasbin::model</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.model;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorFunction;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.function.KeyMatchFunc;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.function.KeyMatch2Func;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.function.RegexMatchFunc;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.function.IPMatchFunc;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.HashMap;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline
        lineno="29"
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>Map&lt;String,<sp/>AviatorFunction&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a78bc1cfad42cb235bad83ca32120653a"
            kindref="member"
          >addFunction</ref>(String<sp/>name,<sp/>AviatorFunction<sp
          /></highlight><highlight
          class="keyword"
        >function</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>.put(name,<sp/></highlight><highlight
          class="keyword"
        >function</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a40daabe5db0f0ba7ef29cece6580f584"
            kindref="member"
          >loadFunctionMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref><sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap"
            kindref="compound"
          >FunctionMap</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>.fm<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />HashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>.addFunction(</highlight><highlight
          class="stringliteral"
        >"keyMatch"</highlight><highlight class="normal">,<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
            kindref="compound"
          >KeyMatchFunc</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>.addFunction(</highlight><highlight
          class="stringliteral"
        >"keyMatch2"</highlight><highlight class="normal">,<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
            kindref="compound"
          >KeyMatch2Func</ref>());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>.addFunction(</highlight><highlight
          class="stringliteral"
        >"regexMatch"</highlight><highlight class="normal">,<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
            kindref="compound"
          >RegexMatchFunc</ref>());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>.addFunction(</highlight><highlight
          class="stringliteral"
        >"ipMatch"</highlight><highlight class="normal">,<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
            kindref="compound"
          >IPMatchFunc</ref>());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1FunctionMap_1a6a7a07c0c3184ed931db49d920b8f678"
            kindref="member"
          >fm</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/model/FunctionMap.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Model_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Model.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
      prot="public"
    >org::casbin::jcasbin::model::Model</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1model"
    >org::casbin::jcasbin::model</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.model;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.config.Config;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.rbac.RoleManager;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.Util;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.HashMap;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline
        lineno="28"
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"
            kindref="compound"
          >Policy</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/>Map&lt;String,<sp
          />String&gt;<sp/>sectionNameMap;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">static</highlight><highlight
          class="normal"
        ><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>sectionNameMap<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />HashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>sectionNameMap.put(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"request_definition"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>sectionNameMap.put(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"policy_definition"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>sectionNameMap.put(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"role_definition"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>sectionNameMap.put(</highlight><highlight
          class="stringliteral"
        >"e"</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"policy_effect"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>sectionNameMap.put(</highlight><highlight
          class="stringliteral"
        >"m"</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"matchers"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref>()<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />HashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>loadAssertion(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model,<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/>cfg,<sp/>String<sp/>sec,<sp/>String<sp/>key)<sp
          />{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>value<sp/>=<sp
          />cfg.getString(sectionNameMap.get(sec)<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal"><sp/>+<sp
          />key);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>model.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a3535f8d53ed9895426b230722b10a1ca"
            kindref="member"
          >addDef</ref>(sec,<sp/>key,<sp/>value);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a3535f8d53ed9895426b230722b10a1ca"
            kindref="member"
          >addDef</ref>(String<sp/>sec,<sp/>String<sp/>key,<sp/>String<sp
          />value)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>ast.key<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>ast.value<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(ast.value.equals(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(sec.equals(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">)<sp/>||<sp
          />sec.equals(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>ast.tokens<sp/>=<sp
          />ast.value.split(</highlight><highlight class="stringliteral">",<sp
          />"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>ast.tokens.length;<sp/>i<sp/>++)<sp
          />{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ast.tokens[i]<sp
          />=<sp/>key<sp/>+<sp/></highlight><highlight
          class="stringliteral"
        >"_"</highlight><highlight class="normal"><sp/>+<sp
          />ast.tokens[i];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>ast.value<sp/>=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aae19f22e52ad25f51300d059c31233fb"
            kindref="member"
          >removeComments</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aec3f5061f47a286ca2e765e23d0c278d"
            kindref="member"
          >escapeAssertion</ref>(ast.value));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(!model.containsKey(sec))<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>model.put(sec,<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>HashMap&lt;&gt;());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.get(sec).put(key,<sp/>ast);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"/></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>String<sp/>getKeySuffix(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i)<sp
          />{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)<sp
          />{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />Integer.toString(i);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>loadSection(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model,<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/>cfg,<sp/>String<sp/>sec)<sp
          />{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp
          />1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >while</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!loadAssertion(model,<sp
          />cfg,<sp/>sec,<sp/>sec<sp/>+<sp/>getKeySuffix(i)))<sp
          />{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp
          />++;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1a172cb43bf8984fc898cac431c1999e9f"
            kindref="member"
          >loadModel</ref>(String<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/>cfg<sp/>=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a443351f97e46e1448eae10b77252265a"
            kindref="member"
          >newConfig</ref>(path);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"e"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"m"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"/></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"/></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1aeb2b0b644cf8d18478ccc871ec59018a"
            kindref="member"
          >loadModelFromText</ref>(String<sp/>text)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref><sp/>cfg<sp/>=<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config"
            kindref="compound"
          >Config</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1config_1_1Config_1a009e75472aacfb467f175be47dde4c6d"
            kindref="member"
          >newConfigFromText</ref>(text);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"/></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"e"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"m"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>loadSection(</highlight><highlight
          class="keyword"
        >this</highlight><highlight class="normal">,<sp/>cfg,<sp
          /></highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>String<sp/>saveSectionToText(String<sp/>sec)<sp
          />{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>StringBuilder<sp/>res<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />StringBuilder(</highlight><highlight
          class="stringliteral"
        >"["</highlight><highlight class="normal"><sp/>+<sp
          />sectionNameMap.get(sec)<sp/>+<sp/></highlight><highlight
          class="stringliteral"
        >"]\n"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"/></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Map&lt;String,<sp/>Assertion&gt;<sp/>section<sp/>=<sp
          />model.get(sec);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(section<sp/>==<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>&gt;<sp/>entry<sp/>:<sp/>section.entrySet())<sp
          />{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />res.append(String.format(</highlight><highlight
          class="stringliteral"
        >"%s<sp/>=<sp/>%s\n"</highlight><highlight class="normal">,<sp
          />entry.getKey(),<sp
          />entry.getValue().value.replace(</highlight><highlight
          class="stringliteral"
        >"_"</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"."</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />res.toString();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1ab0a2500b20492c9a0db00a83e7717eef"
            kindref="member"
          >saveModelToText</ref>()<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>StringBuilder<sp/>res<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />StringBuilder();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>res.append(saveSectionToText(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>res.append(</highlight><highlight
          class="stringliteral"
        >"\n"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>res.append(saveSectionToText(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>res.append(</highlight><highlight
          class="stringliteral"
        >"\n"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>g<sp/>=<sp
          />saveSectionToText(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>g<sp/>=<sp/>g.replace(</highlight><highlight
          class="stringliteral"
        >"."</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"_"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>res.append(g);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(!g.equals(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>res.append(</highlight><highlight
          class="stringliteral"
        >"\n"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"/></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>res.append(saveSectionToText(</highlight><highlight
          class="stringliteral"
        >"e"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>res.append(</highlight><highlight
          class="stringliteral"
        >"\n"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>res.append(saveSectionToText(</highlight><highlight
          class="stringliteral"
        >"m"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />res.toString();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"/></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model_1ab28d87ff7ecaa9039484275160ab9e17"
            kindref="member"
          >printModel</ref>()<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
            kindref="member"
          >logPrint</ref>(</highlight><highlight
          class="stringliteral"
        >"Model:"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          />Map&lt;String,<sp/>Assertion&gt;&gt;<sp/>entry<sp/>:<sp
          />model.entrySet())<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>&gt;<sp/>entry2<sp/>:<sp
          />entry.getValue().entrySet())<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a849147e952262ef9365c1729fe32f127"
            kindref="member"
          >logPrintf</ref>(</highlight><highlight
          class="stringliteral"
        >"%s.%s:<sp/>%s"</highlight><highlight class="normal">,<sp
          />entry.getKey(),<sp/>entry2.getKey(),<sp
          />entry2.getValue().value);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/model/Model.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Policy_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Policy.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"
      prot="public"
    >org::casbin::jcasbin::model::Policy</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1model"
    >org::casbin::jcasbin::model</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.model;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.rbac.RoleManager;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.Util;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.ArrayList;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline
        lineno="24"
        refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy"
            kindref="compound"
          >Policy</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>Map&lt;String,<sp/>Map&lt;String,<sp/>Assertion&gt;&gt;<sp
          />model;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a07daa48b2152a421657a3974558e689e"
            kindref="member"
          >buildRoleLinks</ref>(<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>rm)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(model.containsKey(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>:<sp/>model.get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).values())<sp
          />{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />ast.buildRoleLinks(rm);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a441c38321351f4990f3169feb2c75cab"
            kindref="member"
          >printPolicy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
            kindref="member"
          >logPrint</ref>(</highlight><highlight
          class="stringliteral"
        >"Policy:"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(model.containsKey(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>&gt;<sp/>entry<sp/>:<sp
          />model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).entrySet())<sp
          />{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>key<sp
          />=<sp/>entry.getKey();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>=<sp
          />entry.getValue();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
            kindref="member"
          >logPrint</ref>(key<sp/>+<sp/></highlight><highlight
          class="stringliteral"
        >":<sp/>"</highlight><highlight class="normal"><sp/>+<sp/>ast.value<sp
          />+<sp/></highlight><highlight class="stringliteral">":<sp
          />"</highlight><highlight class="normal"><sp/>+<sp
          />ast.policy);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(model.containsKey(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>&gt;<sp/>entry<sp/>:<sp
          />model.get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).entrySet())<sp
          />{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>key<sp
          />=<sp/>entry.getKey();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>=<sp
          />entry.getValue();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
            kindref="member"
          >logPrint</ref>(key<sp/>+<sp/></highlight><highlight
          class="stringliteral"
        >":<sp/>"</highlight><highlight class="normal"><sp/>+<sp/>ast.value<sp
          />+<sp/></highlight><highlight class="stringliteral">":<sp
          />"</highlight><highlight class="normal"><sp/>+<sp
          />ast.policy);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a68d8a7c8db6c0cd68ccadc8035ef7291"
            kindref="member"
          >savePolicyToText</ref>()<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>StringBuilder<sp/>res<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />StringBuilder();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"/></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(model.containsKey(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>&gt;<sp/>entry<sp/>:<sp
          />model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).entrySet())<sp
          />{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>key<sp
          />=<sp/>entry.getKey();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>=<sp
          />entry.getValue();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">for</highlight><highlight
          class="normal"
        ><sp/>(List&lt;String&gt;<sp/>rule<sp/>:<sp/>ast.policy)<sp
          />{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />res.append(String.format(</highlight><highlight
          class="stringliteral"
        >"%s,<sp/>%s\n"</highlight><highlight class="normal">,<sp/>key,<sp
          />String.join(</highlight><highlight class="stringliteral">",<sp
          />"</highlight><highlight class="normal">,<sp
          />rule)));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(model.containsKey(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Map.Entry&lt;String,<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref>&gt;<sp/>entry<sp/>:<sp
          />model.get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).entrySet())<sp
          />{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>key<sp
          />=<sp/>entry.getKey();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>=<sp
          />entry.getValue();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">for</highlight><highlight
          class="normal"
        ><sp/>(List&lt;String&gt;<sp/>rule<sp/>:<sp/>ast.policy)<sp
          />{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />res.append(String.format(</highlight><highlight
          class="stringliteral"
        >"%s,<sp/>%s\n"</highlight><highlight class="normal">,<sp/>key,<sp
          />String.join(</highlight><highlight class="stringliteral">",<sp
          />"</highlight><highlight class="normal">,<sp
          />rule)));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"/></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />res.toString();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a829c28d4cf8aa054ec02e511915289b7"
            kindref="member"
          >clearPolicy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(model.containsKey(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>:<sp/>model.get(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">).values())<sp
          />{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ast.policy<sp
          />=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(model.containsKey(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Assertion"
            kindref="compound"
          >Assertion</ref><sp/>ast<sp/>:<sp/>model.get(</highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">).values())<sp
          />{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ast.policy<sp
          />=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"/></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a1ba3b58cfe4b2b180755accd9a4c0a5a"
            kindref="member"
          >getPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype)<sp
          />{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />model.get(sec).get(ptype).policy;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;List&lt;String&gt;&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a861c9d9047cdc53e3b5f964ec3b90f9b"
            kindref="member"
          >getFilteredPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues)<sp
          />{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;List&lt;String&gt;&gt;<sp/>res<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"/></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(List&lt;String&gt;<sp
          />rule<sp/>:<sp/>model.get(sec).get(ptype).policy)<sp
          />{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>matched<sp/>=<sp
          /></highlight><highlight class="keyword">true</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>fieldValues.length;<sp/>i<sp/>++)<sp
          />{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />fieldValue<sp/>=<sp/>fieldValues[i];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(!fieldValue.equals(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp
          />!rule.get(fieldIndex<sp/>+<sp/>i).equals(fieldValue))<sp
          />{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />matched<sp/>=<sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(matched)<sp
          />{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />res.add(rule);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"/></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />res;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"/></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3ef77a8aea4e373a3b44aa4f20387f05"
            kindref="member"
          >hasPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(List&lt;String&gt;<sp
          />r<sp/>:<sp/>model.get(sec).get(ptype).policy)<sp
          />{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a37ca1deb8c25172b84b6d901ef4eab13"
            kindref="member"
          >arrayEquals</ref>(rule,<sp/>r))<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"/></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a221cfdebb21eb9156d26fff6d31d7e2d"
            kindref="member"
          >addPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3ef77a8aea4e373a3b44aa4f20387f05"
            kindref="member"
          >hasPolicy</ref>(sec,<sp/>ptype,<sp/>rule))<sp
          />{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />model.get(sec).get(ptype).policy.add(rule);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"/></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1af7540f0aeacfe8664a893d8d1b5e7e1f"
            kindref="member"
          >removePolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>model.get(sec).get(ptype).policy.size();<sp/>i<sp/>++)<sp
          />{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;String&gt;<sp/>r<sp/>=<sp
          />model.get(sec).get(ptype).policy.get(i);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a37ca1deb8c25172b84b6d901ef4eab13"
            kindref="member"
          >arrayEquals</ref>(rule,<sp/>r))<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />model.get(sec).get(ptype).policy.remove(i);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"/></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"/></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a3e55f30f71451bb51631aa0ce1b8bd70"
            kindref="member"
          >removeFilteredPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues)<sp
          />{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;List&lt;String&gt;&gt;<sp/>tmp<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>res<sp/>=<sp
          /></highlight><highlight class="keyword">false</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"/></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(List&lt;String&gt;<sp
          />rule<sp/>:<sp/>model.get(sec).get(ptype).policy)<sp
          />{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>matched<sp/>=<sp
          /></highlight><highlight class="keyword">true</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>fieldValues.length;<sp/>i<sp/>++)<sp
          />{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />fieldValue<sp/>=<sp/>fieldValues[i];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(!fieldValue.equals(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp
          />!rule.get(fieldIndex<sp/>+<sp/>i).equals(fieldValue))<sp
          />{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />matched<sp/>=<sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(matched)<sp
          />{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp
          /></highlight><highlight class="keyword">true</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />tmp.add(rule);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"/></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.get(sec).get(ptype).policy<sp/>=<sp
          />tmp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />res;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"/></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Policy_1a671d6ce15b4e38b5fb322ccb8cdcb836"
            kindref="member"
          >getValuesForFieldInPolicy</ref>(String<sp/>sec,<sp/>String<sp
          />ptype,<sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>fieldIndex)<sp
          />{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>values<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"/></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(List&lt;String&gt;<sp
          />rule<sp/>:<sp/>model.get(sec).get(ptype).policy)<sp
          />{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />values.add(rule.get(fieldIndex));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"/></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a0115f548d793492680b6e01a32d6909b"
            kindref="member"
          >arrayRemoveDuplicates</ref>(values);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"/></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />values;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/model/Policy.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Adapter_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Adapter.java</compoundname>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
      prot="public"
    >org::casbin::jcasbin::persist::Adapter</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1persist"
    >org::casbin::jcasbin::persist</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.persist;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.Model;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline
        lineno="24"
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">interface<sp
          /></highlight><highlight class="normal"><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a2bd0addc7a7c609701426e1deaf0500d"
            kindref="member"
          >loadPolicy</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a1b61f1b7d0ef8a36d17611c5fbf4e472"
            kindref="member"
          >savePolicy</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a436844fd12e5fa24d861948f675128cf"
            kindref="member"
          >addPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>rule);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a8eb5c047ab701a8753d09384b30c0823"
            kindref="member"
          >removePolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>rule);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"/></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter_1a0bcada1669a34b2a0817047ed111975d"
            kindref="member"
          >removeFilteredPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/persist/Adapter.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="FileAdapter_8java"
    kind="file"
    language="Java"
  >
    <compoundname>FileAdapter.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
      prot="public"
    >org::casbin::jcasbin::persist::file_adapter::FileAdapter</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter"
    >org::casbin::jcasbin::persist::file_adapter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.persist.file_adapter;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.apache.commons.io.IOUtils;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.exception.CasbinAdapterException;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.exception.CasbinPolicyFileNotFoundException;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.Model;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.persist.Adapter;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.persist.Helper;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.Util;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.io.*;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.nio.charset.Charset;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.ArrayList;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.stream.Collectors;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline
        lineno="35"
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter"
            kindref="compound"
          >FileAdapter</ref><sp/></highlight><highlight
          class="keyword"
        >implements</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Adapter"
            kindref="compound"
          >Adapter</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>String<sp/>filePath;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>readOnly<sp/>=<sp
          /></highlight><highlight class="keyword">false</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>ByteArrayInputStream<sp
          />byteArrayInputStream;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a7ecec7a9f79e24235fc6ed0412f7d756"
            kindref="member"
          >FileAdapter</ref>(String<sp/>filePath)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.filePath<sp/>=<sp/>filePath;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"/></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a7ecec7a9f79e24235fc6ed0412f7d756"
            kindref="member"
          >FileAdapter</ref>(InputStream<sp/>inputStream)<sp
          />{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>readOnly<sp/>=<sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>byteArrayInputStream<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp
          />ByteArrayInputStream(IOUtils.toByteArray(inputStream));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp/>(IOException<sp/>e)<sp
          />{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />e.printStackTrace();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
            kindref="compound"
          >CasbinAdapterException</ref>(</highlight><highlight
          class="stringliteral"
        >"File<sp/>adapter<sp/>init<sp/>error"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"/></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a660809ce7a926d82a1b0d3ce067277d1"
            kindref="member"
          >loadPolicy</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(filePath<sp/>!=<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        ><sp/>&amp;&amp;<sp/>!</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">.equals(filePath))<sp
          />{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>(FileInputStream<sp
          />fis<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />FileInputStream(filePath))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />loadPolicyData(model,<sp/>Helper::loadPolicyLine,<sp
          />fis);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp/>(IOException<sp/>e)<sp
          />{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
            kindref="compound"
          >CasbinAdapterException</ref>(</highlight><highlight
          class="stringliteral"
        >"Load<sp/>policy<sp/>file<sp/>error"</highlight><highlight
          class="normal"
        >,<sp/>e.getCause());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(byteArrayInputStream<sp
          />!=<sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>loadPolicyData(model,<sp
          />Helper::loadPolicyLine,<sp
          />byteArrayInputStream);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"/></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a8e92b4356d57af27bac9e497163f66aa"
            kindref="member"
          >savePolicy</ref>(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(byteArrayInputStream<sp
          />!=<sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp
          />readOnly)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
            kindref="compound"
          >CasbinAdapterException</ref>(</highlight><highlight
          class="stringliteral"
        >"Policy<sp/>file<sp/>can<sp/>not<sp/>write,<sp/>because<sp/>use<sp
          />inputStream<sp/>is<sp/>readOnly"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(filePath<sp/>==<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        ><sp/>||<sp/></highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">.equals(filePath)<sp/>||<sp
          />!</highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>File(filePath).exists())<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinPolicyFileNotFoundException"
            kindref="compound"
          >CasbinPolicyFileNotFoundException</ref>(</highlight><highlight
          class="stringliteral"
        >"invalid<sp/>file<sp/>path:<sp/>"</highlight><highlight
          class="normal"
        ><sp/>+<sp/>filePath);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"/></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>policy<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>policy.addAll(getModelPolicy(model,<sp
          /></highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>policy.addAll(getModelPolicy(model,<sp
          /></highlight><highlight
          class="stringliteral"
        >"g"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>savePolicyFile(String.join(</highlight><highlight
          class="stringliteral"
        >"\n"</highlight><highlight class="normal">,<sp
          />policy));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"/></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/>getModelPolicy(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model,<sp/>String<sp/>ptype)<sp
          />{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>policy<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>model.model.get(ptype).forEach((k,<sp/>v)<sp/>-&gt;<sp
          />{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;String&gt;<sp/>p<sp/>=<sp
          />v.policy.parallelStream().map(x<sp/>-&gt;<sp/>k<sp/>+<sp
          /></highlight><highlight class="stringliteral">",<sp
          />"</highlight><highlight class="normal"><sp/>+<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a55cce24aaa11a8423ef89c8398b4df73"
            kindref="member"
          >arrayToString</ref>(x)).collect(Collectors.toList());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />policy.addAll(p);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>});</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />policy;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"/></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>loadPolicyData(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model,<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper"
            kindref="compound"
          >Helper</ref>.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1_1loadPolicyLineHandler"
            kindref="compound"
          >loadPolicyLineHandler</ref>&lt;String,<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref>&gt;<sp/>handler,<sp/>InputStream<sp/>inputStream)<sp
          />{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;String&gt;<sp/>lines<sp/>=<sp
          />IOUtils.readLines(inputStream,<sp
          />Charset.forName(</highlight><highlight
          class="stringliteral"
        >"UTF-8"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>lines.forEach(x<sp/>-&gt;<sp
          />handler.accept(x,<sp/>model));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp/>(IOException<sp/>e)<sp
          />{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />e.printStackTrace();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
            kindref="compound"
          >CasbinAdapterException</ref>(</highlight><highlight
          class="stringliteral"
        >"Policy<sp/>load<sp/>error"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"/></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>savePolicyFile(String<sp
          />text)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>(FileOutputStream<sp
          />fos<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />FileOutputStream(filePath))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>IOUtils.write(text,<sp/>fos,<sp
          />Charset.forName(</highlight><highlight
          class="stringliteral"
        >"UTF-8"</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp/>(IOException<sp/>e)<sp
          />{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />e.printStackTrace();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1exception_1_1CasbinAdapterException"
            kindref="compound"
          >CasbinAdapterException</ref>(</highlight><highlight
          class="stringliteral"
        >"Policy<sp/>save<sp/>error"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"/></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1a2eab050005e0a1eda6e70c56ead969bd"
            kindref="member"
          >addPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />UnsupportedOperationException(</highlight><highlight
          class="stringliteral"
        >"not<sp/>implemented"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"/></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1afb6b04ec5c62eff87be7d50a4126c58b"
            kindref="member"
          >removePolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          />List&lt;String&gt;<sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />UnsupportedOperationException(</highlight><highlight
          class="stringliteral"
        >"not<sp/>implemented"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1file__adapter_1_1FileAdapter_1af512fb66e4f9aa341e0d8f94d47f56db"
            kindref="member"
          >removeFilteredPolicy</ref>(String<sp/>sec,<sp/>String<sp/>ptype,<sp
          /></highlight><highlight class="keywordtype">int</highlight><highlight
          class="normal"
        ><sp/>fieldIndex,<sp/>String...<sp/>fieldValues)<sp
          />{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />UnsupportedOperationException(</highlight><highlight
          class="stringliteral"
        >"not<sp/>implemented"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/persist/file_adapter/FileAdapter.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Helper_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Helper.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper"
      prot="public"
    >org::casbin::jcasbin::persist::Helper</innerclass>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1_1loadPolicyLineHandler"
      prot="public"
    >org::casbin::jcasbin::persist::Helper::loadPolicyLineHandler</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1persist"
    >org::casbin::jcasbin::persist</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.persist;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.model.Model;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Arrays;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline
        lineno="21"
        refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper"
            kindref="compound"
          >Helper</ref><sp/>{</highlight></codeline>
<codeline
        lineno="22"
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1_1loadPolicyLineHandler"
        refkind="compound"
      ><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >interface<sp/></highlight><highlight class="normal"><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Helper_1_1loadPolicyLineHandler"
            kindref="compound"
          >loadPolicyLineHandler</ref>&lt;T,<sp/>U&gt;<sp
          />{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>accept(T<sp/>t,<sp/>U<sp
          />u);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>loadPolicyLine(String<sp
          />line,<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1model_1_1Model"
            kindref="compound"
          >Model</ref><sp/>model)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(line.equals(</highlight><highlight
          class="stringliteral"
        >""</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(line.charAt(0)<sp/>==<sp
          /></highlight><highlight class="charliteral">'#'</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String[]<sp/>tokens<sp/>=<sp
          />line.split(</highlight><highlight class="stringliteral">",<sp
          />"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"/></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key<sp/>=<sp/>tokens[0];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>sec<sp/>=<sp/>key.substring(0,<sp
          />1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp
          />model.model.get(sec).get(key).policy.add(Arrays.asList(Arrays.copyOfRange(tokens,<sp
          />1,<sp/>tokens.length)));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/persist/Helper.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Watcher_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Watcher.java</compoundname>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
      prot="public"
    >org::casbin::jcasbin::persist::Watcher</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1persist"
    >org::casbin::jcasbin::persist</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.persist;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline
        lineno="20"
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">interface<sp
          /></highlight><highlight class="normal"><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher"
            kindref="compound"
          >Watcher</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1ab5bcdb10d4aa6ed890103563d52620f8"
            kindref="member"
          >setUpdateCallback</ref>(Runnable<sp
          />runnable);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1persist_1_1Watcher_1af1985ceb985a355953fa1f34f9366fae"
            kindref="member"
          >update</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/persist/Watcher.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="DefaultRoleManager_8java"
    kind="file"
    language="Java"
  >
    <compoundname>DefaultRoleManager.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
      prot="public"
    >org::casbin::jcasbin::rbac::DefaultRoleManager</innerclass>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1Role"
      prot="package"
    >org::casbin::jcasbin::rbac::Role</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1rbac"
    >org::casbin::jcasbin::rbac</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.rbac;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.Util;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.ArrayList;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.HashMap;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/></codeline>
<codeline
        lineno="24"
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
            kindref="compound"
          >DefaultRoleManager</ref><sp/></highlight><highlight
          class="keyword"
        >implements</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>Map&lt;String,<sp/>Role&gt;<sp/>allRoles;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp
          />maxHierarchyLevel;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaaf4557a43b0a100507458ea41c9f75e"
            kindref="member"
          >DefaultRoleManager</ref>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>maxHierarchyLevel)<sp
          />{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>allRoles<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />HashMap&lt;&gt;();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.maxHierarchyLevel<sp/>=<sp
          />maxHierarchyLevel;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"/></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>hasRole(String<sp
          />name)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />allRoles.containsKey(name);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"/></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>Role<sp/>createRole(String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(hasRole(name))<sp
          />{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />allRoles.get(name);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>Role<sp/>role<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>Role(name);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>allRoles.put(name,<sp
          />role);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />role;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"/></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1adb2e1ce22c5a78af3f5b82343336ddbd"
            kindref="member"
          >clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>allRoles.clear();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"/></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1aaa0430fc0c2ce45fc084bae98a6bd68a"
            kindref="member"
          >addLink</ref>(String<sp/>name1,<sp/>String<sp/>name2,<sp
          />String...<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>==<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>name1<sp/>=<sp/>domain[0]<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal"><sp/>+<sp
          />name1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>name2<sp/>=<sp/>domain[0]<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal"><sp/>+<sp
          />name2;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>&gt;<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"error:<sp/>domain<sp/>should<sp/>be<sp/>1<sp
          />parameter"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"/></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Role<sp/>role1<sp/>=<sp
          />createRole(name1);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Role<sp/>role2<sp/>=<sp
          />createRole(name2);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>role1.addRole(role2);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a0d200f7f68e2c76222ab94f74265e3ed"
            kindref="member"
          >deleteLink</ref>(String<sp/>name1,<sp/>String<sp/>name2,<sp
          />String...<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>==<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>name1<sp/>=<sp/>domain[0]<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal"><sp/>+<sp
          />name1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>name2<sp/>=<sp/>domain[0]<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal"><sp/>+<sp
          />name2;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>&gt;<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"error:<sp/>domain<sp/>should<sp/>be<sp/>1<sp
          />parameter"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!hasRole(name1)<sp/>||<sp
          />!hasRole(name2))<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"error:<sp/>name1<sp/>or<sp/>name2<sp/>does<sp/>not<sp
          />exist"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"/></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Role<sp/>role1<sp/>=<sp
          />createRole(name1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Role<sp/>role2<sp/>=<sp
          />createRole(name2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>role1.deleteRole(role2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"/></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a069d6ba02c24429440b0d634aee97245"
            kindref="member"
          >hasLink</ref>(String<sp/>name1,<sp/>String<sp/>name2,<sp
          />String...<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>==<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>name1<sp/>=<sp/>domain[0]<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal"><sp/>+<sp
          />name1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>name2<sp/>=<sp/>domain[0]<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal"><sp/>+<sp
          />name2;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>&gt;<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"error:<sp/>domain<sp/>should<sp/>be<sp/>1<sp
          />parameter"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(name1.equals(name2))<sp
          />{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"/></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!hasRole(name1)<sp/>||<sp
          />!hasRole(name2))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"/></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Role<sp/>role1<sp/>=<sp
          />createRole(name1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />role1.hasRole(name2,<sp/>maxHierarchyLevel);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"/></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a8766f84b139b6663379c4bc07ed68537"
            kindref="member"
          >getRoles</ref>(String<sp/>name,<sp/>String...<sp/>domain)<sp
          />{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>==<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>domain[0]<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"::"</highlight><highlight class="normal"><sp/>+<sp
          />name;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>&gt;<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"error:<sp/>domain<sp/>should<sp/>be<sp/>1<sp
          />parameter"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"/></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!hasRole(name))<sp
          />{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"error:<sp/>name<sp/>does<sp/>not<sp/>exist"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>roles<sp/>=<sp
          />createRole(name).getRoles();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>==<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>roles.size();<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roles.set(i,<sp
          />roles.get(i).substring(domain[0].length()<sp/>+<sp/>2,<sp
          />roles.get(i).length()));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />roles;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"/></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>List&lt;String&gt;<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1af1d872316a2ca01bcf0a1d5bced3fc8e"
            kindref="member"
          >getUsers</ref>(String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!hasRole(name))<sp
          />{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"error:<sp/>name<sp/>does<sp/>not<sp/>exist"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"/></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>names<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Role<sp/>role<sp/>:<sp
          />allRoles.values())<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(role.hasDirectRole(name))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />names.add(role.name);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />names;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"/></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager_1a14b51545213a7ba2180eb3440cc28483"
            kindref="member"
          >printRoles</ref>()<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Role<sp/>role<sp/>:<sp
          />allRoles.values())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
            kindref="member"
          >logPrint</ref>(role.toString());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="keyword">class<sp
          /></highlight><highlight class="normal">Role<sp
          />{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp
          />name;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/>List&lt;Role&gt;<sp/>roles;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"/></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keyword"
        >protected</highlight><highlight class="normal"><sp/>Role(String<sp
          />name)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>this.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>roles<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"/></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>addRole(Role<sp
          />role)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Role<sp/>r<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(r.name.equals(role.name))<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"/></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>roles.add(role);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"/></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/>deleteRole(Role<sp
          />role)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Role<sp/>r<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(r.name.equals(role.name))<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />roles.remove(r);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"/></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>hasRole(String<sp
          />name,<sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>hierarchyLevel)<sp
          />{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(this.name.equals(name))<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(hierarchyLevel<sp
          />&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"/></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Role<sp/>role<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(role.hasRole(name,<sp
          />hierarchyLevel<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"/></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp
          />hasDirectRole(String<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Role<sp/>r<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(r.name.equals(name))<sp
          />{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"/></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"/></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>toString()<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>StringBuilder<sp/>names<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />StringBuilder();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>roles.size();<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>Role<sp/>role<sp/>=<sp
          />roles.get(i);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp
          />{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />names.append(role.name);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />names.append(</highlight><highlight class="stringliteral">",<sp
          />"</highlight><highlight class="normal"><sp/>+<sp
          />role.name);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>name<sp/>+<sp
          /></highlight><highlight class="stringliteral">"<sp/>&lt;<sp
          />"</highlight><highlight class="normal"><sp/>+<sp
          />names;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"/></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp
          />List&lt;String&gt;<sp/>getRoles()<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>List&lt;String&gt;<sp/>names<sp/>=<sp
          /></highlight><highlight class="keyword">new</highlight><highlight
          class="normal"
        ><sp/>ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(Role<sp/>r<sp/>:<sp
          />roles)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />names.add(r.name);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />names;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/rbac/DefaultRoleManager.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="GroupRoleManager_8java"
    kind="file"
    language="Java"
  >
    <compoundname>GroupRoleManager.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
      prot="public"
    >org::casbin::jcasbin::rbac::GroupRoleManager</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1rbac"
    >org::casbin::jcasbin::rbac</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.rbac;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.ArrayList;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Optional;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/></codeline>
<codeline
        lineno="34"
        refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager"
            kindref="compound"
          >GroupRoleManager</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1DefaultRoleManager"
            kindref="compound"
          >DefaultRoleManager</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1af13cb15a72c28b9f2e83992028f1b674"
            kindref="member"
          >GroupRoleManager</ref>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>maxHierarchyLevel)<sp
          />{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>super(maxHierarchyLevel);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp
          />@Override</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1a4e780344ad82bf2a4b49d407d49c2dcb"
            kindref="member"
          >hasLink</ref>(String<sp/>name1,<sp/>String<sp/>name2,<sp
          />String...<sp/>domain)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal">(super.hasLink(name1,<sp
          />name2,<sp/>domain))<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp
          />name1's<sp/>groups</highlight><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(domain.length<sp/>==<sp
          />1)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />List&lt;String&gt;<sp/>groups<sp/>=<sp
          />Optional.ofNullable(super.getRoles(name1)).orElse(</highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">for</highlight><highlight
          class="normal"
        >(String<sp/>group<sp/>:<sp/>groups)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        >(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1rbac_1_1GroupRoleManager_1a4e780344ad82bf2a4b49d407d49c2dcb"
            kindref="member"
          >hasLink</ref>(group,<sp/>name2,<sp/>domain))<sp
          />{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(IllegalArgumentException<sp/>ignore)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/rbac/GroupRoleManager.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="RoleManager_8java"
    kind="file"
    language="Java"
  >
    <compoundname>RoleManager.java</compoundname>
    <innerclass
      refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
      prot="public"
    >org::casbin::jcasbin::rbac::RoleManager</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1rbac"
    >org::casbin::jcasbin::rbac</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/></codeline>
<codeline lineno="16"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.rbac;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"/></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline
        lineno="20"
        refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >interface<sp/></highlight><highlight class="normal"><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a1bb68d3bdce84bc21110725673d731aa"
            kindref="member"
          >clear</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1ab69982204040ce3b3fd09cf8f56e65ce"
            kindref="member"
          >addLink</ref>(String<sp/>name1,<sp/>String<sp/>name2,<sp
          />String...<sp/>domain);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a222054d3e31e22433769bb816a6562fa"
            kindref="member"
          >deleteLink</ref>(String<sp/>name1,<sp/>String<sp/>name2,<sp
          />String...<sp/>domain);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"/></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4c51b427abdef1cfe387fcf1b07ebf95"
            kindref="member"
          >hasLink</ref>(String<sp/>name1,<sp/>String<sp/>name2,<sp
          />String...<sp/>domain);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"/></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp
          />List&lt;String&gt;<sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4bafb8b27fa71cb00f3e937475071720"
            kindref="member"
          >getRoles</ref>(String<sp/>name,<sp/>String...<sp
          />domain);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp
          />List&lt;String&gt;<sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1aad0e8d6fe9ecbed760b9ff3d171d4e6c"
            kindref="member"
          >getUsers</ref>(String<sp/>name);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1add0e9a35984db53028db92d0d52fd9fd"
            kindref="member"
          >printRoles</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/rbac/RoleManager.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="BuiltInFunctions_8java"
    kind="file"
    language="Java"
  >
    <compoundname>BuiltInFunctions.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
      prot="public"
    >org::casbin::jcasbin::util::BuiltInFunctions</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util"
    >org::casbin::jcasbin::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.util;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.AbstractFunction;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.FunctionUtils;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorBoolean;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorFunction;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorObject;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />inet.ipaddr.AddressStringException;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />inet.ipaddr.IPAddress;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />inet.ipaddr.IPAddressString;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.rbac.RoleManager;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"/></codeline>
<codeline lineno="27"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.regex.Pattern;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"/></codeline>
<codeline
        lineno="30"
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
            kindref="compound"
          >BuiltInFunctions</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1ad3b0cc2caf9116609608cce5e056222e"
            kindref="member"
          >keyMatch</ref>(String<sp/>key1,<sp/>String<sp/>key2)<sp
          />{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp
          />key2.indexOf(</highlight><highlight
          class="charliteral"
        >'*'</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>-1)<sp
          />{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />key1.equals(key2);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"/></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(key1.length()<sp/>&gt;<sp
          />i)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/>key1.substring(0,<sp
          />i).equals(key2.substring(0,<sp/>i));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />key1.equals(key2.substring(0,<sp/>i));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"/></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a1d6b92decc432e14336302bab32d5dab"
            kindref="member"
          >keyMatch2</ref>(String<sp/>key1,<sp/>String<sp/>key2)<sp
          />{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>key2<sp/>=<sp/>key2.replace(</highlight><highlight
          class="stringliteral"
        >"/*"</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"/.*"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"/></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Pattern<sp/>p<sp/>=<sp
          />Pattern.compile(</highlight><highlight
          class="stringliteral"
        >"(.*):[^/]+(.*)"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >while</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(!key2.contains(</highlight><highlight
          class="stringliteral"
        >"/:"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"/></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>key2<sp/>=<sp/></highlight><highlight
          class="stringliteral"
        >"^"</highlight><highlight class="normal"><sp/>+<sp
          />p.matcher(key2).replaceAll(</highlight><highlight
          class="stringliteral"
        >"$1[^/]+$2"</highlight><highlight class="normal">)<sp/>+<sp
          /></highlight><highlight
          class="stringliteral"
        >"$"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"/></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a683174246e119af38b41fedba08bcdc8"
            kindref="member"
          >regexMatch</ref>(key1,<sp/>key2);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"/></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a6b3fc9b8463a69c7a2bbae2f796041ea"
            kindref="member"
          >keyMatch3</ref>(String<sp/>key1,<sp/>String<sp/>key2)<sp
          />{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>key2<sp/>=<sp/>key2.replace(</highlight><highlight
          class="stringliteral"
        >"/*"</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"/.*"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Pattern<sp/>p<sp/>=<sp
          />Pattern.compile(</highlight><highlight
          class="stringliteral"
        >"(.*)\\{[^/]+\\}(.*)"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >while</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(!key2.contains(</highlight><highlight
          class="stringliteral"
        >"/{"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"/></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>key2<sp/>=<sp
          />p.matcher(key2).replaceAll(</highlight><highlight
          class="stringliteral"
        >"$1[^/]+$2"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"/></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a683174246e119af38b41fedba08bcdc8"
            kindref="member"
          >regexMatch</ref>(key1,<sp/>key2);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"/></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a683174246e119af38b41fedba08bcdc8"
            kindref="member"
          >regexMatch</ref>(String<sp/>key1,<sp/>String<sp/>key2)<sp
          />{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />Pattern.matches(key2,<sp/>key1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"/></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a244159f15004c80f7f98ec87230484ef"
            kindref="member"
          >ipMatch</ref>(String<sp/>ip1,<sp/>String<sp/>ip2)<sp
          />{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>IPAddressString<sp/>ipas1<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IPAddressString(ip1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />ipas1.validateIPv4();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(AddressStringException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />e.printStackTrace();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"invalid<sp/>argument:<sp/>ip1<sp/>in<sp/>IPMatch()<sp/>function<sp
          />is<sp/>not<sp/>an<sp/>IP<sp/>address."</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>IPAddressString<sp/>ipas2<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IPAddressString(ip2);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />ipas2.validate();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(AddressStringException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />e.printStackTrace();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"invalid<sp/>argument:<sp/>ip2<sp/>in<sp/>IPMatch()<sp/>function<sp
          />is<sp/>neither<sp/>an<sp/>IP<sp/>address<sp/>nor<sp/>a<sp
          />CIDR."</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"/></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(ipas1.equals(ipas2))<sp
          />{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"/></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>IPAddress<sp/>ipa1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>IPAddress<sp/>ipa2;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>ipa1<sp/>=<sp
          />ipas1.toAddress();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>ipa2<sp/>=<sp
          />ipas2.toAddress();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}<sp/></highlight><highlight
          class="keywordflow"
        >catch</highlight><highlight class="normal"><sp
          />(AddressStringException<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />e.printStackTrace();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >throw</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />IllegalArgumentException(</highlight><highlight
          class="stringliteral"
        >"invalid<sp/>argument:<sp/>ip1<sp/>or<sp/>ip2<sp/>in<sp/>IPMatch()<sp
          />function<sp/>is<sp/>not<sp/>an<sp/>IP<sp
          />address."</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"/></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Integer<sp/>prefix<sp/>=<sp
          />ipa2.getNetworkPrefixLength();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>IPAddress<sp/>mask<sp/>=<sp
          />ipa2.getNetwork().getNetworkMask(prefix,<sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />ipa1.mask(mask).equals(ipas2.getHostAddress());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"/></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/>AviatorFunction<sp
          /><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a613b361b84d46c67f866ad0fb03fee16"
            kindref="member"
          >generateGFunction</ref>(String<sp/>name,<sp/><ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager"
            kindref="compound"
          >RoleManager</ref><sp/>rm)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp/>AbstractFunction()<sp
          />{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/>AviatorObject<sp
          />call(Map&lt;String,<sp/>Object&gt;<sp/>env,<sp/>AviatorObject<sp
          />arg1,<sp/>AviatorObject<sp/>arg2)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />name1<sp/>=<sp/>FunctionUtils.getStringValue(arg1,<sp
          />env);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />name2<sp/>=<sp/>FunctionUtils.getStringValue(arg2,<sp
          />env);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"/></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(rm<sp/>==<sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(name1.equals(name2));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp
          /></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>rm.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4c51b427abdef1cfe387fcf1b07ebf95"
            kindref="member"
          >hasLink</ref>(name1,<sp/>name2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(res);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"/></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/>AviatorObject<sp
          />call(Map&lt;String,<sp/>Object&gt;<sp/>env,<sp/>AviatorObject<sp
          />arg1,<sp/>AviatorObject<sp/>arg2,<sp/>AviatorObject<sp/>arg3)<sp
          />{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />name1<sp/>=<sp/>FunctionUtils.getStringValue(arg1,<sp
          />env);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp
          />name2<sp/>=<sp/>FunctionUtils.getStringValue(arg2,<sp
          />env);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"/></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight class="keywordflow">if</highlight><highlight
          class="normal"
        ><sp/>(rm<sp/>==<sp/></highlight><highlight
          class="keyword"
        >null</highlight><highlight class="normal">)<sp
          />{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(name1.equals(name2));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp
          /></highlight><highlight
          class="keywordflow"
        >else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />String<sp/>domain<sp/>=<sp/>FunctionUtils.getStringValue(arg3,<sp
          />env);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>rm.<ref
            refid="interfaceorg_1_1casbin_1_1jcasbin_1_1rbac_1_1RoleManager_1a4c51b427abdef1cfe387fcf1b07ebf95"
            kindref="member"
          >hasLink</ref>(name1,<sp/>name2,<sp/>domain);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(res);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/>String<sp
          />getName()<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />name;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/util/BuiltInFunctions.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="IPMatchFunc_8java"
    kind="file"
    language="Java"
  >
    <compoundname>IPMatchFunc.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
      prot="public"
    >org::casbin::jcasbin::util::function::IPMatchFunc</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util_1_1function"
    >org::casbin::jcasbin::util::function</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.util.function;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.AbstractFunction;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.FunctionUtils;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorBoolean;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorObject;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.BuiltInFunctions;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline
        lineno="28"
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1IPMatchFunc"
            kindref="compound"
          >IPMatchFunc</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>AbstractFunction<sp
          />{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>AviatorObject<sp/>call(Map&lt;String,<sp/>Object&gt;<sp/>env,<sp
          />AviatorObject<sp/>arg1,<sp/>AviatorObject<sp/>arg2)<sp
          />{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>ip1<sp/>=<sp
          />FunctionUtils.getStringValue(arg1,<sp/>env);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>ip2<sp/>=<sp
          />FunctionUtils.getStringValue(arg2,<sp/>env);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
            kindref="compound"
          >BuiltInFunctions</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a244159f15004c80f7f98ec87230484ef"
            kindref="member"
          >ipMatch</ref>(ip1,<sp/>ip2));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>getName()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="stringliteral"
        >"ipMatch"</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/IPMatchFunc.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="KeyMatch2Func_8java"
    kind="file"
    language="Java"
  >
    <compoundname>KeyMatch2Func.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
      prot="public"
    >org::casbin::jcasbin::util::function::KeyMatch2Func</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util_1_1function"
    >org::casbin::jcasbin::util::function</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.util.function;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.AbstractFunction;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.FunctionUtils;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorBoolean;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorObject;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.BuiltInFunctions;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline
        lineno="28"
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch2Func"
            kindref="compound"
          >KeyMatch2Func</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>AbstractFunction<sp
          />{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>AviatorObject<sp/>call(Map&lt;String,<sp/>Object&gt;<sp/>env,<sp
          />AviatorObject<sp/>arg1,<sp/>AviatorObject<sp/>arg2)<sp
          />{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key1<sp/>=<sp
          />FunctionUtils.getStringValue(arg1,<sp/>env);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key2<sp/>=<sp
          />FunctionUtils.getStringValue(arg2,<sp/>env);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
            kindref="compound"
          >BuiltInFunctions</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a1d6b92decc432e14336302bab32d5dab"
            kindref="member"
          >keyMatch2</ref>(key1,<sp/>key2));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>getName()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="stringliteral"
        >"keyMatch2"</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/KeyMatch2Func.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="KeyMatch3Func_8java"
    kind="file"
    language="Java"
  >
    <compoundname>KeyMatch3Func.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func"
      prot="public"
    >org::casbin::jcasbin::util::function::KeyMatch3Func</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util_1_1function"
    >org::casbin::jcasbin::util::function</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.util.function;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.AbstractFunction;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.FunctionUtils;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorBoolean;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorObject;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.BuiltInFunctions;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline
        lineno="28"
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatch3Func"
            kindref="compound"
          >KeyMatch3Func</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>AbstractFunction<sp
          />{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>AviatorObject<sp/>call(Map&lt;String,<sp/>Object&gt;<sp/>env,<sp
          />AviatorObject<sp/>arg1,<sp/>AviatorObject<sp/>arg2)<sp
          />{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key1<sp/>=<sp
          />FunctionUtils.getStringValue(arg1,<sp/>env);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key2<sp/>=<sp
          />FunctionUtils.getStringValue(arg2,<sp/>env);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
            kindref="compound"
          >BuiltInFunctions</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a6b3fc9b8463a69c7a2bbae2f796041ea"
            kindref="member"
          >keyMatch3</ref>(key1,<sp/>key2));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>getName()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="stringliteral"
        >"keyMatch3"</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/KeyMatch3Func.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="KeyMatchFunc_8java"
    kind="file"
    language="Java"
  >
    <compoundname>KeyMatchFunc.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
      prot="public"
    >org::casbin::jcasbin::util::function::KeyMatchFunc</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util_1_1function"
    >org::casbin::jcasbin::util::function</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.util.function;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.AbstractFunction;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.FunctionUtils;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorBoolean;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorObject;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.BuiltInFunctions;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline
        lineno="28"
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1KeyMatchFunc"
            kindref="compound"
          >KeyMatchFunc</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>AbstractFunction<sp
          />{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>AviatorObject<sp/>call(Map&lt;String,<sp/>Object&gt;<sp/>env,<sp
          />AviatorObject<sp/>arg1,<sp/>AviatorObject<sp/>arg2)<sp
          />{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key1<sp/>=<sp
          />FunctionUtils.getStringValue(arg1,<sp/>env);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key2<sp/>=<sp
          />FunctionUtils.getStringValue(arg2,<sp/>env);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
            kindref="compound"
          >BuiltInFunctions</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1ad3b0cc2caf9116609608cce5e056222e"
            kindref="member"
          >keyMatch</ref>(key1,<sp/>key2));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>getName()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="stringliteral"
        >"keyMatch"</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/KeyMatchFunc.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="RegexMatchFunc_8java"
    kind="file"
    language="Java"
  >
    <compoundname>RegexMatchFunc.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
      prot="public"
    >org::casbin::jcasbin::util::function::RegexMatchFunc</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util_1_1function"
    >org::casbin::jcasbin::util::function</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.util.function;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.AbstractFunction;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.function.FunctionUtils;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorBoolean;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />com.googlecode.aviator.runtime.type.AviatorObject;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.casbin.jcasbin.util.BuiltInFunctions;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Map;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/></codeline>
<codeline
        lineno="28"
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
        refkind="compound"
      ><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight class="keyword">class<sp
          /></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1function_1_1RegexMatchFunc"
            kindref="compound"
          >RegexMatchFunc</ref><sp/></highlight><highlight
          class="keyword"
        >extends</highlight><highlight class="normal"><sp/>AbstractFunction<sp
          />{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>AviatorObject<sp/>call(Map&lt;String,<sp/>Object&gt;<sp/>env,<sp
          />AviatorObject<sp/>arg1,<sp/>AviatorObject<sp/>arg2)<sp
          />{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key1<sp/>=<sp
          />FunctionUtils.getStringValue(arg1,<sp/>env);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>key2<sp/>=<sp
          />FunctionUtils.getStringValue(arg2,<sp/>env);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"/></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />AviatorBoolean.valueOf(<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions"
            kindref="compound"
          >BuiltInFunctions</ref>.<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1BuiltInFunctions_1a683174246e119af38b41fedba08bcdc8"
            kindref="member"
          >regexMatch</ref>(key1,<sp/>key2));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/>String<sp/>getName()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="stringliteral"
        >"regexMatch"</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location
      file="src/main/java/org/casbin/jcasbin/util/function/RegexMatchFunc.java"
    />
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="Util_8java"
    kind="file"
    language="Java"
  >
    <compoundname>Util.java</compoundname>
    <innerclass
      refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
      prot="public"
    >org::casbin::jcasbin::util::Util</innerclass>
    <innernamespace
      refid="namespaceorg_1_1casbin_1_1jcasbin_1_1util"
    >org::casbin::jcasbin::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2018<sp
          />The<sp/>casbin<sp/>Authors.<sp/>All<sp/>Rights<sp
          />Reserved.</highlight><highlight class="normal"/></codeline>
<codeline lineno="2"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="3"><highlight class="normal"/><highlight class="comment">//<sp
          />Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp
          />2.0<sp/>(the<sp/>"License");</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="4"><highlight class="normal"/><highlight class="comment">//<sp
          />you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp
          />compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="5"><highlight class="normal"/><highlight class="comment">//<sp
          />You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp
          />at</highlight><highlight class="normal"/></codeline>
<codeline lineno="6"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="7"><highlight class="normal"/><highlight class="comment">//<sp
          /><sp/><sp/><sp/><sp/><sp
          />http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="8"><highlight class="normal"/><highlight
          class="comment"
        >//</highlight><highlight class="normal"/></codeline>
<codeline lineno="9"><highlight class="normal"/><highlight class="comment">//<sp
          />Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp
          />agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="10"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp
          />distributed<sp/>on<sp/>an<sp/>"AS<sp/>IS"<sp
          />BASIS,</highlight><highlight class="normal"/></codeline>
<codeline lineno="11"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp
          />KIND,<sp/>either<sp/>express<sp/>or<sp
          />implied.</highlight><highlight class="normal"/></codeline>
<codeline lineno="12"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp
          />language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="13"><highlight class="normal"/><highlight
          class="comment"
        >//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="14"><highlight class="normal"/></codeline>
<codeline lineno="15"><highlight class="normal"/><highlight
          class="keyword"
        >package<sp/></highlight><highlight
          class="normal"
        >org.casbin.jcasbin.util;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"/></codeline>
<codeline lineno="17"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.slf4j.Logger;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />org.slf4j.LoggerFactory;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"/></codeline>
<codeline lineno="20"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.ArrayList;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.Collections;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.List;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.regex.Matcher;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"/><highlight
          class="keyword"
        >import</highlight><highlight class="normal"><sp
          />java.util.regex.Pattern;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"/></codeline>
<codeline
        lineno="26"
        refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
        refkind="compound"
      ><highlight class="normal"/><highlight
          class="keyword"
        >public</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >class<sp/></highlight><highlight class="normal"><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util"
            kindref="compound"
          >Util</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/>enableLog<sp/>=<sp
          /></highlight><highlight class="keyword">true</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"/></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">private</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/>Logger<sp/>LOGGER<sp
          />=<sp/>LoggerFactory.getLogger(</highlight><highlight
          class="stringliteral"
        >"org.casbin.jcasbin"</highlight><highlight
          class="normal"
        >);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"/></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ac0dacd1c41a9f95ac5db29c8ec2b123d"
            kindref="member"
          >logPrint</ref>(String<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(enableLog)<sp
          />{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.info(v);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"/></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a849147e952262ef9365c1729fe32f127"
            kindref="member"
          >logPrintf</ref>(String<sp/>format,<sp/>String...<sp/>v)<sp
          />{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(enableLog)<sp
          />{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>tmp<sp/>=<sp
          />String.format(format,<sp/>(Object[])<sp/>v);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp
          />LOGGER.info(tmp);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"/></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a16fdedd998c638ef66eb3a3ec06606a8"
            kindref="member"
          >logPrintfWarn</ref>(String<sp/>format,<sp/>Object...<sp/>v)<sp
          />{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(enableLog)<sp
          />{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.warn(format,<sp
          />v);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"/></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >void</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a4e4547be27c54184a7f481c27d62d589"
            kindref="member"
          >logPrintfError</ref>(String<sp/>format,<sp/>Object...<sp/>v)<sp
          />{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(enableLog)<sp
          />{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>LOGGER.error(format,<sp
          />v);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"/></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/>String<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aec3f5061f47a286ca2e765e23d0c278d"
            kindref="member"
          >escapeAssertion</ref>(String<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight class="comment">//Replace<sp
          />the<sp/>first<sp/>dot,<sp/>because<sp/>the<sp/>string<sp/>doesn't<sp
          />start<sp/>with<sp/>"m="</highlight><highlight
          class="normal"
        /></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp
          />is<sp/>not<sp/>covered<sp/>by<sp/>the<sp
          />regex.</highlight><highlight class="normal"/></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(s.startsWith(</highlight><highlight
          class="stringliteral"
        >"r"</highlight><highlight class="normal">)<sp/>||<sp
          />s.startsWith(</highlight><highlight
          class="stringliteral"
        >"p"</highlight><highlight class="normal">))<sp
          />{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp
          />s.replaceFirst(</highlight><highlight
          class="stringliteral"
        >"\\."</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"_"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>String<sp/>regex<sp/>=<sp/></highlight><highlight
          class="stringliteral"
        >"(\\||<sp
          />|=|\\)|\\(|&amp;|&lt;|&gt;|,|\\+|-|!|\\*|\\/)(r|p)\\."</highlight><highlight
          class="normal"
        >;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Pattern<sp/>p<sp/>=<sp
          />Pattern.compile(regex);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Matcher<sp/>m<sp/>=<sp
          />p.matcher(s);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>StringBuffer<sp/>sb<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />StringBuffer();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"/></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >while</highlight><highlight class="normal"><sp/>(m.find())<sp
          />{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>m.appendReplacement(sb,<sp
          />m.group().replace(</highlight><highlight
          class="stringliteral"
        >"."</highlight><highlight class="normal">,<sp/></highlight><highlight
          class="stringliteral"
        >"_"</highlight><highlight class="normal">)<sp
          />);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>m.appendTail(sb);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />sb.toString();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"/></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/>String<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1aae19f22e52ad25f51300d059c31233fb"
            kindref="member"
          >removeComments</ref>(String<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp
          />s.indexOf(</highlight><highlight
          class="stringliteral"
        >"#"</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>-1)<sp
          />{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />s;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />s.substring(0,pos).trim();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"/></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a37ca1deb8c25172b84b6d901ef4eab13"
            kindref="member"
          >arrayEquals</ref>(List&lt;String&gt;<sp/>a,<sp/>List&lt;String&gt;<sp
          />b)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(a.size()<sp/>!=<sp
          />b.size())<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"/></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>a.size();<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(!a.get(i).equals(b.get(i)))<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"/></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a94ae405cfc45ac3d7525e3ad0d4095b1"
            kindref="member"
          >array2DEquals</ref>(List&lt;List&lt;String&gt;&gt;<sp/>a,<sp
          />List&lt;List&lt;String&gt;&gt;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(a.size()<sp/>!=<sp
          />b.size())<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"/></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>a.size();<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(!<ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a37ca1deb8c25172b84b6d901ef4eab13"
            kindref="member"
          >arrayEquals</ref>(a.get(i),<sp/>b.get(i)))<sp
          />{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"/></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a0115f548d793492680b6e01a32d6909b"
            kindref="member"
          >arrayRemoveDuplicates</ref>(List&lt;String&gt;<sp/>s)<sp
          />{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"/></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/>String<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a55cce24aaa11a8423ef89c8398b4df73"
            kindref="member"
          >arrayToString</ref>(List&lt;String&gt;<sp/>s)<sp
          />{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />String.join(</highlight><highlight class="stringliteral">",<sp
          />"</highlight><highlight class="normal">,<sp
          />s);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"/></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/>String<sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1ad91833b9e9ed7e554c34eea1eb86caa8"
            kindref="member"
          >paramsToString</ref>(String[]<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp
          />String.join(</highlight><highlight class="stringliteral">",<sp
          />"</highlight><highlight class="normal">,<sp
          />s);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"/></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp
          /></highlight><highlight class="keyword">public</highlight><highlight
          class="normal"
        ><sp/></highlight><highlight
          class="keyword"
        >static</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keywordtype"
        >boolean</highlight><highlight class="normal"><sp/><ref
            refid="classorg_1_1casbin_1_1jcasbin_1_1util_1_1Util_1a41ac163bf78120ed5287ff18fb304dde"
            kindref="member"
          >setEquals</ref>(List&lt;String&gt;<sp/>a,<sp/>List&lt;String&gt;<sp
          />b)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp
          /></highlight><highlight class="keyword">null</highlight><highlight
          class="normal"
        >)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/></highlight><highlight
          class="keyword"
        >new</highlight><highlight class="normal"><sp
          />ArrayList&lt;&gt;();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp/>(a.size()<sp/>!=<sp
          />b.size())<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"/></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Collections.sort(a);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>Collections.sort(b);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"/></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >for</highlight><highlight class="normal"><sp/>(</highlight><highlight
          class="keywordtype"
        >int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp
          />&lt;<sp/>a.size();<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight
          class="keywordflow"
        >if</highlight><highlight class="normal"><sp
          />(!a.get(i).equals(b.get(i)))<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp
          /></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp
          /><sp/><sp/></highlight><highlight
          class="keywordflow"
        >return</highlight><highlight class="normal"><sp/></highlight><highlight
          class="keyword"
        >true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp
          />}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/java/org/casbin/jcasbin/util/Util.java"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_72d559b15ee9bc898268bbee9be2232e"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin</compoundname>
    <innerdir
      refid="dir_9d85ddccc474cca970875e17ed532e6d"
    >src/main/java/org/casbin/jcasbin</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_749068ca56cb928e828c9dc534134cdb"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/config</compoundname>
    <innerfile refid="Config_8java">Config.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/config/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_0c11e40b461062e92b3773e68133ddee"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/effect</compoundname>
    <innerfile refid="DefaultEffector_8java">DefaultEffector.java</innerfile>
    <innerfile refid="Effect_8java">Effect.java</innerfile>
    <innerfile refid="Effector_8java">Effector.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/effect/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_cba873c231b902b0e2fc6702cceec948"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/exception</compoundname>
    <innerfile
      refid="CasbinAdapterException_8java"
    >CasbinAdapterException.java</innerfile>
    <innerfile
      refid="CasbinConfigException_8java"
    >CasbinConfigException.java</innerfile>
    <innerfile
      refid="CasbinMatcherException_8java"
    >CasbinMatcherException.java</innerfile>
    <innerfile
      refid="CasbinPolicyFileNotFoundException_8java"
    >CasbinPolicyFileNotFoundException.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/exception/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_7d99395cfb346c5d74e1ed8d15ff6d6e"
    kind="dir"
  >
    <compoundname
    >src/main/java/org/casbin/jcasbin/persist/file_adapter</compoundname>
    <innerfile refid="FileAdapter_8java">FileAdapter.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/persist/file_adapter/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_3a9c3e75025ab73f475d594830ce82a1"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/util/function</compoundname>
    <innerfile refid="IPMatchFunc_8java">IPMatchFunc.java</innerfile>
    <innerfile refid="KeyMatch2Func_8java">KeyMatch2Func.java</innerfile>
    <innerfile refid="KeyMatch3Func_8java">KeyMatch3Func.java</innerfile>
    <innerfile refid="KeyMatchFunc_8java">KeyMatchFunc.java</innerfile>
    <innerfile refid="RegexMatchFunc_8java">RegexMatchFunc.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/util/function/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_fd3f6763802dee1ad875f6c80eac0bda"
    kind="dir"
  >
    <compoundname>src/main/java</compoundname>
    <innerdir
      refid="dir_daf7592b8ade76cad5a1e82d805df54b"
    >src/main/java/org</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_9d85ddccc474cca970875e17ed532e6d"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin</compoundname>
    <innerdir
      refid="dir_749068ca56cb928e828c9dc534134cdb"
    >src/main/java/org/casbin/jcasbin/config</innerdir>
    <innerdir
      refid="dir_0c11e40b461062e92b3773e68133ddee"
    >src/main/java/org/casbin/jcasbin/effect</innerdir>
    <innerdir
      refid="dir_cba873c231b902b0e2fc6702cceec948"
    >src/main/java/org/casbin/jcasbin/exception</innerdir>
    <innerdir
      refid="dir_44a2b3c643f37bb6cb6d1e5716e4e47a"
    >src/main/java/org/casbin/jcasbin/main</innerdir>
    <innerdir
      refid="dir_8eb047a787437021afd37dcb95aca7aa"
    >src/main/java/org/casbin/jcasbin/model</innerdir>
    <innerdir
      refid="dir_28695867b3f9c7dc71cdd3cb82b4d15a"
    >src/main/java/org/casbin/jcasbin/persist</innerdir>
    <innerdir
      refid="dir_bac4fb7fb108d67ae4f1ba4fb3531081"
    >src/main/java/org/casbin/jcasbin/rbac</innerdir>
    <innerdir
      refid="dir_e5f69905e43169acc58ff2e6ccb71f4e"
    >src/main/java/org/casbin/jcasbin/util</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_44a2b3c643f37bb6cb6d1e5716e4e47a"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/main</compoundname>
    <innerfile refid="CoreEnforcer_8java">CoreEnforcer.java</innerfile>
    <innerfile refid="Enforcer_8java">Enforcer.java</innerfile>
    <innerfile refid="InternalEnforcer_8java">InternalEnforcer.java</innerfile>
    <innerfile
      refid="ManagementEnforcer_8java"
    >ManagementEnforcer.java</innerfile>
    <innerfile refid="SyncedEnforcer_8java">SyncedEnforcer.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/main/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_5eb159725f84c66aafd839904a4acdd0"
    kind="dir"
  >
    <compoundname>src/main</compoundname>
    <innerdir
      refid="dir_fd3f6763802dee1ad875f6c80eac0bda"
    >src/main/java</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_8eb047a787437021afd37dcb95aca7aa"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/model</compoundname>
    <innerfile refid="Assertion_8java">Assertion.java</innerfile>
    <innerfile refid="FunctionMap_8java">FunctionMap.java</innerfile>
    <innerfile refid="Model_8java">Model.java</innerfile>
    <innerfile refid="Policy_8java">Policy.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/model/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_daf7592b8ade76cad5a1e82d805df54b"
    kind="dir"
  >
    <compoundname>src/main/java/org</compoundname>
    <innerdir
      refid="dir_72d559b15ee9bc898268bbee9be2232e"
    >src/main/java/org/casbin</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_28695867b3f9c7dc71cdd3cb82b4d15a"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/persist</compoundname>
    <innerdir
      refid="dir_7d99395cfb346c5d74e1ed8d15ff6d6e"
    >src/main/java/org/casbin/jcasbin/persist/file_adapter</innerdir>
    <innerfile refid="Adapter_8java">Adapter.java</innerfile>
    <innerfile refid="Helper_8java">Helper.java</innerfile>
    <innerfile refid="Watcher_8java">Watcher.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/persist/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_bac4fb7fb108d67ae4f1ba4fb3531081"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/rbac</compoundname>
    <innerfile
      refid="DefaultRoleManager_8java"
    >DefaultRoleManager.java</innerfile>
    <innerfile refid="GroupRoleManager_8java">GroupRoleManager.java</innerfile>
    <innerfile refid="RoleManager_8java">RoleManager.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/rbac/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_68267d1309a1af8e8297ef4c3efbcdba"
    kind="dir"
  >
    <compoundname>src</compoundname>
    <innerdir refid="dir_5eb159725f84c66aafd839904a4acdd0">src/main</innerdir>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/"/>
  </compounddef><compounddef
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    id="dir_e5f69905e43169acc58ff2e6ccb71f4e"
    kind="dir"
  >
    <compoundname>src/main/java/org/casbin/jcasbin/util</compoundname>
    <innerdir
      refid="dir_3a9c3e75025ab73f475d594830ce82a1"
    >src/main/java/org/casbin/jcasbin/util/function</innerdir>
    <innerfile refid="BuiltInFunctions_8java">BuiltInFunctions.java</innerfile>
    <innerfile refid="Util_8java">Util.java</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/java/org/casbin/jcasbin/util/"/>
  </compounddef></doxygen>
